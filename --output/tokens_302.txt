('COMMENT', ' _aircraft.gsc')
('NEWLINE', '\n')
('COMMENT', ' Sets up the behavior for the following aircraft:')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' US:\t\t\t\tCorsair, Avenger')
('NEWLINE', '\n')
('COMMENT', ' Japanese:\tBetty Bomber, Zero, Zero "Rufe", Tenzan Torpedo Bomber, Mavis Flying Boat')
('NEWLINE', '\n')
('COMMENT', ' German:\t\tMe-109, Stuka')
('NEWLINE', '\n')
('COMMENT', ' British:\t\tMosquito')
('NEWLINE', '\n')
('COMMENT', ' Russuan: \tIL-2')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' Notes:\t\t- Ask about splitting this up for various aircraft (what about sounds?)')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\t\t- Make sure we get tags set up on each plane')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\t\t- basing team on model kinda sucks but makes sense...')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\t\t- people will need to pass in stuka for now')
('NEWLINE', '\n')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_vehicle_aianim')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_vehicle')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'main')
('LPAREN', '(')
('IDENTIFIER', 'model')
('COMMA', ',')
('IDENTIFIER', 'type')
('COMMA', ',')
('IDENTIFIER', 'max_turrets')
('COMMA', ',')
('IDENTIFIER', 'build_bombs')
('COMMA', ',')
('IDENTIFIER', 'non_default_turret_type')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'build_template')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stuka')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'model')
('COMMA', ',')
('IDENTIFIER', 'type')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_localinit')
('LPAREN', '(')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'init_local')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_usa_aircraft_f4ucorsair')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vehicle_usa_aircraft_f4ucorsair')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_usa_aircraft_pel1_f4ucorsair')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vehicle_usa_aircraft_pel1_f4ucorsair')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_usa_aircraft_f4ucorsair_dist')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vehicle_usa_aircraft_f4ucorsair_dist')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_stuka_flying')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vehicle_stuka_flying')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_p51_mustang')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vehicle_p51_mustang')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_spitfire_flying')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vehicle_spitfire_flying')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_rus_airplane_il2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vehicle_rus_airplane_il2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_jap_airplane_rufe_fly')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vehicle_jap_airplane_rufe_fly')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_brt_aircraft_spitfire')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vehicle_brt_aircraft_spitfire')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon_ger_panzershreck_rocket')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'weapon_ger_panzershreck_rocket')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_deathfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'explosions/large_vehicle_explosion')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'explo_metal_rand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' TODO change to actual explosion fx/sound when we get it')
('NEWLINE', '\n')
('IDENTIFIER', 'build_life')
('LPAREN', '(')
('IDENTIFIER', '99999')
('COMMA', ',')
('IDENTIFIER', '5000')
('COMMA', ',')
('IDENTIFIER', '15000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_treadfx')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'build_rumble( "tank_rumble", 0.55, 1.75, 2200, 0.1, 0.1 );\t// this works well for pel1, let Jesse know if it breaks your map')
('NEWLINE', '\n')
('COMMENT', 'build_rumble( "tank_rumble", 0.15, 4.5, 600, 1, 1 );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'model')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'vehicle_stuka_flying')
('QUOTE', '"')
('LOGICAL_OR', '||')
('IDENTIFIER', 'model')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'vehicle_jap_airplane_rufe_fly')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'build_team')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'axis')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'build_team')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'allies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " default is to build bombs since that's what everyone is used to3")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'build_bombs')
('RPAREN', ')')
('LOGICAL_OR', '||')
('IDENTIFIER', 'build_bombs')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' Bomb stuff: TODO update with actual explosion fx, sound, and bomb model when we get them')
('NEWLINE', '\n')
('COMMENT', '  quakepower, quaketime, quakeradius, range, min_damage, max_damage')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_planeweapons')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'build_bomb_explosions')
('LPAREN', '(')
('IDENTIFIER', 'type')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '2')
('DOT', '.')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '1024')
('COMMA', ',')
('IDENTIFIER', '768')
('COMMA', ',')
('IDENTIFIER', '400')
('COMMA', ',')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_planeweapons')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'build_bombs')
('LPAREN', '(')
('IDENTIFIER', 'type')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'aircraft_bomb')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'explosions/fx_mortarExp_dirt')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'mortar_dirt')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' turret stuff: TODO update with actual turret models and types when we get them')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'non_default_turret_type')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', '-- GLocke ( 8/6/08 ) : Added the ability to specify a specific turret that you want to be built so that you can get a different fx set')
('NEWLINE', '\n')
('IDENTIFIER', 'turretType')
('ASSIGNMENT', '=')
('IDENTIFIER', 'non_default_turret_type')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'type')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'corsair')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'turretType')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'corsair_mg')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'turretType')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'allied_coaxial_mg')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'turretModel')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'weapon_machinegun_tiger')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " MikeD (5/31/2008): Someone switched the tag names for the zero, so we now have to do a special case since it's too late")
('NEWLINE', '\n')
('COMMENT', ' to change the model')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'model')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'vehicle_jap_airplane_zero_fly')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'build_turret')
('LPAREN', '(')
('IDENTIFIER', 'turretType')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tag_flash_gunner1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'turretModel')
('COMMA', ',')
('IDENTIFIER', 'true')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'max_turrets')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_turret')
('LPAREN', '(')
('IDENTIFIER', 'turretType')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tag_flash_gunner2')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'turretModel')
('COMMA', ',')
('IDENTIFIER', 'true')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'max_turrets')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'build_turret')
('LPAREN', '(')
('IDENTIFIER', 'turretType')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tag_gunLeft')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'turretModel')
('COMMA', ',')
('IDENTIFIER', 'true')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'max_turrets')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'build_turret')
('LPAREN', '(')
('IDENTIFIER', 'turretType')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tag_gunRight')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'turretModel')
('COMMA', ',')
('IDENTIFIER', 'true')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'max_turrets')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' end turret stuff')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' When the vehicle spawns, it calls this function, so put vehicle-specific post-spawn stuff here.')
('NEWLINE', '\n')
('COMMENT', ' self = the vehicle')
('NEWLINE', '\n')
('IDENTIFIER', 'init_local')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' wait a frame for the vehicle to spawn and get set up by _vehicle')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mgturret')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'link_turrets')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'mgturret')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' make the turrets fire together')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'script_numbombs')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'script_numbombs')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_planeweapons')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'bomb_init')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'script_numbombs')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('EOF', None)