('COMMENT', '-- This sets up and watches all of the destruction that is done by the ship to the ship based off of the explosions and other fx')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_merchant_ship_chain_destruction')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', '-- Example')
('NEWLINE', '\n')
('COMMENT', ' blah thread damage_when_piece_breaks( notify, forward offset, right offset, up offset, radius, min damage, max damage, tag to offset from);')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- CONNING TOWER')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level1_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '139')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '100')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '85')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('IDENTIFIER', '3000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower01')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level1_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '139')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '100')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '85')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('IDENTIFIER', '3000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower01')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level2_0')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '186')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('IDENTIFIER', '3000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower02')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level2_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '6')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '15')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('IDENTIFIER', '3000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower02')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level2_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '6')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('IDENTIFIER', '3000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower02')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level3_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '70')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '2')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('IDENTIFIER', '3000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level3_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '70')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '2')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '1000')
('COMMA', ',')
('IDENTIFIER', '20')
('COMMA', ',')
('IDENTIFIER', '30')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level3_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '50')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '400')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level3_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '49')
('COMMA', ',')
('IDENTIFIER', '280')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '26')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '150')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level3_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '49')
('COMMA', ',')
('IDENTIFIER', '280')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '159')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '150')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level3_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '49')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '280')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '26')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '150')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level3_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '49')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '280')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '159')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '150')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level3_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '49')
('COMMA', ',')
('IDENTIFIER', '118')
('COMMA', ',')
('IDENTIFIER', '80')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level3_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '49')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '118')
('COMMA', ',')
('IDENTIFIER', '80')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level4_0')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '12')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '36')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '80')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '200')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower04')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level4_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '30')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('IDENTIFIER', '3000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower04')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'con_tower_level4_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '111')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '200')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'contower04')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- FRONT DECK')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck01_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '24')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '50')
('COMMA', ',')
('IDENTIFIER', '75')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '150')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '200')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck01')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck02_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '23')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '32')
('COMMA', ',')
('IDENTIFIER', '19')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '200')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck02')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck03_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '29')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '237')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck03_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '3')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '23')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck04_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '19')
('COMMA', ',')
('IDENTIFIER', '55')
('COMMA', ',')
('IDENTIFIER', '122')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck04')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck04_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '19')
('COMMA', ',')
('IDENTIFIER', '64')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '12')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck04')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck04_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '10')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '130')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '237')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '40')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck04')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck05_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '24')
('COMMA', ',')
('IDENTIFIER', '37')
('COMMA', ',')
('IDENTIFIER', '30')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck05')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck06_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '40')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '73')
('COMMA', ',')
('IDENTIFIER', '32')
('COMMA', ',')
('IDENTIFIER', '350')
('COMMA', ',')
('IDENTIFIER', '1000')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck06')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck07_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '7')
('COMMA', ',')
('IDENTIFIER', '26')
('COMMA', ',')
('IDENTIFIER', '67')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck07')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck08_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '17')
('COMMA', ',')
('IDENTIFIER', '47')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck08')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'f_deck09_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '8')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '34')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '127')
('COMMA', ',')
('IDENTIFIER', '350')
('COMMA', ',')
('IDENTIFIER', '1000')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f_deck09')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- REAR DECK')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck01_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '19')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '68')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '19')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck01')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck01_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '19')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '68')
('COMMA', ',')
('IDENTIFIER', '121')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck01')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck02_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '13')
('COMMA', ',')
('IDENTIFIER', '63')
('COMMA', ',')
('IDENTIFIER', '165')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck02')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck02_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '13')
('COMMA', ',')
('IDENTIFIER', '44')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '63')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck02')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck03_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '40')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '450')
('COMMA', ',')
('IDENTIFIER', '1000')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck03')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck04_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '56')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '55')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck04')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck05_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '6')
('COMMA', ',')
('IDENTIFIER', '67')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '50')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck05')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck05_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '67')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '150')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck05')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck06_1')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '50')
('COMMA', ',')
('IDENTIFIER', '51')
('COMMA', ',')
('IDENTIFIER', '17')
('COMMA', ',')
('IDENTIFIER', '350')
('COMMA', ',')
('IDENTIFIER', '1000')
('COMMA', ',')
('IDENTIFIER', '2000')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck06')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck07_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '8')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '25')
('COMMA', ',')
('IDENTIFIER', '94')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck07')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck07_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '8')
('COMMA', ',')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '30')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck07')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck07_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '13')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '40')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck07')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck08_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '22')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '43')
('COMMA', ',')
('IDENTIFIER', '27')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck08')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck08_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '22')
('COMMA', ',')
('IDENTIFIER', '5')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '47')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck08')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck08_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '22')
('COMMA', ',')
('IDENTIFIER', '38')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '121')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck08')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck09_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '13')
('COMMA', ',')
('IDENTIFIER', '18')
('COMMA', ',')
('IDENTIFIER', '30')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck09')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_deck09_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '8')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '34')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '127')
('COMMA', ',')
('IDENTIFIER', '115')
('COMMA', ',')
('IDENTIFIER', '500')
('COMMA', ',')
('IDENTIFIER', '600')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'r_deck09')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'damage_when_piece_breaks')
('LPAREN', '(')
('IDENTIFIER', 'break_notify')
('COMMA', ',')
('IDENTIFIER', 'forward')
('COMMA', ',')
('IDENTIFIER', 'right')
('COMMA', ',')
('IDENTIFIER', 'up')
('COMMA', ',')
('IDENTIFIER', 'rad')
('COMMA', ',')
('IDENTIFIER', 'min_damage')
('COMMA', ',')
('IDENTIFIER', 'max_damage')
('COMMA', ',')
('IDENTIFIER', 'tag_offset')
('COMMA', ',')
('IDENTIFIER', 'flame')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stop merchant ship damage')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('SEMICOLON', ';')
('SEMICOLON', ';')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'broken')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'recieved_notify')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'recieved_notify')
('EQUALS_TO', '==')
('IDENTIFIER', 'break_notify')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'rad')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', '115')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'large explosion comment')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'isDefined')
('LPAREN', '(')
('IDENTIFIER', 'tag_offset')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'dmg_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'dmg_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('IDENTIFIER', 'GetTagOrigin')
('LPAREN', '(')
('IDENTIFIER', 'tag_offset')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'offset the dmg_origin according to the FX')
('NEWLINE', '\n')
('IDENTIFIER', 'dmg_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'dmg_origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', 'forward')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'dmg_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'dmg_origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToRight')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', 'right')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'dmg_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'dmg_origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToUp')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', 'up')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'flame')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_drones_for_burn')
('LPAREN', '(')
('IDENTIFIER', 'dmg_origin')
('COMMA', ',')
('IDENTIFIER', 'rad')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', 'do amazing things')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_float')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'wait_float')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'RadiusDamage')
('LPAREN', '(')
('IDENTIFIER', 'dmg_origin')
('COMMA', ',')
('IDENTIFIER', 'rad')
('COMMA', ',')
('IDENTIFIER', 'max_damage')
('COMMA', ',')
('IDENTIFIER', 'min_damage')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- added notifies to help manage the triple 25s')
('NEWLINE', '\n')
('COMMENT', 'if( recieved_notify == "r_deck03_0" || recieved_notify == "r_deck03_1")')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'recieved_notify')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'r_deck03_1')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'notify deck gun')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'deck_gun_destroyed')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'deck_gun_destroyed')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'if( recieved_notify == "con_tower_level4_0" || recieved_notify == "con_tower_level4_1" )')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'recieved_notify')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'con_tower_level4_1')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', '-- notify tower gun')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'tower_gun_destroyed')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tower_gun_destroyed')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'recieved_notify')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'bow_light_pitch')
('QUOTE', '"')
('LOGICAL_OR', '||')
('IDENTIFIER', 'recieved_notify')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'aft_light_pitch')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'suggest good kill')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', 'Wait A Frame')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_drones_for_burn')
('LPAREN', '(')
('IDENTIFIER', 'dmg_origin')
('COMMA', ',')
('IDENTIFIER', 'dmg_radius')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'drones')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'drones')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'drone')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'random_num')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'drones')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'DistanceSquared')
('LPAREN', '(')
('IDENTIFIER', 'dmg_origin')
('COMMA', ',')
('IDENTIFIER', 'drones')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('LPAREN', '(')
('IDENTIFIER', 'dmg_radius')
('MULTIPLY', '*')
('IDENTIFIER', 'dmg_radius')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '75')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'random_num')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '10')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'random_num')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '4')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'drones')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'combust')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('EOF', None)