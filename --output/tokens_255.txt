('COMMENT', ' Ambients Level File')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_ambientpackage')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_music')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('COMMENT', '                                              Ambient Packages')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'declare an ambientpackage, and populate it with elements')
('NEWLINE', '\n')
('COMMENT', 'mandatory parameters are <package name>, <alias name>, <spawnMin>, <spawnMax>')
('NEWLINE', '\n')
('COMMENT', 'followed by optional parameters <distMin>, <distMax>, <angleMin>, <angleMax>')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '***************')
('NEWLINE', '\n')
('COMMENT', 'See1_Outdoors')
('NEWLINE', '\n')
('COMMENT', '*************** ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'declareAmbientPackage')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_outdoors_pkg')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'addAmbientElement( "see1_outdoors_pkg", "amb_stone_small", 10, 20, 100, 500);')
('NEWLINE', '\n')
('IDENTIFIER', 'addAmbientElement')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_outdoors_pkg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'wind_gust_3d')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '20')
('COMMA', ',')
('IDENTIFIER', '80')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addAmbientElement')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_outdoors_pkg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bomb_far')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '15')
('COMMA', ',')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '200')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '***************')
('NEWLINE', '\n')
('COMMENT', 'See1_Trench_Interrior')
('NEWLINE', '\n')
('COMMENT', '*************** ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'declareAmbientPackage')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_trench_pkg')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'addAmbientElement( "see1_trench_pkg", "amb_stone_small", 10, 20, 100, 200);')
('NEWLINE', '\n')
('IDENTIFIER', 'addAmbientElement')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_trench_pkg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bomb_far')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '15')
('COMMA', ',')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '200')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addAmbientElement')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_trench_pkg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bomb_medium')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '15')
('COMMA', ',')
('IDENTIFIER', '30')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '500')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'declareAmbientPackage')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_tunnel_pkg')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'addAmbientElement')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_tunnel_pkg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'amb_wood_small')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '20')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '200')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addAmbientElement')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_tunnel_pkg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'amb_wood_boards')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '20')
('COMMA', ',')
('IDENTIFIER', '40')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '500')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addAmbientElement')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_tunnel_pkg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'amb_wood_creak')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '20')
('COMMA', ',')
('IDENTIFIER', '40')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '500')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addAmbientElement')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_tunnel_pkg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bomb_far')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '15')
('COMMA', ',')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '200')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addAmbientElement')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_tunnel_pkg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bomb_medium')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '15')
('COMMA', ',')
('IDENTIFIER', '30')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '500')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('COMMENT', '                                       ROOMS')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'explicitly activate the base ambientpackage, which is used when not touching any ambientPackageTriggers')
('NEWLINE', '\n')
('COMMENT', 'the other trigger based packages will be activated automatically when the player is touching them')
('NEWLINE', '\n')
('COMMENT', 'the same pattern is followed for setting up ambientRooms')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '***************')
('NEWLINE', '\n')
('COMMENT', 'See1_Outdoors')
('NEWLINE', '\n')
('COMMENT', '*************** ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'declareAmbientRoom')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_outdoors_room')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setAmbientRoomTone')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_outdoors_room')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'outdoor_wind')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'setAmbientRoomReverb')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_outdoors_room')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'Ber1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '***************')
('NEWLINE', '\n')
('COMMENT', 'See1_Trench_Interrior')
('NEWLINE', '\n')
('COMMENT', '*************** ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'declareAmbientRoom')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_trench_room')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setAmbientRoomTone')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_trench_room')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'trench_wind')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '***************')
('NEWLINE', '\n')
('COMMENT', 'See1_Subway')
('NEWLINE', '\n')
('COMMENT', '***************')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'declareAmbientRoom')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'small_tunnel')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setAmbientRoomTone')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'small_tunnel')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bgt_small_tunnel')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'declareAmbientRoom')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'large_tunnel')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setAmbientRoomTone')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'large_tunnel')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bgt_large_tunnel')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('COMMENT', '                                      ACTIVATE DEFAULT AMBIENT SETTINGS')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('IDENTIFIER', 'activateAmbientPackage')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_outdoors_pkg')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'activateAmbientRoom')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'see1_outdoors_room')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('COMMENT', '                                      START SCRIPTS')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'start_chant')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'klaxxon_audio_notify')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'walla_audio_notify')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'level thread pa_audio_notify();')
('NEWLINE', '\n')
('COMMENT', 'level thread pa_explode_notify();')
('NEWLINE', '\n')
('COMMENT', 'level thread pa_guy_shot_notify();')
('NEWLINE', '\n')
('COMMENT', 'level thread pa_takeover_notify();')
('NEWLINE', '\n')
('COMMENT', '\tlevel thread event_1_music();')
('NEWLINE', '\n')
('COMMENT', 'setmusicstate("INTRO");')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('COMMENT', '                                      OTHER AUDIO FUNCTIONS')
('NEWLINE', '\n')
('COMMENT', '************************************************************************************************')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'klaxxon_audio_notify')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'klaxxon_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'klaxxon')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'klaxxon')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'klaxxon')
('IDENTIFIER', 'playloopsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'klaxxon')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tower01_force_blow_up')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'klaxxon')
('IDENTIFIER', 'stoploopsound')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_audio_notify')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pa_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pa_speaker')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback3')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker')
('IDENTIFIER', 'playloopsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pa_speaker')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('IDENTIFIER', 'playloopsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pa_speaker')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_explode_notify')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'both_halftracks_eliminated')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tower2_blows_up')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pa_speaker')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback3')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('IDENTIFIER', 'stoploopsound')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker')
('IDENTIFIER', 'stoploopsound')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback1')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback2')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback3')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_guy_shot_notify')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'level waittill("guy_shot");')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'both_halftracks_eliminated')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tower2_blows_up')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pa_speaker')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'feedback2 = getent("feedback2","targetname");')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback3')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker')
('IDENTIFIER', 'stoploopsound')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('IDENTIFIER', 'stoploopsound')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback1')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'feedback2 playsound("feedback2");')
('NEWLINE', '\n')
('COMMENT', 'feedback3 playsound("feedback3");')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_takeover_notify')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'both_halftracks_eliminated')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pa_speaker')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pa_speaker2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'echo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'klaxxon')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback3')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'battle_cry2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'battle_cry2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker')
('IDENTIFIER', 'stoploopsound')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('IDENTIFIER', 'stoploopsound')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback1')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback2')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'feedback3')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pa_speaker2')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_200A_REZN2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback1')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_200A_REZN')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '27')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'feedback3')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_700A_RURS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'battle_cry2')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_701A_RURS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'start_chant')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'start_chant')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '40')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'chant')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chant')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'charge1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'charge1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'charge2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'charge2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'chant')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_702A_RURS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'playsoundatposition("See1_IGD_702A_RURS",chant.origin);')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '13')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'charge1')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_700A_RURS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'charge2')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_701A_RURS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'playsoundatposition("See1_IGD_700A_RURS",charge1.origin);')
('NEWLINE', '\n')
('COMMENT', 'playsoundatposition("See1_IGD_701A_RURS",charge2.origin);')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'walla_audio_notify')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'regroup_trigger')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'final_regroup')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'regroup_trigger')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'level waittill("walla");')
('NEWLINE', '\n')
('COMMENT', 'walla1 = getent("walla1","targetname");')
('NEWLINE', '\n')
('IDENTIFIER', 'walla1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_origin')
('QUOTE', '"')
('COMMA', ',')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '4904')
('COMMA', ',')
('IDENTIFIER', '14680')
('COMMA', ',')
('IDENTIFIER', '8')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'walla2 = getent("walla2","targetname");')
('NEWLINE', '\n')
('IDENTIFIER', 'walla2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_origin')
('QUOTE', '"')
('COMMA', ',')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '4440')
('COMMA', ',')
('IDENTIFIER', '15240')
('COMMA', ',')
('IDENTIFIER', '8')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'walla1')
('IDENTIFIER', 'playloopsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_703A_RURS')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'walla2')
('IDENTIFIER', 'playloopsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_703A_RURS')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'reznov_on_tank')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '10')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'walla1')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_700A_RURS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'walla2')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'See1_IGD_701A_RURS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'walla1')
('IDENTIFIER', 'stoploopsound')
('LPAREN', '(')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'walla2')
('IDENTIFIER', 'stoploopsound')
('LPAREN', '(')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'event_1_music')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'level waittill("intro_release_player");')
('NEWLINE', '\n')
('COMMENT', 'wait(5);')
('NEWLINE', '\n')
('IDENTIFIER', 'setmusicstate')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'FIELDS_OF_FIRE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '********************************************************************************************************')
('NEWLINE', '\n')
('COMMENT', '********************************************************************************************************')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event1')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' mortars')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_mortars')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setmusicstate')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'FIELDS_OF_FIRE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' fake fire from train')
('NEWLINE', '\n')
('IDENTIFIER', 'event1_fakefire')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'fog')
('NEWLINE', '\n')
('COMMENT', ' near plane, half plane, half hight, base height, r, g, b, time')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsSplitScreen')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'cull_dist')
('ASSIGNMENT', '=')
('IDENTIFIER', '7000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_splitscreen_fog')
('LPAREN', '(')
('IDENTIFIER', '250')
('COMMA', ',')
('IDENTIFIER', '3100')
('COMMA', ',')
('IDENTIFIER', '256')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '554688')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '507813')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '546875')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', 'cull_dist')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setVolFog')
('LPAREN', '(')
('IDENTIFIER', '250')
('COMMA', ',')
('IDENTIFIER', '3100')
('COMMA', ',')
('IDENTIFIER', '256')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '554688')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '507813')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '546875')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', 'setExpFog( 250, 3073, 0.554688, 0.507813, 0.546875, 1 );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' temp')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'battle_field_effects')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' temp FX on the battlefield, such as smoke and fire, using script structs (in see1_fx_placement.map) as markers')
('NEWLINE', '\n')
('COMMENT', ' Remove them after a full FX pass')
('NEWLINE', '\n')
('IDENTIFIER', 'battle_field_effects')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', '\n\t// light battle smoke\n\tbattle_smoke_pos = getstructarray( "battle_smoke", "targetname" );\n\tfor( i = 0; i < battle_smoke_pos.size; i++ )\n\t{\n\t\tplayfx( level._effect["battle_smoke_light"], battle_smoke_pos[i].origin );\n\t\twait( 0.01 ); // game doesn\'t seem to like playing too many fx on the same frame\n\t}\n\t\n\t// heavy battle smoke\n\tbattle_smoke_heavy_pos = getstructarray( "battle_smoke_heavy", "targetname" );\n\tfor( i = 0; i < battle_smoke_heavy_pos.size; i++ )\n\t{\n\t\tplayfx( level._effect["battle_smoke_heavy"], battle_smoke_heavy_pos[i].origin );\n\t\twait( 0.01 );\n\t}\n\n\t// fire engulfing trunk of a dead tree\n\ttrunk_fire_pos = getstructarray( "fire_trunk", "targetname" );\n\tfor( i = 0; i < trunk_fire_pos.size; i++ )\n\t{\n\t\tplayfx( level._effect["tree_trunk_fire"], trunk_fire_pos[i].origin );\n\t\twait( 0.01 );\n\t}\n\t\n\t// fire covering a brush\n\tbrush_fire_pos = getstructarray( "brush_fire", "targetname" );\n\tfor( i = 0; i < brush_fire_pos.size; i++ )\n\t{\n\t\tplayfx( level._effect["tree_brush_fire"], brush_fire_pos[i].origin );\n\t\twait( 0.01 );\n\t}\n\t')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event1_mortars')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " don't start till the initial charge starts")
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'charge_starts')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setmusicstate')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'FIELDS_OF_FIRE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' initial mortar (light)')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_delays')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dirt_small')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '3')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_range')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dirt_small')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '4000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'mortar_loop')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dirt_small')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_delays')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dirt_medium')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '6')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_range')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dirt_medium')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '1000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'mortar_loop')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dirt_medium')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_delays')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud_small')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '3')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_range')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud_small')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '4000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'mortar_loop')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud_small')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_delays')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud_far')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_range')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud_far')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '4000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'mortar_loop')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud_far')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_delays')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud_medium')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '4')
('COMMA', ',')
('IDENTIFIER', '6')
('COMMA', ',')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_mortar_range')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud_medium')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '300')
('COMMA', ',')
('IDENTIFIER', '1000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_mortar')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'mortar_loop')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud_medium')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event1_fakefire')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'firepoints')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstructarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'prerocket_muzzleflashes')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_fakefire_think')
('LPAREN', '(')
('IDENTIFIER', 'firepoints')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_fakefire_think')
('LPAREN', '(')
('IDENTIFIER', 'firepoints')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_fakefire_think')
('LPAREN', '(')
('IDENTIFIER', 'firepoints')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_fakefire_think')
('LPAREN', '(')
('IDENTIFIER', 'firepoints')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_fakefire_think')
('LPAREN', '(')
('IDENTIFIER', 'firepoints')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_fakefire_think')
('LPAREN', '(')
('IDENTIFIER', 'firepoints')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_fakefire_think')
('LPAREN', '(')
('IDENTIFIER', 'firepoints')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event1_fakefire_think')
('LPAREN', '(')
('IDENTIFIER', 'firepoints')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stop_event1_fakefire')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' if is already firing find another one')
('NEWLINE', '\n')
('IDENTIFIER', 'firepoint')
('ASSIGNMENT', '=')
('IDENTIFIER', 'firepoints')
('LBRACKET', '[')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', 'firepoints')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'is_firing')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'is_firing')
('EQUALS_TO', '==')
('IDENTIFIER', 'true')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' were good to go')
('NEWLINE', '\n')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'is_firing')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' burst fire')
('NEWLINE', '\n')
('IDENTIFIER', 'clipsize')
('ASSIGNMENT', '=')
('IDENTIFIER', 'randomintrange')
('LPAREN', '(')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'clipsize')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' play fx with tracers')
('NEWLINE', '\n')
('IDENTIFIER', 'playfx')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'distant_muzzleflash')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'anglestoforward')
('LPAREN', '(')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'anglestoup')
('LPAREN', '(')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' to reduce the pop-corn like sound if we do it all the time')
('NEWLINE', '\n')
('IDENTIFIER', 'rand')
('ASSIGNMENT', '=')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'rand')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'play_sound_in_space')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weap_mp40_fire')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'bullettracer')
('LPAREN', '(')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'origin')
('SUBTRACT', '-')
('LPAREN', '(')
('IDENTIFIER', 'randomintrange')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', '4000')
('PLUS', '+')
('IDENTIFIER', 'randomintrange')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '500')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'randomintrange')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '40')
('RPAREN', ')')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomfloatrange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '2')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' can be accessed again')
('NEWLINE', '\n')
('IDENTIFIER', 'firepoint')
('DOT', '.')
('IDENTIFIER', 'is_firing')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' to appease the while loop')
('NEWLINE', '\n')
('COMMENT', 'wait (0.05);')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' for later')
('NEWLINE', '\n')
('IDENTIFIER', 'event1_katyusha_rocket_barrage')
('LPAREN', '(')
('IDENTIFIER', 'truck_name')
('COMMA', ',')
('IDENTIFIER', 'trigger_name')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'truck')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('IDENTIFIER', 'truck_name')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('IDENTIFIER', 'trigger_name')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'attack_range')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '10000')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'start_points')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'dest_points')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' temp starting and ending points')
('NEWLINE', '\n')
('COMMENT', ' presume 8 rockets side by side 10 units apart (all rockets point north)')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket_num')
('ASSIGNMENT', '=')
('IDENTIFIER', '8')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket_separation')
('ASSIGNMENT', '=')
('IDENTIFIER', '10')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket_center_point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'truck')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '50')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket_left_most_point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'rocket_center_point')
('SUBTRACT', '-')
('LPAREN', '(')
('IDENTIFIER', 'rocket_num')
('MULTIPLY', '*')
('IDENTIFIER', 'rocket_separation')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'rocket_num')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'rocket_left_most_point')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'i')
('MULTIPLY', '*')
('IDENTIFIER', 'rocket_separation')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'dest_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('PLUS', '+')
('IDENTIFIER', 'attack_range')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'start_points')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_model')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('IDENTIFIER', 'setmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon_ger_panzershreck_rocket')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('DOT', '.')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '320')
('COMMA', ',')
('IDENTIFIER', '90')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'playfxontag')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rocket_trail')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'rocket')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tag_origin')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' sound of rocket flying through the air')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rocket_run')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_katyusha_rocket_fly_think')
('LPAREN', '(')
('IDENTIFIER', 'dest_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '50')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '50')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '50')
('RPAREN', ')')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event1_katyusha_rocket_barrage_side')
('LPAREN', '(')
('IDENTIFIER', 'struct_name')
('COMMA', ',')
('IDENTIFIER', 'trigger_name')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trucks')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstructarray')
('LPAREN', '(')
('IDENTIFIER', 'struct_name')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('IDENTIFIER', 'trigger_name')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'trucks')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'event1_katyusha_rocket_barrage_side_single')
('LPAREN', '(')
('IDENTIFIER', 'trucks')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'trigger')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event1_katyusha_rocket_barrage_side_single')
('LPAREN', '(')
('IDENTIFIER', 'start_struct')
('COMMA', ',')
('IDENTIFIER', 'trigger')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'event1_ends')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'attack_range')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '10000')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'start_points')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'dest_points')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' temp starting and ending points')
('NEWLINE', '\n')
('COMMENT', ' presume 8 rockets side by side 10 units apart (all rockets point north)')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket_num')
('ASSIGNMENT', '=')
('IDENTIFIER', '8')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket_separation')
('ASSIGNMENT', '=')
('IDENTIFIER', '10')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket_center_point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'start_struct')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '50')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket_left_most_point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'rocket_center_point')
('SUBTRACT', '-')
('LPAREN', '(')
('IDENTIFIER', 'rocket_num')
('MULTIPLY', '*')
('IDENTIFIER', 'rocket_separation')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'rocket_num')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'rocket_left_most_point')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'i')
('MULTIPLY', '*')
('IDENTIFIER', 'rocket_separation')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'dest_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('PLUS', '+')
('IDENTIFIER', 'attack_range')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'start_points')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_model')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('IDENTIFIER', 'setmodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon_ger_panzershreck_rocket')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('DOT', '.')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '320')
('COMMA', ',')
('IDENTIFIER', '90')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'playfxontag')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rocket_trail')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'rocket')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tag_origin')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' sound of rocket flying through the air')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rocket_run')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'rocket')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event1_katyusha_rocket_fly_think')
('LPAREN', '(')
('IDENTIFIER', 'dest_points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '50')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '50')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '50')
('RPAREN', ')')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('PLUS', '+')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " and the rockets' red glaaaaaare")
('NEWLINE', '\n')
('IDENTIFIER', 'event1_katyusha_rocket_fly_think')
('LPAREN', '(')
('IDENTIFIER', 'destination_pos')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'thread throw_object_with_gravity( self, destination_pos );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'playfx')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'lci_rocket_launch')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'anglestoforward')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', '320')
('COMMA', ',')
('IDENTIFIER', '90')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'anglestoup')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', '320')
('COMMA', ',')
('IDENTIFIER', '90')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('LESS_THAN_OR_EQUAL_TO', '<')
('SUBTRACT', '-')
('IDENTIFIER', '500')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('GREATER_THAN', '>')
('IDENTIFIER', '8000')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'playfx')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'lci_rocket_impact')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' lci rocket impact sound')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'play_sound_in_space')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rocket_dirt')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', 'earthquake( 0.5, 3, self.origin, 2050 );\t')
('NEWLINE', '\n')
('COMMENT', 'self thread event1_rocket_impact_think();')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'do aftermath')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' to get shit deleting again')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event2')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event3')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event3_flak_flashes')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event3_flak_flashes')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'targets')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstructarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ev3_flash')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'targets')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event3_flak_flash_single')
('LPAREN', '(')
('IDENTIFIER', 'targets')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event3_flak_flash_single')
('LPAREN', '(')
('IDENTIFIER', 'position')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomfloat')
('LPAREN', '(')
('IDENTIFIER', '4')
('RPAREN', ')')
('PLUS', '+')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'playfx')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'flak_flash')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'position')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\nevent1_large_explosions( min_range, max_delay, min_delay )\n{\n\tlevel endon( "event1_ends" );\n\t\n\ttargets = maps\\_utility::getstructarray( "fx_ev1_explosion_1", "targetname" );\n\tplayers = maps\\_utility::get_players();\n\t\n\twhile( 1 )\n\t{\n\t\t// periodically set off an explosion near a player, followed by one further away\n\t\tdelay_time = randomfloat( max_delay - min_delay ) + min_delay;\n\t\twait( delay_time );\n\t\t\n\t\tvalid_target = false;\n\t\tindex = 0;\n\t\twhile( valid_target == false )\n\t\t{\n\t\t\tindex = randomint( targets.size );\n\t\t\n\t\t\t// make sure the explosion is not next to any players\n\t\t\tplayers_okayed = 0;\n\t\t\tfor( i = 0; i < players.size; i++ )\n\t\t\t{\n\t\t\t\tif( distance( targets[index].origin, players[i].origin ) > min_range )\n\t\t\t\t{\n\t\t\t\t\tplayers_okayed++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( players_okayed == players.size )\n\t\t\t{\n\t\t\t\tvalid_target = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// now blow it up\n\t\tradiusdamage( targets[index].origin, 200, 1000, 100 );\n\t\tfx = playfx( level.fx_large_explosion, targets[index].origin );\n\t}\t\n}\n\nevent1_small_explosions( max_delay, min_delay )\n{\n\tlevel endon( "event1_ends" );\n\t\n\ttargets = maps\\_utility::getstructarray( "fx_ev1_explosion_sm", "targetname" );\n\n\twhile( 1 )\n\t{\n\t\t// periodically set off an explosion near a player, followed by one further away\n\t\tdelay_time = randomfloat( max_delay - min_delay ) + min_delay;\n\t\twait( delay_time );\n\t\tindex = randomint( targets.size );\n\t\tradiusdamage( targets[index].origin, 200, 1000, 100 );\n\t\tfx = playfx( level.fx_small_explosion, targets[index].origin );\n\t}\t\n}\n\nevent1_player_view_explosions()\n{\n\t// periodically set off an explosion in front of the player\n\t// end this just as player reaches mg, and the tracers go off\n\tlevel endon( "event1_mg_tracer_ends" );\n\t\n\tplayers = maps\\_utility::get_players();\n\t\n\twhile( 1 )\n\t{\n\t\twait( randomint( 5 ) + 10 );\n\t\t\n\t\tindex = randomint( players.size );\n\t\t\n\t\tforward_vec = anglestoforward( players[index].angles );\n\t\tdestination_pos = players[index].origin + forward_vec * 200 + ( 0, -15, 0 );\n\t\t\n\t\tradiusdamage( destination_pos, 250, 100, 10 );\n\t\t\n\t\texplosion = randomint( 10 );\n\t\tif( explosion % 2 == 0 )\n\t\t{\n\t\t\tfx = playfx( level.fx_large_explosion, destination_pos );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfx = playfx( level.fx_small_explosion, destination_pos );\n\t\t}\n\t}\n}\n\n\nevent1_mg_tracer( stop_trigger_name )\n{\n\tstarts = maps\\_utility::getstructarray( "ev1_mg_start", "targetname" );\n\tends = maps\\_utility::getstructarray( "ev1_mg_target", "targetname" );\n\t\n\tfor( i = 0; i < starts.size; i++ )\n\t{\n\t\tthread event1_tracer_burst( starts[i], ends );\n\t\tthread event1_tracer_burst( starts[i], ends );\n\t\tthread event1_tracer_burst( starts[i], ends );\n\t\tthread event1_tracer_burst( starts[i], ends );\n\t}\n\t\n\tstop_trigger = getent( stop_trigger_name, "targetname" );\n\tstop_trigger waittill( "trigger" );\n\tlevel notify( "event1_mg_tracer_ends" );\n}\n\nevent1_tracer_burst( start, targets )\n{\n\tlevel endon( "event1_mg_tracer_ends" );\n\t\n\twhile( 1 )\n\t{\n\t\t// find a random target\n\t\tindex = randomint( targets.size );\n\t\tx_off = randomint( 250 ) - 125; // offset x by +/- 125 units\n\t\ttarget_pos = targets[index].origin + ( x_off, -30, 0 );\n\t\tstart_pos = start.origin;\n\t\t\n\t\t// burst \n\t\tburst_num = randomint( 7 ) + 10;\n\t\tfor( i = 0; i < burst_num; i++ )\n\t\t{\n\t\t\tbullettracer( start_pos, target_pos );\n\t\t\twait( 0.2 );\n\t\t}\n\t\t\n\t\twait( randomint( 1 ) + 1 );\n\t}\n}\n\nevent1_planes()\n{\n\tlevel thread plane_flyby_special( "ev1_plane1_trigger", "ev1_plane_sp1", "ev1_plane_sp1_end" );\n\t\n\tlevel thread plane_flyby( "ev1_plane_l1", "ev1_plane_l1_end" );\n\tlevel thread plane_flyby( "ev1_plane_l2", "ev1_plane_l2_end" );\n\tlevel thread plane_flyby( "ev1_plane_l3", "ev1_plane_l3_end" );\n\tlevel thread plane_flyby( "ev1_plane_m1", "ev1_plane_m1_end" );\n\tlevel thread plane_flyby( "ev1_plane_m2", "ev1_plane_m2_end" );\n\tlevel thread plane_flyby( "ev1_plane_m3", "ev1_plane_m3_end" );\n\tlevel thread plane_flyby( "ev1_plane_r1", "ev1_plane_r1_end" );\n\tlevel thread plane_flyby( "ev1_plane_r2", "ev1_plane_r2_end" );\n}\n\nplane_flyby( starting_node_name, ending_node_name )\n{\n\t//level endon( "event1_ends" );\n\t\n\tstart = getvehiclenode( starting_node_name, "targetname" );\n\tend = getvehiclenode( ending_node_name, "targetname" );\n\t\n\twhile( 1 )\n\t{\n\t\twait( randomfloat( 5 ) + 2 );\n\t\t\n\t\tplane = spawnvehicle( "vehicle_stuka_flying", "plane1", "stuka", start.origin, start.angles );\n\t\tplane attachPath( start );\n\t\tplane startpath();\n\t\t\n\t\t//end waittill( "trigger" );\n\t\twait( 8 );\n\t\tplane delete();\n\t}\n}\n\nplane_flyby_special( trigger_name, starting_node_name, ending_node_name )\n{\n\tlevel endon( "event1_ends" );\n\t\t\n\ttrigger = getent( trigger_name, "targetname" );\n\tstart = getvehiclenode( starting_node_name, "targetname" );\n\tend = getvehiclenode( ending_node_name, "targetname" );\n\t\n\ttrigger waittill( "trigger" );\n\t\t\n\tplane = spawnvehicle( "vehicle_stuka_flying", "plane1", "stuka", start.origin, start.angles );\n\tplane attachPath( start );\n\tplane startpath();\n\t\t\n\t//end waittill( "trigger" );\n\twait( 6 );\n\tplane delete();\n}\n')
('EOF', None)