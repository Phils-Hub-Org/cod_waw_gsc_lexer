('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_anim')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_hud_util')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#using_animtree')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'generic_human')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setsaveddvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'compassMaxRange')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1500')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' load up effects -- placed by Dale.  Hi!')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_fx')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' vehicle loading functions')
('NEWLINE', '\n')
('COMMENT', 'maps\\_buffalo::main( "vehicle_usa_tracked_lvt4", "buffalo" );')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_buffalo')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_usa_tracked_lvt4')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'buffalo_players')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_jeep')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_usa_wheeled_jeep')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'jeep')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_p51')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_p51_mustang')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_load')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_amb')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' load up the anims for the level')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'do_precacheing')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_for_first_player')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'players[0] is the first player')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'SetWeaponAmmoClip')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'm1garand')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'SetWeaponAmmoStock')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'm1garand')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'prepare_anims')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'init_level')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Ride in on the LVT')
('NEWLINE', '\n')
('IDENTIFIER', 'level_setup')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Wait until the last trigger is hit before moving on to the next section.')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'finished_locomotion')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'off1')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'off1_dialog_and_sound')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'objective_choose')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'level thread start_amb_marchers();')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Start the combat training')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'select_next_event')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'do_precacheing')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_PRONE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_CROUCH')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_ADS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_FIRE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_GRENADE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_CHECK_OBJ')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_SPRINT')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_CROUCH_SPRINT')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_MELEE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OBJ_CHECK_OBJ')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_TIME_COMPLETED')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_TOTAL_TIME')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_TARGETS_MISSED')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_GRENADES_MISSED')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachestring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_NA')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'precacheshader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'black')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'precacheModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_p51_mustang')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'precacheMenu')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'select_difficulty')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'prepare_anims')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'officer1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'sarge1')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'off1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'end_loco_officer')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'off1')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'off1')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_off')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sr_officer')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_off')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'off2')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_level')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'fog and bloom effects')
('NEWLINE', '\n')
('IDENTIFIER', 'setVolFog')
('LPAREN', '(')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '5500')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '3000')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '4')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '45')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '47')
('COMMA', ',')
('IDENTIFIER', '10')
('DOT', '.')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'VisionSetNaked')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'training')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " Remove the sarge's weapon")
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'shared')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'placeWeaponOn')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('DOT', '.')
('IDENTIFIER', 'primaryweapon')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'none')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_wave_manager')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trainee')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'assertex')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('DOT', '.')
('IDENTIFIER', 'size')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'Trainee Array Size is < 1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' set their animname')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'trainee')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'set these as the first wave')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'waves')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'bbeam_nodes')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_balance_beam_start')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'ai_end_pos')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_ai_end_node')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tSECTION 0:  BEGIN THE LEVEL - RIDE IN ON LVT')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('IDENTIFIER', 'level_setup')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'previous_best')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'sarge_startup')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'add_player_to_lvt')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'add_ai_to_lvt')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'test_lvt')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'wait_to_move')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'sarge_startup')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'set_run_anim')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'run_anim')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'wait(15);')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'while(true)')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tlevel.srgt anim_single_solo( level.srgt, "lean_idle", undefined, undefined );')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'anim_loop_solo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'lean_idle')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'new_node_selected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'add_player_to_lvt')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'training_lvt')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tag')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'tag_passenger7')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'org')
('ASSIGNMENT', '=')
('IDENTIFIER', 'tlvt')
('IDENTIFIER', 'gettagOrigin')
('LPAREN', '(')
('IDENTIFIER', 'tag')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ang')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '90')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Place the player at the given tag')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'setorigin')
('LPAREN', '(')
('IDENTIFIER', 'org')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'level.players[0] setplayerangles (ang);')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' link the player in place')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'lvt_linkspot')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_origin')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'org')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'lvt_linkspot')
('IDENTIFIER', 'linkto')
('LPAREN', '(')
('IDENTIFIER', 'tlvt')
('COMMA', ',')
('IDENTIFIER', 'tag')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'ang')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'playerlinktodelta')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'lvt_linkspot')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'add_ai_to_lvt')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'training_lvt')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ang')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '90')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tag')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'tag_passenger2')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'linkto')
('LPAREN', '(')
('IDENTIFIER', 'tlvt')
('COMMA', ',')
('IDENTIFIER', 'tag')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '90')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tag')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'tag_passenger3')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('IDENTIFIER', 'linkto')
('LPAREN', '(')
('IDENTIFIER', 'tlvt')
('COMMA', ',')
('IDENTIFIER', 'tag')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tag')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'tag_passenger4')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('IDENTIFIER', 'linkto')
('LPAREN', '(')
('IDENTIFIER', 'tlvt')
('COMMA', ',')
('IDENTIFIER', 'tag')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tag')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'tag_passenger5')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('IDENTIFIER', 'linkto')
('LPAREN', '(')
('IDENTIFIER', 'tlvt')
('COMMA', ',')
('IDENTIFIER', 'tag')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tag')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'tag_passenger6')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('IDENTIFIER', 'linkto')
('LPAREN', '(')
('IDENTIFIER', 'tlvt')
('COMMA', ',')
('IDENTIFIER', 'tag')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tag')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'tag_passenger8')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('IDENTIFIER', 'linkto')
('LPAREN', '(')
('IDENTIFIER', 'tlvt')
('COMMA', ',')
('IDENTIFIER', 'tag')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tag')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'tag_passenger9')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('LBRACKET', '[')
('IDENTIFIER', '6')
('RBRACKET', ']')
('IDENTIFIER', 'linkto')
('LPAREN', '(')
('IDENTIFIER', 'tlvt')
('COMMA', ',')
('IDENTIFIER', 'tag')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_to_move')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lvt_unloaded')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' turn off collision with the vehicle')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'training_lvt')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'unlink')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'lvt_linkspot')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'trainees')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'unlink')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'start_run_course')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'start_ai_waves')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'begin_ambience')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'start_ai_waves')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'start_waves')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Start the ambient waves of guys')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'start_ambient_ai')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'test_lvt')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'training_lvt')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt_start_node')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getvehiclenode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lvt_start_node')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('IDENTIFIER', 'attachPath')
('LPAREN', '(')
('IDENTIFIER', 'tlvt_start_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('IDENTIFIER', 'startPath')
('LPAREN', '(')
('IDENTIFIER', 'tlvt_start_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'start_shake')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'stop_point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getvehiclenode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lvt_unload_point')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'stop_point')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('IDENTIFIER', 'setspeed')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lvt_stopped')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tlvt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'lvt_unload_test')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' call the first objective')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'objective_run_endurance')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'start_shake')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lvt_stopped')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'earthquake')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '07')
('COMMA', ',')
('IDENTIFIER', '3')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', '1024')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tAMBIENCE')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('IDENTIFIER', 'begin_ambience')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'ambient_planes')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'shooting_ai')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'amb_sr_ai')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'amb_target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'amb_target1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'shooting_ai')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'shooting_ai')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setentitytarget')
('LPAREN', '(')
('IDENTIFIER', 'amb_target')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'loop_jeep')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'jeep_start_node')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getvehiclenode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'amb_jeep_start')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'travel_path')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'stop_point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getvehiclenode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'amb_jeep_end')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'stop_point')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'attachPath')
('LPAREN', '(')
('IDENTIFIER', 'jeep_start_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'travel_path')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'jeep_start_node')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getvehiclenode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'amb_jeep_start')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'attachPath')
('LPAREN', '(')
('IDENTIFIER', 'jeep_start_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'startPath')
('LPAREN', '(')
('IDENTIFIER', 'jeep_start_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ambient_planes')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomInt')
('LPAREN', '(')
('IDENTIFIER', '30')
('RPAREN', ')')
('PLUS', '+')
('IDENTIFIER', '30')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_plane')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'send_plane')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'model')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'vehicle_p51_mustang')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'amb_p51')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'type')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'p51')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane_nodes')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getvehiclenodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'plane_start_node')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'randNode')
('ASSIGNMENT', '=')
('IDENTIFIER', 'randomInt')
('LPAREN', '(')
('IDENTIFIER', 'plane_nodes')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'start_node')
('ASSIGNMENT', '=')
('IDENTIFIER', 'plane_nodes')
('LBRACKET', '[')
('IDENTIFIER', 'randNode')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pos')
('ASSIGNMENT', '=')
('IDENTIFIER', 'start_node')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ang')
('ASSIGNMENT', '=')
('IDENTIFIER', 'start_node')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' create the plane')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('ASSIGNMENT', '=')
('IDENTIFIER', 'SpawnVehicle')
('LPAREN', '(')
('IDENTIFIER', 'model')
('COMMA', ',')
('IDENTIFIER', 'tname')
('COMMA', ',')
('IDENTIFIER', 'type')
('COMMA', ',')
('IDENTIFIER', 'pos')
('COMMA', ',')
('IDENTIFIER', 'ang')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'vehicletype')
('ASSIGNMENT', '=')
('IDENTIFIER', 'type')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' attach the plane to the path and send it on its way')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'attachPath')
('LPAREN', '(')
('IDENTIFIER', 'start_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'startPath')
('LPAREN', '(')
('IDENTIFIER', 'start_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'planesound')
('ASSIGNMENT', '=')
('IDENTIFIER', 'randomintrange')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'planesound')
('EQUALS_TO', '==')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_plane1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'planesound')
('EQUALS_TO', '==')
('IDENTIFIER', '2')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_plane2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'planesound')
('EQUALS_TO', '==')
('IDENTIFIER', '3')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_plane3')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'planesound')
('EQUALS_TO', '==')
('IDENTIFIER', '4')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_plane4')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'reached_end_node')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'start_amb_marchers')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'marchers')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'amb_marcher')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'node_pos1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'amb_marcher_pos1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'node_pos2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'amb_marcher_pos2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'marchers')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'amb_marchers_goto')
('LPAREN', '(')
('IDENTIFIER', 'node_pos2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'marchers')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'marchers_in_position')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'marchers')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'amb_marchers_goto')
('LPAREN', '(')
('IDENTIFIER', 'node_pos1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'marchers')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'marchers_in_position')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'amb_marchers_goto')
('LPAREN', '(')
('IDENTIFIER', 'nodearray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', '64')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'nodearray')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'marchers_in_position')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tSECTION 1:  TEACH LOCOMOTION')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('IDENTIFIER', 'start_run_course')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'getent( "trig1","targetname") waittill( "trigger" );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' send the sarge to his first position')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'end_pos1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_crouch_place')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_wave_to_point_one')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'wait_for_wave_death')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_hintelem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teach_crouch')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teach_mantle')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teach_prone')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teach_sprint')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teach_sprint_crouch')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teach_melee')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Change the stance of the AI at the given trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'change_ai_stance')
('LPAREN', '(')
('IDENTIFIER', 'trigger_name')
('COMMA', ',')
('IDENTIFIER', 'stance_type')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('IDENTIFIER', 'trigger_name')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'self')
('IDENTIFIER', 'istouching')
('LPAREN', '(')
('IDENTIFIER', 'trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'allowedstances')
('LPAREN', '(')
('IDENTIFIER', 'stance_type')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Tell the player ')
('NEWLINE', '\n')
('IDENTIFIER', 'teach_sprint')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_SPRINT')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teach_sprint_crouch')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_hint_crouch_sprint')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_SPRINT_CROUCH')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teach_melee')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_player_in_bunker')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_MELEE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teach_crouch')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'show_crouch')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog_and_sound')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' move the sarge on')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_mantle_place')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'give_hint')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_CROUCH')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'iprintlnbold("Press B To Crouch");')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teach_mantle')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'show_mantle')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' move the sarge on')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_prone_place')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Tell the player how to go prone')
('NEWLINE', '\n')
('IDENTIFIER', 'teach_prone')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'show_prone')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog_and_sound')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'give_hint')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_PRONE')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'prone')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_hintelem')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', '320')
('COMMA', ',')
('IDENTIFIER', '220')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'center')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'give_hint')
('LPAREN', '(')
('IDENTIFIER', 'text')
('COMMA', ',')
('IDENTIFIER', 'stance')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hit')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_hint_stance')
('LPAREN', '(')
('IDENTIFIER', 'stance')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('IDENTIFIER', 'text')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_hint_stance')
('LPAREN', '(')
('IDENTIFIER', 'stance')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getstance')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('IDENTIFIER', 'stance')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hit')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' tell an ai to go to the given node')
('NEWLINE', '\n')
('IDENTIFIER', 'move_ai')
('LPAREN', '(')
('IDENTIFIER', 'dest_node')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' send the sarge to his first position')
('NEWLINE', '\n')
('IDENTIFIER', 'tempnode')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnode')
('LPAREN', '(')
('IDENTIFIER', 'dest_node')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'tempnode')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' for all the sarge moving goodness!  sets up animations to be played')
('NEWLINE', '\n')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('IDENTIFIER', 'dest_node')
('COMMA', ',')
('IDENTIFIER', 'stance')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'new_node_selected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'killanimscript')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tempnode')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnode')
('LPAREN', '(')
('IDENTIFIER', 'dest_node')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', '32')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'tempnode')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Play his idle animation when he reaches his position')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'sarge_idle_animate')
('LPAREN', '(')
('IDENTIFIER', 'stance')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'sarge_idle_animate')
('LPAREN', '(')
('IDENTIFIER', 'stance')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'new_node_selected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Stance 1:  Leaning on a railing')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'stance')
('EQUALS_TO', '==')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'anim_loop_solo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'lean_idle')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'new_node_selected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'stance')
('EQUALS_TO', '==')
('IDENTIFIER', '2')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'anim_loop_solo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'stand_idle')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'new_node_selected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tSELECT NEXT EVENT')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('IDENTIFIER', 'select_next_event')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'objective_check_objectives')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'sarge_movement_main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_combat_trigger')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_obstacle_trigger')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_combat_trigger')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'begin_shooting_range')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'choice made')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_combat_tutorial')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_obstacle_trigger')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'begin_obstacle_course')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'choice made')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_obstacle_course')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tCOMBAT TUTORIAL')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_combat_tutorial')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_off')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'officer_sr_dialog')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Alright, grab some ammo and grenades off of that table."')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait until the player grabs ammo to continue')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'GetWeaponAmmoClip')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'm1garand')
('QUOTE', '"')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', '0')
('RPAREN', ')')
('LOGICAL_OR', '||')
('LOGICAL_NOT', '!')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'HasWeapon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fraggrenade')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Enable aim assist on all of the targets in the Shooting Range')
('NEWLINE', '\n')
('IDENTIFIER', 'sr_aa_targ')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sr_assist_target')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'sr_aa_targ')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'sr_aa_targ')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'enableAimAssist')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'shoot_ground_targets')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'level thread make_ai_shoot_at_targets();')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Have the player shoot the three ground targets')
('NEWLINE', '\n')
('IDENTIFIER', 'shoot_ground_targets')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_off')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'officer_sr_dialog')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Try shooting the lower three targets"')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'targets_hit_counter')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player_used_ads')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_target')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'near_target')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_target')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'middle_target')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_target')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'far_target')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_for_ads')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'targets_hit_counter')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '3')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' check to see if the player knows how to ADS or not')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player_used_ads')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'teach_ads')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'shoot_tower_targets')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_for_ads')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'played_used_ads')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'cutoff_ammo')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getAmmoCount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'm1garand')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SUBTRACT', '-')
('IDENTIFIER', '6')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'current_ammo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getAmmoCount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'm1garand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'cutoff_ammo')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', 'current_ammo')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'playerads')
('LPAREN', '(')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '8')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'player_used_ads')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player_used_ads')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'current_ammo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getAmmoCount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'm1garand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '01')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'level.hintelem setText(&"TRAINING_HINT_ADS");')
('NEWLINE', '\n')
('COMMENT', 'level thread turn_off_ads_text();')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' have the player shoot the two tower targets')
('NEWLINE', '\n')
('IDENTIFIER', 'shoot_tower_targets')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_off')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'officer_sr_dialog')
('LPAREN', '(')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Now see if you can shoot the targets up in the towers."')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'sr_pop_up_targets')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'targets_hit_counter')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_target')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'left_tower_target')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_target')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'right_tower_target')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'targets_hit_counter')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '2')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', 'iprintlnbold("Add Sensitivity Options Here");\t')
('NEWLINE', '\n')
('IDENTIFIER', 'practice_nade_toss')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'sr_pop_up_targets')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sr_target4')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sr_target5')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'targ_to_spin')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'rotateroll')
('LPAREN', '(')
('IDENTIFIER', '90')
('COMMA', ',')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' teach the player how to toss a nade')
('NEWLINE', '\n')
('IDENTIFIER', 'practice_nade_toss')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_off')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'officer_sr_dialog')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' toss a nade through the wall')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_nade_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'can_throw_nade')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teach_nade')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'nade_target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sr_grenade_target')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'nade_target')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'sr_watch_grenade_target')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_nade_hit')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '01')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'objective_goto_obstacle_course')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_off')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'officer_sr_dialog')
('LPAREN', '(')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' go to obstacle course')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Teach the player how to ADS')
('NEWLINE', '\n')
('IDENTIFIER', 'teach_ads')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'player_used_ads')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hit_counter')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_off')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'officer_sr_dialog')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "You\'ve got a sight, use it."')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_ADS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'turn_off_ads_text')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player_used_ads')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hit_counter')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'targets_hit_counter')
('PLUS', '+')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_target')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'far_target')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'targets_hit_counter')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'hit_counter')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'shoot_tower_targets')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'turn_off_ads_text')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player_used_ads')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'playerads')
('LPAREN', '(')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '8')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player_used_ads')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teach_nade')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'can_throw_nade')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_GRENADE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Watch the targets until they are hit')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_target')
('LPAREN', '(')
('IDENTIFIER', 'which_target')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'target_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'target_hit')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'temptarg')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('IDENTIFIER', 'which_target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'temptarg')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'guy')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'if the player shoots the target, hurray!')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'isPlayer')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'target_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'targets_hit_counter')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_off')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'officer_sr_dialog')
('LPAREN', '(')
('IDENTIFIER', '11')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Good shot"')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'temptarg')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'spin_target')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' check to see if the player uses ADS while shooting the targets')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('IDENTIFIER', 'playerads')
('LPAREN', '(')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '8')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player_used_ads')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Turn off the aim assist on the target after it is hit')
('NEWLINE', '\n')
('IDENTIFIER', 'aAssist')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'aim_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'temptarg')
('DOT', '.')
('IDENTIFIER', 'script_noteworthy')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'aAssist')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'aAssist')
('IDENTIFIER', 'disableAimAssist')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' watch the given trigger to see if a grenade hits it...and stuff')
('NEWLINE', '\n')
('IDENTIFIER', 'sr_watch_grenade_target')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_nade_hit')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'grenade_fire')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'grenade')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'can_throw_nade')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'grenade')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'sr_check_grenade')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Watch the grenade to see if it hits the given trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'sr_check_grenade')
('LPAREN', '(')
('IDENTIFIER', 'trigger_to_watch')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'grenade_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_nade_hit')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'self')
('IDENTIFIER', 'isTouching')
('LPAREN', '(')
('IDENTIFIER', 'trigger_to_watch')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sr_nade_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tOBSTACLE COURSE')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_obstacle_course')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_running')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '01')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ptarg')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_targ7')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_p_targ_angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'ptarg')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_oc_timer')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' get the target triggers in the level and watch to see if they are shot.')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_targets')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_target')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'oc_targets')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_targets')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_oc_target')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' get the grenade target triggers in the level and watch to see if they are hit.')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_nade_triggers')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_grenade_target')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'oc_nade_triggers')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_nade_triggers')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_grenade_target')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_targets_remaining')
('ASSIGNMENT', '=')
('IDENTIFIER', 'oc_targets')
('DOT', '.')
('IDENTIFIER', 'size')
('PLUS', '+')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_total_targets')
('ASSIGNMENT', '=')
('IDENTIFIER', 'oc_targets')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_nade_targets_remaining')
('ASSIGNMENT', '=')
('IDENTIFIER', 'oc_nade_triggers')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Enable aim assist on all of the targets in the Obstacle Course')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_aa_targ')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_assist_target')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'oc_aa_targ')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_aa_targ')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'enableAimAssist')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'throw_nade_in_window')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'say_shoot_targets')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_move_trigs')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_move')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'oc_move_trigs')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_move_trigs')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'say_move')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' find triggers to tell the player to toss grenade')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'throw_nade_in_window')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_toss_nade2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'say_shoot_targets')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_shoot_targets')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'say_shoot_through_wood')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_penetrate_wood')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'say_move')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'run the obstacle course timer')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_oc_timer')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_start_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Set up the Timer')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer')
('DOT', '.')
('IDENTIFIER', 'x')
('ASSIGNMENT', '=')
('IDENTIFIER', '320')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer')
('DOT', '.')
('IDENTIFIER', 'y')
('ASSIGNMENT', '=')
('IDENTIFIER', '100')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer')
('DOT', '.')
('IDENTIFIER', 'alignX')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer')
('DOT', '.')
('IDENTIFIER', 'alignY')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer')
('DOT', '.')
('IDENTIFIER', 'fontScale')
('ASSIGNMENT', '=')
('IDENTIFIER', '2')
('DOT', '.')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_timer_start')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'get_starting_ammo')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_running')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer')
('IDENTIFIER', 'SetTenthsTimerUp')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_start_time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'gettime')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_oc_pos1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'objective_obstacle_course')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_oc_timer_end')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '  Wait for the ending trigger to get hit, then end the timer')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_oc_timer_end')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_final_target1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_complete')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'gettime')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_timer')
('IDENTIFIER', 'destroy')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'print_results')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'ask_redo')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'print_results')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' TEMP RESULTS TO TEST')
('NEWLINE', '\n')
('COMMENT', '\tlevel.oc_end_time = 350000;')
('NEWLINE', '\n')
('COMMENT', '\tlevel.oc_start_time = 100;')
('NEWLINE', '\n')
('COMMENT', '\tlevel.oc_targets_remaining = 1;')
('NEWLINE', '\n')
('COMMENT', '\tlevel.oc_nade_targets_remaining = 0;')
('NEWLINE', '\n')
('COMMENT', '\tlevel.oc_total_targets = 12;')
('NEWLINE', '\n')
('COMMENT', '\tlevel.starting_ammo = 230;')
('NEWLINE', '\n')
('COMMENT', '\tlevel.ending_ammo = 218;')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_time_completed')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_time')
('SUBTRACT', '-')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_start_time')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', " / 1000;\t\t\t\t\t\t// figure out the player's time")
('NEWLINE', '\n')
('IDENTIFIER', 'oc_target_penalty')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_targets_remaining')
('MULTIPLY', '*')
('IDENTIFIER', '5000')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' time penalty for targets missed')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_nade_target_penalty')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_nade_targets_remaining')
('MULTIPLY', '*')
('IDENTIFIER', '10000')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' time penalty for nades missed')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_total_time')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'oc_time_completed')
('PLUS', '+')
('IDENTIFIER', 'oc_target_penalty')
('PLUS', '+')
('IDENTIFIER', 'oc_nade_target_penalty')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' total time')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_completed_str')
('ASSIGNMENT', '=')
('IDENTIFIER', 'convert_time_to_str')
('LPAREN', '(')
('IDENTIFIER', 'oc_time_completed')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_total_str')
('ASSIGNMENT', '=')
('IDENTIFIER', 'convert_time_to_str')
('LPAREN', '(')
('IDENTIFIER', 'oc_total_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_targ_str')
('ASSIGNMENT', '=')
('IDENTIFIER', 'convert_time_to_str')
('LPAREN', '(')
('IDENTIFIER', 'oc_target_penalty')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_nade_str')
('ASSIGNMENT', '=')
('IDENTIFIER', 'convert_time_to_str')
('LPAREN', '(')
('IDENTIFIER', 'oc_nade_target_penalty')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' figure out accuracy\t')
('NEWLINE', '\n')
('IDENTIFIER', 'garand_ammo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getAmmoCount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'm1garand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thompson_ammo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getAmmoCount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'thompson')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'ending_ammo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'garand_ammo')
('PLUS', '+')
('IDENTIFIER', 'thompson_ammo')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'shots_fired')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'starting_ammo')
('SUBTRACT', '-')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'ending_ammo')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_accuracy')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'shots_fired')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'targets_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_total_targets')
('SUBTRACT', '-')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_targets_remaining')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_accuracy')
('ASSIGNMENT', '=')
('IDENTIFIER', 'int')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'targets_hit')
('DIVIDE', '/')
('IDENTIFIER', 'shots_fired')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Vars to quickly change location/size/etc of the results')
('NEWLINE', '\n')
('IDENTIFIER', 'col1X')
('ASSIGNMENT', '=')
('IDENTIFIER', '300')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'colSpace')
('ASSIGNMENT', '=')
('IDENTIFIER', '230')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'col2X')
('ASSIGNMENT', '=')
('IDENTIFIER', 'col1x')
('PLUS', '+')
('IDENTIFIER', 'colSpace')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'iniY')
('ASSIGNMENT', '=')
('IDENTIFIER', '120')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'Ystep')
('ASSIGNMENT', '=')
('IDENTIFIER', '11')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'textSize')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'textAlpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " Ugly, repetitive stuff.  Fix this up when i'm not in a rush.")
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Time Completed:"')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col1X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Print out for the var, oc_time_completed')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col2X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Targets Missed:"')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col1X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '1')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Print out how many targets are missed')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col1X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '1')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Print out for the var, oc_target_penalty')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col2X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '1')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Grenade Targets Missed:"')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col1X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '2')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '6')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Print out for the var, oc_nade_target_penalty')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '6')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col2X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '2')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '7')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Accuracy"')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '7')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col1X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '3')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '8')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Print out for the var, oc_accuracy')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '8')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col2X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '3')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '9')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Previous Time:"')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '9')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col1X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '5')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '10')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Print out for the var, level.previous_best')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '10')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col2X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '5')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '11')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' "Total Time:"')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '11')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col1X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '6')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '12')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Print out for the var, oc_total_time')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '12')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col2X')
('COMMA', ',')
('IDENTIFIER', 'iniY')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '6')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', 'textAlpha')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '13')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Shader behind the text')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '13')
('RBRACKET', ']')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'col1X')
('SUBTRACT', '-')
('IDENTIFIER', '5')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', 'iniY')
('SUBTRACT', '-')
('IDENTIFIER', 'Ystep')
('RPAREN', ')')
('SUBTRACT', '-')
('IDENTIFIER', '5')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'top')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'textSize')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Print out the results of the Obstacle Course.\t\t')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_TIME_COMPLETED')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('IDENTIFIER', 'oc_completed_str')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_TARGETS_MISSED')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', 'level.oc_targets_remaining')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_targets_remaining')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '+')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'oc_targ_str')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_GRENADES_MISSED')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', 'level.oc_nade_targets_remaining')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '6')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '+')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'oc_nade_str')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '7')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ACCURACY')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Accuracy')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'shots_fired')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '8')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('IDENTIFIER', 'oc_accuracy')
('PLUS', '+')
('QUOTE', '"')
('STRING', '%')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' oc_accuracy')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '8')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_NA')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', " you didn't shoot")
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '9')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'PREVIOUS BEST:')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' TEMP -- GET THIS CONVERTED TO LOCALIZED STRING')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '11')
('RBRACKET', ']')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_TOTAL_TIME')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '12')
('RBRACKET', ']')
('IDENTIFIER', 'Settext')
('LPAREN', '(')
('IDENTIFIER', 'oc_total_str')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' if this is the first time running the OC, pring N/A as previous time')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'previous_best')
('EQUALS_TO', '==')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '10')
('RBRACKET', ']')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OC_NA')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_prev_str')
('ASSIGNMENT', '=')
('IDENTIFIER', 'convert_time_to_str')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'previous_best')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '10')
('RBRACKET', ']')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('IDENTIFIER', 'oc_prev_str')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '13')
('RBRACKET', ']')
('IDENTIFIER', 'SetShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'black')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'colSpace')
('PLUS', '+')
('IDENTIFIER', 'Ystep')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', 'Ystep')
('MULTIPLY', '*')
('IDENTIFIER', '7')
('RPAREN', ')')
('PLUS', '+')
('IDENTIFIER', 'Ystep')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', '13')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'sort')
('ASSIGNMENT', '=')
('IDENTIFIER', '10')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' If the player beats their record, set as new record.')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'previous_best')
('GREATER_THAN', '>')
('IDENTIFIER', 'oc_total_time')
('LOGICAL_OR', '||')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'previous_best')
('EQUALS_TO', '==')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'previous_best')
('ASSIGNMENT', '=')
('IDENTIFIER', 'oc_total_time')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' have sarge react to th etime')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'sarge_reaction')
('LPAREN', '(')
('IDENTIFIER', 'oc_total_time')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_targets_remaining')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_nade_targets_remaining')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('IDENTIFIER', 'x')
('COMMA', ',')
('IDENTIFIER', 'y')
('COMMA', ',')
('IDENTIFIER', 'alignX')
('COMMA', ',')
('IDENTIFIER', 'alignY')
('COMMA', ',')
('IDENTIFIER', 'fontscale')
('COMMA', ',')
('IDENTIFIER', 'alpha')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'x')
('ASSIGNMENT', '=')
('IDENTIFIER', 'x')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'y')
('ASSIGNMENT', '=')
('IDENTIFIER', 'y')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'alignX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'alignX')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'alignY')
('ASSIGNMENT', '=')
('IDENTIFIER', 'alignY')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'fontScale')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fontScale')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', 'alpha')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'sort')
('ASSIGNMENT', '=')
('IDENTIFIER', '20')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'font')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'objective')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Pass in time as milliseconds!')
('NEWLINE', '\n')
('IDENTIFIER', 'convert_time_to_str')
('LPAREN', '(')
('IDENTIFIER', 'oc_time')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' figure out minutes and seconds')
('NEWLINE', '\n')
('IDENTIFIER', 'time_min')
('ASSIGNMENT', '=')
('IDENTIFIER', 'int')
('LPAREN', '(')
('IDENTIFIER', 'oc_time')
('DIVIDE', '/')
('IDENTIFIER', '60000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'time_sec')
('ASSIGNMENT', '=')
('IDENTIFIER', 'int')
('LPAREN', '(')
('IDENTIFIER', 'oc_time')
('RPAREN', ')')
('MODULUS', '%')
('IDENTIFIER', '60000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'time_sec')
('DIVIDE_EQUALS', '/=')
('IDENTIFIER', '1000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'time_sec')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '10')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'time_sec')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'time_sec')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'time_str')
('ASSIGNMENT', '=')
('IDENTIFIER', 'time_min')
('PLUS', '+')
('QUOTE', '"')
('STRING', ':')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'time_sec')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'time_str')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ask_redo')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'oc_restart')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_ask_redo')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '8')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'objective_goto_oc_or_tents')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' remove player clip from end')
('NEWLINE', '\n')
('IDENTIFIER', 'endclip')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_disable_end')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'endclip')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'endclip')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_pop_targets')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_pop_targets')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_targ7')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_pop_targets')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_targ8')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'oc_pop_targets')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_pop_targets')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_p_targ_angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'check_end')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Set up the OC to run again')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_restart')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_restart')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_end_results')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'destroy')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'giveMaxAmmo')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'm1garand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'giveMaxAmmo')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'thompson')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'giveMaxAmmo')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fraggrenade')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'sarge_oc_setup')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'setup_obstacle_course')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Watch the target to see if it is hit')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_oc_target')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_complete')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'drawoncompass')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'target_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'target_hit')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'guy')
('COMMA', ',')
('IDENTIFIER', 'dmg')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'if the player shoots the target, hurray!')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isPlayer')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'target_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_targets_remaining')
('SUBTRACT', '-')
('SUBTRACT', '-')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'spin_target')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Turn off the aim assist on the target after it is hit')
('NEWLINE', '\n')
('IDENTIFIER', 'aAssist')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'script_noteworthy')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'aAssist')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'aAssist')
('IDENTIFIER', 'disableAimAssist')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Watch the target to see if it is hit')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_oc_pop_target')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_complete')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'target_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'target_hit')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'guy')
('COMMA', ',')
('IDENTIFIER', 'dmg')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'if the player shoots the target, hurray!')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isPlayer')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'target_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_targets_remaining')
('SUBTRACT', '-')
('SUBTRACT', '-')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'lay_down_target')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' watch the given trigger to see if a grenade hits it...and stuff')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_grenade_target')
('LPAREN', '(')
('IDENTIFIER', 'ending_signal')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_complete')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'grenade_fire')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'grenade')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'grenade')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'check_grenade')
('LPAREN', '(')
('IDENTIFIER', 'self')
('COMMA', ',')
('IDENTIFIER', 'ending_signal')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Watch the grenade to see if it hits the given trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'check_grenade')
('LPAREN', '(')
('IDENTIFIER', 'trigger_to_watch')
('COMMA', ',')
('IDENTIFIER', 'ending_signal')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_complete')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'grenade_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'grenade_hit')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'self')
('IDENTIFIER', 'isTouching')
('LPAREN', '(')
('IDENTIFIER', 'trigger_to_watch')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'oc_nade_targets_remaining')
('SUBTRACT', '-')
('SUBTRACT', '-')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'grenade_hit')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flip_up_targets')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flip_up_targets')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_targ7')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_targ8')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'rotateroll')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '90')
('COMMA', ',')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_pop_targets')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_popup_target')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'oc_pop_targets')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_pop_targets')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_oc_pop_target')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'sr_aa_targ')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_p_assist_target')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'sr_aa_targ')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'sr_aa_targ')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'enableAimAssist')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'lay_down_target')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_lay')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_lay')
('IDENTIFIER', 'rotateroll')
('LPAREN', '(')
('IDENTIFIER', '90')
('COMMA', ',')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spin_target')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'targ_to_spin')
('IDENTIFIER', 'rotateyaw')
('LPAREN', '(')
('IDENTIFIER', '360')
('COMMA', ',')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'sarge_reaction')
('LPAREN', '(')
('IDENTIFIER', 'total_time')
('COMMA', ',')
('IDENTIFIER', 'targs_left')
('COMMA', ',')
('IDENTIFIER', 'nade_targs_left')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'targs_left')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', '3')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_results_targs')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'nade_targs_left')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_results_nade_targs')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'total_time')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', '40')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_results_good')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'total_time')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', '55')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_results_average')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'total_time')
('GREATER_THAN', '>')
('IDENTIFIER', '55')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_results_bad')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'check_end')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'training_over')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'difficulty_select')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'get_starting_ammo')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'garand_ammo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getAmmoCount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'm1garand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thompson_ammo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getAmmoCount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'thompson')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'starting_ammo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'garand_ammo')
('PLUS', '+')
('IDENTIFIER', 'thompson_ammo')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tSARGE MOVEMENT')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Probably sloppy for now')
('NEWLINE', '\n')
('IDENTIFIER', 'sarge_movement_main')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_to_oc')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watch_to_sr')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_to_oc')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'player_to_oc')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog_and_sound')
('LPAREN', '(')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_oc_start')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'objective_grab_thompson')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ambjeep')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'amb_jeep')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ambjeep')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'loop_jeep')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_for_thompson')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'watch_to_sr')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'player_to_sr')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'level.srgt thread maps\\training_anim::sarge_dialog_and_sound(5);')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'sarge_oc_setup')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_timer_start')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_oc_pos1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_at_river1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_oc_pos2')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_shoot_targets')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_oc_pos3')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_through_crouch')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_oc_pos4')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_through_water')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_oc_pos5')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_player_in_bunker')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'move_sarge')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sgt_oc_start')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_for_thompson')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getCurrentWeapon')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'thompson')
('QUOTE', '"')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'getCurrentOffhand')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'thompson')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'thompson picked up')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_ready_to_start')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_ready_to_start')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'sarge_oc_setup')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_first_time_speech')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog_and_sound')
('LPAREN', '(')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_dialog_and_sound')
('LPAREN', '(')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'wait(1);')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tempbrush')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_disable_mantle')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tempbrush')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tAMBIENT AI')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Time Table:')
('NEWLINE', '\n')
('COMMENT', '\t0:00 - 1:00:  Spawn guys and send them to lvt start + run to end of first section')
('NEWLINE', '\n')
('COMMENT', '\t1:00 - 1:15:  Make decision on where they would like to go (OC or SR) and move to position')
('NEWLINE', '\n')
('COMMENT', '\t1:30 - -:--:  Spawn the next wave')
('NEWLINE', '\n')
('COMMENT', '\t3:30 - -:--:  Delete current wave')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tObstacle Course')
('NEWLINE', '\n')
('COMMENT', '\t\t1:15 - 1:45:  First set of two men begin the course and get half way through')
('NEWLINE', '\n')
('COMMENT', '\t\t1:45 - 2:15:  Second set of two men run the course and get half way through (first wave exits)')
('NEWLINE', '\n')
('COMMENT', '\t\t2:15 - 2:45:  2 Soldiers from SR run the OC, other two walk off')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tShooting Range')
('NEWLINE', '\n')
('COMMENT', '\t\t1:15 - 2:00:  Soldiers shoot at targets and toss grenades')
('NEWLINE', '\n')
('COMMENT', '\t\t2:00 - 2:15:  Soldiers run to obstacle course')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'start_ambient_ai')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'cur_wave')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '85')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' time to delay before starting the new wave\t\t\t\t')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'create_new_wave')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '20')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' time to get the group from where they spawned to the lvt')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_wave_to_point_one')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'cur_wave')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'wait_for_wave_death')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'cur_wave')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_for_wave_death')
('LPAREN', '(')
('IDENTIFIER', 'which_wave')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '190')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'delete_wave')
('LPAREN', '(')
('IDENTIFIER', 'which_wave')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_wave_manager')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_origin')
('QUOTE', '"')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'barn_count')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'barn_array')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death_node')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'cur_wave')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'waves')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'create a new wave and add it to the array')
('NEWLINE', '\n')
('IDENTIFIER', 'create_new_wave')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'new_wave')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_locs')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wave_num')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'cur_wave')
('SEMICOLON', ';')
('COMMENT', ' make life more simple, the wave number')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_name')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'new_recruit')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'wave_num')
('SEMICOLON', ';')
('COMMENT', ' create a name to give to the soldiers')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_locs')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'new_trainee')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' get an array of the spawners')
('NEWLINE', '\n')
('IDENTIFIER', 'lvt_goal_nodes')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lvt_spot')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' get an array of the lvt spots')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'assertex')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'spawn_locs')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'spawn_locs is not defined!')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'assertex')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'lvt_goal_nodes')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'lvt_goal_nodes is not defined!')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'j')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'j')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'spawn_locs')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'j')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_locs')
('LBRACKET', '[')
('IDENTIFIER', 'j')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'count')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'spawn_locs')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'new_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn_locs')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'stalingradspawn')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'spawn_failed')
('LPAREN', '(')
('IDENTIFIER', 'new_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'new_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'targetname')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn_name')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'new_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'trainee')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'assertex')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'new_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'create_new_wave(): Failed to spawn dude')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'waves')
('LBRACKET', '[')
('IDENTIFIER', 'wave_num')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'new_wave')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'send_wave_to_point_one')
('LPAREN', '(')
('IDENTIFIER', 'wave_num')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'move_wave')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'move_wave')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'waves')
('LBRACKET', '[')
('IDENTIFIER', 'wave_num')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'run_end_array')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'run_course_end')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' send the soldiers to their destination nodes, as well as setting up the stance-changing triggers')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'move_wave')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'move_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'run_end_array')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'move_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'change_ai_stance')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ai_crouch_trig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'move_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'change_ai_stance')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ai_stand_trig1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'stand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'move_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'change_ai_stance')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ai_prone_trig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'prone')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'move_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'change_ai_stance')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ai_stand_trig2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'stand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '40')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' delay to allow them to get there (setting wait to keep a strict time schedule)')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' send the first four to the OC, second four to the SR')
('NEWLINE', '\n')
('IDENTIFIER', 'move_wave')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_group_to_oc')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'move_wave')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_group_to_sr')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Send 0-3 to the OC and 4-7 to SR')
('NEWLINE', '\n')
('IDENTIFIER', 'send_group_to_oc')
('LPAREN', '(')
('IDENTIFIER', 'move_wave')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_node_array')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_start_node')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_od_node_array')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_on_deck')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '4')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '2')
('RPAREN', ')')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'oc_node_array')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'oc_od_node_array')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('SUBTRACT', '-')
('IDENTIFIER', '2')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '15')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_entity_through_oc')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_entity_through_oc')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'oc_node_array')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'oc_node_array')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '30')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_entity_through_oc')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_entity_through_oc')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'send_group_to_sr')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'sr_node_array')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'shooting_range_node')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_node_array')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_start_node')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'oc_death_array')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnodearray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death_node')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '4')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('PLUS', '+')
('IDENTIFIER', '4')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('PLUS', '+')
('IDENTIFIER', '4')
('RBRACKET', ']')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'sr_node_array')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '45')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'oc_node_array')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'oc_node_array')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '6')
('RBRACKET', ']')
('IDENTIFIER', 'go_behind_barn')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '7')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '7')
('RBRACKET', ']')
('IDENTIFIER', 'go_behind_barn')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '30')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_entity_through_oc')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'send_entity_through_oc')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'send_entity_through_oc')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' run to the first point')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'bbeam_nodes')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', '64')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' run to the ending point of the OC')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'ai_end_pos')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'change_ai_stance')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_crouch_trig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'change_ai_stance')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_stand_trig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'stand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' run to the despawning point')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'go_behind_barn')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'go_behind_barn')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'barn_array')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'barn_count')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'barn_count')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'barn_count')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', '8')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'barn_count')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'delete_wave')
('LPAREN', '(')
('IDENTIFIER', 'which_wave')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'dead_wave')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'dead_wave')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wave_manager')
('DOT', '.')
('IDENTIFIER', 'waves')
('LBRACKET', '[')
('IDENTIFIER', 'which_wave')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' send the soldiers to their destination nodes, as well as setting up the stance-changing triggers')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'dead_wave')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'dead_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'dead_wave')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tObjective Functions')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_run_endurance')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_struct')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'obj_endurance')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'current')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OBJ_ENDURANCE')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'obj_struct')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_end_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'finished_locomotion')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_end_trig')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_choose')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_struct1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'obj_choose1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_struct2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'obj_choose2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '2')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'current')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OBJ_CHOOSE')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'obj_struct1')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_AdditionalPosition')
('LPAREN', '(')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', 'obj_struct2')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'choice made')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '2')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_grab_thompson')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_struct')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'obj_thompson')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '3')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'current')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OBJ_THOMPSON')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'obj_struct')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'thompson picked up')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '3')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_delete')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_obstacle_course')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '4')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'current')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OBJ_OBSTACLE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'oc_complete')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '4')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_check_objectives')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '5')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'current')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OBJ_CHECK_OBJ')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_HINT_CHECK_OBJ')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'obj_check_obj_remove')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'wait_for_pause')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'menu checked')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '5')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_delete')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_goto_obstacle_course')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_struct')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'obj_choose2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '6')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'current')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OBJ_GOTO_OC')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'obj_struct')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_end_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'player_to_oc')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_end_trig')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '6')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_goto_wall')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '7')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'current')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OBJ_OC_WALL')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'something')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '7')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_delete')
('LPAREN', '(')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_goto_oc_or_tents')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_struct1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'obj_oc_wall')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_struct2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'obj_end')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '8')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'current')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'TRAINING_OBJ_OC_OR_END')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'obj_struct1')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_AdditionalPosition')
('LPAREN', '(')
('IDENTIFIER', '8')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', 'obj_struct2')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' maybe set invisible if the player goes to the OC?')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'obj_check_obj_remove')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hintelem')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_for_pause')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'GetDvarInt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'cl_paused')
('QUOTE', '"')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '01')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'menu checked')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tMenu Functions')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('IDENTIFIER', 'difficulty_select')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'difficulty_shader')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Shader behind the text')
('NEWLINE', '\n')
('IDENTIFIER', 'difficulty_shader')
('IDENTIFIER', 'init_results_hudelem')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '120')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'top')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'difficulty_shader')
('IDENTIFIER', 'SetShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'black')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1000')
('COMMA', ',')
('IDENTIFIER', '480')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' --- menu popup for difficulty selection ---')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'openMenu')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'select_difficulty')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'freezecontrols')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'setblur')
('LPAREN', '(')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'menuresponse')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'menu')
('COMMA', ',')
('IDENTIFIER', 'response')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'response')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'continue')
('QUOTE', '"')
('LOGICAL_OR', '||')
('IDENTIFIER', 'response')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'tryagain')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'openMenu')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'select_difficulty')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'setblur')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('DOT', '.')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'difficulty_shader')
('IDENTIFIER', 'destroy')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'freezecontrols')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'response')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'continue')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'nextmission')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'response')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'tryagain')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'srgt')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'training_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'sarge_oc_dialog')
('LPAREN', '(')
('IDENTIFIER', '8')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'check_end')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '\tVehicle Functions')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#using_animtree')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicles')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'lvt_unload_test')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lvt_unloaded')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setflaggedanim')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'drop_gate')
('QUOTE', '"')
('COMMA', ',')
('MODULUS', '%')
('IDENTIFIER', 'v_lvt4_open_ramp')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('EOF', None)