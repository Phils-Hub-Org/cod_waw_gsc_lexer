('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' file: ber2_fx.gsc')
('NEWLINE', '\n')
('COMMENT', ' description: fx script for berlin2: setup, special fx functions, etc.')
('NEWLINE', '\n')
('COMMENT', ' scripter: slayback')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_util')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_weather')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'disableFX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', " if it's a geo map don't do stuff that requires level scripting")
('NEWLINE', '\n')
('IDENTIFIER', 'disable_fx')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetDvarInt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disable_fx')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'disable_fx')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'disable_fx')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'disableFX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " laufer's system")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'disableFX')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_in_geo')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_in_geo')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'disableFX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' non-geo version only!')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'disableFX')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_util_fx')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'water_drops_init')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tthread vision_settings(); // - Added by Rich 05/02/08')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'createart')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_art')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', 'Added by Rich 05/02/08 calls the ber2_art.gsc that controls the vision sets and fog')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'createfx')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_fx')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_weapon_fx')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wind_settings')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' splitscreen_fog_setup();')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'footsteps')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_createfx_fx')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rooftopsign_breakaway_dust')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_dust_sign_support_break')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fallingboards_fire')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_debris_wood_boards_fire')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rifleflash')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/muzzleflashes/standardflashworld')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rifle_shelleject')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/shellejects/rifle')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'headshot')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_deathfx_headshot_ber2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'bloodspurt')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_deathfx_head_bloodspurt_ber2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' katyusha particles')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'katyusha_rocket_launch')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/muzzleflashes/fx_rocket_katyusha_launch')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'katyusha_rocket_trail')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/rocket/fx_rocket_katyusha_geotrail')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' falling sign moment explosion/shockwave')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fallingsign_exp')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_exp_roof_sign_shock')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' rocket hitting bank window w/ money fluttering to ground')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'bank_window_money_exp')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_exp_bank_win_money')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' secondaries')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'window_explosion')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_exp_window_fireball_out')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' pak43 building chunks')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'arty_bldg_impact')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_exp_wall_impact_01')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' smokescreen for the alley, to obscure forcespawns')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smokescreen')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_smk_fill_small')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' falling building fx')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'building_t34_impact')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_exp_building_t34_hit')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'building_collapse')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_building_2a_collapse')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'building_collapse_fallout')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_building_2a_collapse_fallout')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'battle_smoke_heavy')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_smoke_low_thick_oneshot')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'tower_dust_trail')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_tower_collapse_emit')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'building_collapse_oneshot')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_building_2a_collapse_hit')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' metro arty impact dust')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'metro_arty_dust')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_debris_sbwy_ceiling_impact_sand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'metro_arty_dust_chunks')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_debris_sbwy_ceiling_impact_conc')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' metro flickering light - "filler" particle light sources')
('NEWLINE', '\n')
('COMMENT', 'level._effect["metro_light_filler"] = LoadFX( "env/light/fx_ray_ceiling_amber_dim" );')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'metro_light_filler_high')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/light/fx_lgiht_ceiling_flikr_sys_01')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'metro_light_filler_med')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/light/fx_lgiht_ceiling_flikr_sys_02')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'metro_light_filler_low')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/light/fx_lgiht_ceiling_flikr_sys_03')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' metrowave fx')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'metrowave_base')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_wave_base')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' rat splash')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rat_splash')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_water_single_splash')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' light explosion')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'light_explode')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_exp_electric_pole')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' bubbles')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'limb_bubbles')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/sniper/fx_underwater_foam_bubbles_limb')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'torso_bubbles')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/sniper/fx_underwater_foam_bubbles_torso')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' fakefire muzzleflashes')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'distant_muzzleflash')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/muzzleflashes/heavy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' AAA gun tracers & cloudbursts')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'aaa_tracer')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/tracer/fx_tracer_jap_tripple25_projectile')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'cloudburst')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/flak/fx_flak_cloudflash_night')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' metrogate molotov lighting fx')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zippo_flame')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/molotov/fx_molotov_lighter')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'molotov_flame')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/molotov/fx_molotov_wick')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' flame deaths')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_torso')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_torso')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_torso')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_torso')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_torso')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_torso')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' lightning strike')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'lightning_strike')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_ber2_lightning_flash')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' rain, controlled by _weather')
('NEWLINE', '\n')
('COMMENT', 'level._effect["rain_heavy_cloudtype"]\t= LoadFX( "weather/rain_heavy_cloudtype" );')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_10')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_heavy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_9')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_heavy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_8')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_heavy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_7')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_heavy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_6')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_med')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_5')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_med')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_4')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_med')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_3')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_med')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_2')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_lght')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_1')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_lght')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rain_0')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/weather/fx_rain_sys_lght')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'weather_control')
('LPAREN', '(')
('IDENTIFIER', 'disableFX')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'lights_arty_init')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_weapon_fx')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheItem')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'napalmblob')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' for the molotov')
('NEWLINE', '\n')
('IDENTIFIER', 'precacheItem')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'napalmbloblight')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' load fx used by util scripts')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_util_fx')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'flesh_hit')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'impacts/flesh_hit_body_fatal_exit')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'katyusha_rocket_explosion')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon/rocket/fx_rocket_katyusha_explosion')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' set up footsteps')
('NEWLINE', '\n')
('IDENTIFIER', 'footsteps')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'asphalt')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'brick')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'carpet')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'cloth')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'concrete')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dirt')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_sand')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'foliage')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_sand')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'gravel')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'grass')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'metal')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mud')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_mud')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'paper')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'plaster')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rock')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'water')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_water')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setFootstepEffect')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'wood')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bio/player/fx_footstep_dust')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '// SRS 6/13/2008: splitscreen fog')
('NEWLINE', '\n')
('COMMENT', 'splitscreen_fog_setup()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tif( IsSplitScreen() )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tstart_dist = 700;')
('NEWLINE', '\n')
('COMMENT', '\t\thalfway_dist = 2000;')
('NEWLINE', '\n')
('COMMENT', '\t\thalfway_height = 10000;')
('NEWLINE', '\n')
('COMMENT', '\t\tcull_dist = 2000;')
('NEWLINE', '\n')
('COMMENT', '\t\tbase_height = 0;')
('NEWLINE', '\n')
('COMMENT', '\t\tred = 0.115;')
('NEWLINE', '\n')
('COMMENT', '\t\tgreen = 0.123;')
('NEWLINE', '\n')
('COMMENT', '\t\tblue = 0.141;')
('NEWLINE', '\n')
('COMMENT', '\t\ttrans_time = 0;')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\t\tcull_dist = 2000;')
('NEWLINE', '\n')
('COMMENT', '\t\tset_splitscreen_fog( start_dist, halfway_dist, halfway_height, base_height, red, green, blue, trans_time, cull_dist );')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " --- BARRY'S SECTION ---//")
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Global Wind Settings')
('NEWLINE', '\n')
('IDENTIFIER', 'wind_settings')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' These values are supposed to be in inches per second.')
('NEWLINE', '\n')
('IDENTIFIER', 'SetSavedDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'wind_global_vector')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '-33 111 18')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' (171, -140) = 13.3 mph w/ a normal of -0.9 at hi_altitude')
('NEWLINE', '\n')
('IDENTIFIER', 'SetSavedDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'wind_global_low_altitude')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'SetSavedDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'wind_global_hi_altitude')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1400')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'SetSavedDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'wind_global_low_strength_percent')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' 4mph at low altitude')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Add a while loop to vary the strength of the wind over time.')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_createfx_fx')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_window_out')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_smoke_window_lg_gry')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_plume_xlg_slow_blk')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_smk_plume_xlg_slow_blk_w')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_hallway_faint_dark')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_smoke_hallway_faint_dark')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_hallway_thick_dark')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_smoke_hallway_smoke_roll_dark')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_bank')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_battlefield_smokebank_ling_lg_w')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'battlefield_smokebank_sm_tan')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_battlefield_smokebank_ling_sm_w')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'ash_and_embers')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_ash_embers_light')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_hall_exit_drk')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_smoke_hall_exit_drk')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_window_out_small')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_smoke_door_top_exit_drk')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_plume_sm_fast_blk_w')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_smoke_plume_sm_fast_blk_w')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_plume_lg_slow_def')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_smoke_plume_lg_slow_def')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'brush_smoke_smolder_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_smoke_brush_smolder_md')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_impact_smolder_w')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_smoke_crater_w')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fire_window')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_win_nsmk_0x35y50z')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fire_wall_100_150')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_wall_smk_0x100y155z')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_heavy_leak')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_water_drips_hvy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_heavy_leak_long')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_water_drips_hvy_long')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'wire_sparks')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/electrical/fx_elec_wire_spark_burst')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'wire_sparks_blue')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/electrical/fx_elec_wire_spark_burst_blue')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fire_distant_150_600')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_150x600_tall_distant')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'light_ceiling_dspot')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/light/fx_ray_ceiling_amber_dim')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_pipe_leak_md')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_wtr_pipe_spill_md')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_pipe_leak_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_wtr_pipe_spill_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_spill_fall')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_wtr_spill_sm_thin')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_wake_md')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_water_wake_flow_md')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_leak_runner')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_water_leak_runner_100')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_wake_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_water_wake_flow_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_wake_mist')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_water_wake_flow_mist')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_splash_md')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_water_splash_leak_md')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'water_rain_distortion')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/water/fx_water_rain_distortion')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'debris_brick_fall_bank')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_building_debris_fall_bank')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'debris_brick_fall')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_building_debris_fall_amb')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'debris_dust_motes')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_debris_dust_motes')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'ray_godray')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_ray_bank_godray')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'ray_small_glow')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_ray_small_glow')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'god_rays_large')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/light/fx_light_god_rays_large')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'god_rays_medium')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/light/fx_light_god_rays_medium')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'god_rays_small')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_light_god_raysb_small')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'god_rays_dust_motes')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/light/fx_light_god_rays_dust_motes')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fire_bookcase_wide')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_bookshelf_wide')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fire_column_creep_xsm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_column_creep_xsm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fire_column_creep_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_column_creep_sm')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'smoke_room_fill')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_smoke_fill_indoor')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'ash_and_embers_hall')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_debris_hall_ash_embers')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fire_detail')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_debris_xsmall')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fire_ceiling_50_100')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_ceiling_50x100')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fire_ceiling_100_100')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_ceiling_100x100')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'ash_and_embers_small')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'maps/ber2/fx_debris_fire_motes')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', "--- RICH'S SECTION - Added by Rich 05/02/08 ---//")
('NEWLINE', '\n')
('COMMENT', 'set initial vision settings')
('NEWLINE', '\n')
('COMMENT', 'vision_settings()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\twait .5;')
('NEWLINE', '\n')
('COMMENT', '\tVisionSetNaked( "ber2_interior", 0 );')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('COMMENT', "//---END OF RICH'S SECTION---//")
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' --- ambient FX functions ---')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'weather_control')
('LPAREN', '(')
('IDENTIFIER', 'disableFX')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'disableFX')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'disableFX')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'disableFX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'disableFX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' -- RAIN --')
('NEWLINE', '\n')
('COMMENT', ' controls the temperament of the weather')
('NEWLINE', '\n')
('IDENTIFIER', 'rainInit')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hard')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' get rain going')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'rainEffectChange')
('LPAREN', '(')
('IDENTIFIER', '9')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' tweak initial rain strength')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'playerWeather')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' make the actual rain effect generate around the players')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' -- LIGHTNING --')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'disableFX')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'addLightningExploder')
('LPAREN', '(')
('IDENTIFIER', '10000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addLightningExploder')
('LPAREN', '(')
('IDENTIFIER', '10001')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addLightningExploder')
('LPAREN', '(')
('IDENTIFIER', '10002')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addLightningExploder')
('LPAREN', '(')
('IDENTIFIER', '10003')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addLightningExploder')
('LPAREN', '(')
('IDENTIFIER', '10004')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'addLightningExploder')
('LPAREN', '(')
('IDENTIFIER', '10005')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'disableFX')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'thunderSoundEmitter')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent_safe')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'thunder_struct')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'nextLightning')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetTime')
('LPAREN', '(')
('RPAREN', ')')
('PLUS', '+')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('COMMENT', ' sets when the first lightning of the level will go off')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'lightning')
('LPAREN', '(')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'lightning_normal')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'lightning_flash')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' kicks off lightning in _weather')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'disableFX')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' turn rain off when player goes belowground')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'subway_gate_closed')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'rainEffectChange')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'lightning_flash')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Happens on the client now - DSL')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tSetSunLight( 4, 4, 4.5 );\n\tsetVolFog(250, 550, 400, -128, 0.6, 0.6, 0.7, 0);\n         \n\tSetSunLight( 1, 1, 1.5 ); \n\tsetVolFog(250, 550, 400, -128, 0.45, 0.45, 0.5, 0); \n\n\twait( 0.0014 );              \n\t              \n\tSetSunLight( 3, 3, 3.5 );\n\tsetVolFog(250, 550, 400, -128, 0.55, 0.55, 0.6, 0);                   \n\t\n\tSetSunLight( 2, 2, 2.5 );\n\tsetVolFog(250, 550, 400, -128, 0.65, 0.65, 0.7, 0);                                  \n\t                          \n\tSetSunLight( 1.5, 1.5, 2 );\n\tsetVolFog(250, 550, 400, -128, 0.7, 0.7, 0.75, 0);                     \n\t\n\twait( 0.0010 ); \n\t\n\tSetSunLight( 1, 1, 1.5 );\n\tsetVolFog(250, 550, 400, -128, 0.55, 0.55, 0.6, 0);               \n                               \n\tSetSunLight( 5, 5, 5.5 );\n\tsetVolFog(250, 550, 400, -128, 0.5, 0.5, 0.55, 0);                   \n\t\n\twait( 0.0011 ); \n\t\n\tSetSunLight( 4, 4, 4.5 );\n\tsetVolFog(250, 550, 400, -128, 0.55, 0.55, 0.6, 0);             \n           \n\tSetSunLight( 1, 1, 1.5 );\n\tsetVolFog(250, 550, 400, -128, 0.55, 0.55, 0.6, 0);                        \n\t\n\twait( 0.0015 ); \n\t\n\tSetSunLight( 2.5, 2.5, 3 ); \n\tsetVolFog(250, 550, 400, -128, 0.65, 0.65, 0.7, 0);            \n  ')
('NEWLINE', '\n')
('COMMENT', "Slayback's Settings")
('NEWLINE', '\n')
('COMMENT', '\tSetSunLight( 3, 3, 3.5 );')
('NEWLINE', '\n')
('COMMENT', '\tSetSunDirection( ( 270, 0, 0 ) );')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\twait( 0.1 );')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tSetSunLight( 3.9, 3.9, 4 );')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'lightning_normal')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' Happens on the client now.  DSL')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\twait( 0.05 );\n\tResetSunLight();\n\tsetVolFog(250, 750, 400, -128, 0.44, 0.52, 0.44, 0);  ')
('NEWLINE', '\n')
('COMMENT', 'Salybacks Setting\t')
('NEWLINE', '\n')
('COMMENT', 'ResetSunDirection(); ')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'water_drops_init')
('LPAREN', '(')
('IDENTIFIER', 'startCount')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trigs')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger_water_drops')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'trigs')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'trigs')
('DOT', '.')
('IDENTIFIER', 'size')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('COMMA', ',')
('QUOTE', '"')
('STRING', "Can't find any water drop fx triggers.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'array_thread')
('LPAREN', '(')
('IDENTIFIER', 'trigs')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'water_drops_trigger_think')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'startCount')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'startCount')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' wait for everyone to connect, and start them with water on the lens')
('NEWLINE', '\n')
('IDENTIFIER', 'flagMsg')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'all_players_connected')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'flag')
('LBRACKET', '[')
('IDENTIFIER', 'flagMsg')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('IDENTIFIER', 'flagMsg')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('IDENTIFIER', 'flagMsg')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'array_thread')
('LPAREN', '(')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'scr_set_water_drops')
('COMMA', ',')
('IDENTIFIER', 'startCount')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'water_drops_triggers_delete')
('LPAREN', '(')
('IDENTIFIER', 'trigs')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'water_drops_triggers_delete')
('LPAREN', '(')
('IDENTIFIER', 'trigs')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flagMsg')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'all_players_connected')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'flag')
('LBRACKET', '[')
('IDENTIFIER', 'flagMsg')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('IDENTIFIER', 'flagMsg')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('IDENTIFIER', 'flagMsg')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'subway_gate_closed')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'array_thread')
('LPAREN', '(')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'scr_set_water_drops')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'delete_group')
('LPAREN', '(')
('IDENTIFIER', 'trigs')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'water_drops_trigger_think')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'script_int')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTMSG')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'Water drop fx trigger at origin ')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('QUOTE', '"')
('STRING', ' does not have script_int set.  You need to set this to specify the amount of water drops that will be generated.')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'player')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsPlayer')
('LPAREN', '(')
('IDENTIFIER', 'player')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'scr_set_water_drops')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'script_int')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait for player to leave trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'player')
('IDENTIFIER', 'IsTouching')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'scr_set_water_drops')
('LPAREN', '(')
('IDENTIFIER', 'count')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " need to make sure we don't call SetWaterDrops() with a positive count")
('NEWLINE', '\n')
('COMMENT', '  while the drops are already on screen - otherwise they will "snap" off of the screen')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'waterDropsActive')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'waterDropsActive')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'count')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'waterDropsActive')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'count')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'waterDropsActive')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'waterDropsActive')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetWaterDrops')
('LPAREN', '(')
('IDENTIFIER', 'count')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = a script_struct in the map')
('NEWLINE', '\n')
('IDENTIFIER', 'ambient_fakefire')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('COMMA', ',')
('IDENTIFIER', 'delayStart')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'delayStart')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('COMMA', ',')
('IDENTIFIER', '5')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'team')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'fireSound')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'weapType')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'rifle')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'script_noteworthy')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'team')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'axis_rifle')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'team')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'script_noteworthy')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'switch')
('LPAREN', '(')
('IDENTIFIER', 'team')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'axis_rifle')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'fireSound')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'weap_kar98k_fire')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'weapType')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'rifle')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'allied_rifle')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'fireSound')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'weap_mosinnagant_fire')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'weapType')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'rifle')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'axis_smg')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'fireSound')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'weap_mp40_fire')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'weapType')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'smg')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'allied_smg')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'fireSound')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'weap_ppsh_fire')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'weapType')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'smg')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'default')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTMSG')
('LPAREN', '(')
('QUOTE', '"')
('STRING', "ambient_fakefire: team name '")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'team')
('PLUS', '+')
('QUOTE', '"')
('STRING', "' is not recognized.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'weapType')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'rifle')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'muzzleFlash')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'distant_muzzleflash')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'soundChance')
('ASSIGNMENT', '=')
('IDENTIFIER', '60')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'burstMin')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'burstMax')
('ASSIGNMENT', '=')
('IDENTIFIER', '4')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'betweenShotsMin')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '8')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'betweenShotsMax')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '3')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'reloadTimeMin')
('ASSIGNMENT', '=')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'reloadTimeMax')
('ASSIGNMENT', '=')
('IDENTIFIER', '10')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'muzzleFlash')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'distant_muzzleflash')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'soundChance')
('ASSIGNMENT', '=')
('IDENTIFIER', '45')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'burstMin')
('ASSIGNMENT', '=')
('IDENTIFIER', '6')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'burstMax')
('ASSIGNMENT', '=')
('IDENTIFIER', '17')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'betweenShotsMin')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '048')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'betweenShotsMax')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '08')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'reloadTimeMin')
('ASSIGNMENT', '=')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'reloadTimeMax')
('ASSIGNMENT', '=')
('IDENTIFIER', '12')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' burst fire')
('NEWLINE', '\n')
('IDENTIFIER', 'burst')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', 'burstMin')
('COMMA', ',')
('IDENTIFIER', 'burstMax')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'burst')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' get a point in front of where the struct is pointing')
('NEWLINE', '\n')
('IDENTIFIER', 'traceDist')
('ASSIGNMENT', '=')
('IDENTIFIER', '10000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('IDENTIFIER', 'vector_multiply')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'traceDist')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' play muzzleflash fx and shoot tracer')
('NEWLINE', '\n')
('IDENTIFIER', 'PlayFX')
('LPAREN', '(')
('IDENTIFIER', 'muzzleFlash')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'BulletTracer')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'target')
('COMMA', ',')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' snyder steez - reduce popcorn effect')
('NEWLINE', '\n')
('COMMENT', ' TODO make the sound chance dependent on player proximity?')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'RandomInt')
('LPAREN', '(')
('IDENTIFIER', '100')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', 'soundChance')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'play_sound_in_space')
('LPAREN', '(')
('IDENTIFIER', 'fireSound')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', 'betweenShotsMin')
('COMMA', ',')
('IDENTIFIER', 'betweenShotsMax')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', 'reloadTimeMin')
('COMMA', ',')
('IDENTIFIER', 'reloadTimeMax')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = a script_struct in the map')
('NEWLINE', '\n')
('IDENTIFIER', 'ambient_cloudburst_fx')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " don't make them all start together")
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomInt')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'offsetX')
('ASSIGNMENT', '=')
('IDENTIFIER', '200')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'offsetY')
('ASSIGNMENT', '=')
('IDENTIFIER', '200')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'offsetZ')
('ASSIGNMENT', '=')
('IDENTIFIER', '200')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'burstsMin')
('ASSIGNMENT', '=')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'burstsMax')
('ASSIGNMENT', '=')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'burstWaitMin')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'burstWaitMax')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '65')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pauseMin')
('ASSIGNMENT', '=')
('IDENTIFIER', '4')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'pauseMax')
('ASSIGNMENT', '=')
('IDENTIFIER', '10')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'numBursts')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', 'burstsMin')
('COMMA', ',')
('IDENTIFIER', 'burstsMax')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'numBursts')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'offsetVec')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('NEWLINE', '\n')
('LPAREN', '(')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'offsetX')
('MULTIPLY', '*')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'offsetX')
('RPAREN', ')')
('COMMA', ',')
('NEWLINE', '\n')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'offsetY')
('MULTIPLY', '*')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'offsetY')
('RPAREN', ')')
('COMMA', ',')
('NEWLINE', '\n')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'offsetZ')
('MULTIPLY', '*')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'offsetZ')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'PlayFX')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'cloudburst')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('IDENTIFIER', 'offsetVec')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', 'burstWaitMin')
('COMMA', ',')
('IDENTIFIER', 'burstWaitMax')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', 'pauseMin')
('COMMA', ',')
('IDENTIFIER', 'pauseMax')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' snyder steez')
('NEWLINE', '\n')
('COMMENT', ' self = a script_origin in the map')
('NEWLINE', '\n')
('IDENTIFIER', 'ambient_aaa_fx')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'ambient_aaa_fx_rotate')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'firetime')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', '3')
('COMMA', ',')
('IDENTIFIER', '8')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'firetime')
('MULTIPLY', '*')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'PlayFX')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'aaa_tracer')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '14')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '19')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = the emitter script_origin')
('NEWLINE', '\n')
('IDENTIFIER', 'ambient_aaa_fx_rotate')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('IDENTIFIER', 'endonString')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'RotateTo')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', '312')
('DOT', '.')
('IDENTIFIER', '6')
('COMMA', ',')
('IDENTIFIER', '180')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '90')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '3')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '6')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rotatedone')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'RotateTo')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', '307')
('DOT', '.')
('IDENTIFIER', '4')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '7')
('COMMA', ',')
('IDENTIFIER', '90')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '3')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '6')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rotatedone')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'lights_arty_init')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamps')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'metro_flicker_hatlamp')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'array_validate')
('LPAREN', '(')
('IDENTIFIER', 'hatLamps')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', "Can't find any metro flickering hat lamp light sets.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'hatLamps')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('ASSIGNMENT', '=')
('IDENTIFIER', 'hatLamps')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'offModel')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent_safe')
('LPAREN', '(')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent_safe')
('LPAREN', '(')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'offModel')
('DOT', '.')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'offModel')
('IDENTIFIER', 'Hide')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('DOT', '.')
('IDENTIFIER', 'onIntensity')
('ASSIGNMENT', '=')
('IDENTIFIER', '3')
('DOT', '.')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('COMMENT', " rich's value = 3.5")
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('IDENTIFIER', 'SetLightIntensity')
('LPAREN', '(')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('DOT', '.')
('IDENTIFIER', 'onIntensity')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'particle_light')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'on')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'metro_flicker_lights')
('ASSIGNMENT', '=')
('IDENTIFIER', 'hatLamps')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = a scriptable light set')
('NEWLINE', '\n')
('IDENTIFIER', 'light_arty_flicker')
('LPAREN', '(')
('IDENTIFIER', 'darkTimeMin')
('COMMA', ',')
('IDENTIFIER', 'darkTimeMax')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'on')
('ASSIGNMENT', '=')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('DOT', '.')
('IDENTIFIER', 'onIntensity')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'off')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'darkTime')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', 'darkTimeMin')
('COMMA', ',')
('IDENTIFIER', 'darkTimeMax')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flickerTime')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'flickerTimeMin')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'flickerTimeMax')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'comboTime')
('ASSIGNMENT', '=')
('IDENTIFIER', 'darkTime')
('PLUS', '+')
('IDENTIFIER', 'flickerTime')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'endTime')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetTime')
('LPAREN', '(')
('RPAREN', ')')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'comboTime')
('MULTIPLY', '*')
('IDENTIFIER', '1000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'firstFlicker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'lightRegistered')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'onFrac')
('ASSIGNMENT', '=')
('IDENTIFIER', 'on')
('MULTIPLY', '*')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '15')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'intensityCap')
('ASSIGNMENT', '=')
('IDENTIFIER', 'on')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '9')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'stepMultiplier')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '04')
('SEMICOLON', ';')
('COMMENT', ' hacky, should derive this based on flickerTime')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'GetTime')
('LPAREN', '(')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'endTime')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'firstFlicker')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloat')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'RandomInt')
('LPAREN', '(')
('IDENTIFIER', '100')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', '25')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_util')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'light_setintensity')
('LPAREN', '(')
('IDENTIFIER', 'off')
('COMMA', ',')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '3')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '4')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' sometimes just turn off immediately')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('IDENTIFIER', 'SetLightIntensity')
('LPAREN', '(')
('IDENTIFIER', 'off')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' dark!')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'particle_light')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'off')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'lamp_swap')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'off')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'darkTime')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'firstFlicker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'RandomInt')
('LPAREN', '(')
('IDENTIFIER', '100')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', '15')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flicker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '15')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Kevins notify for flickers')
('NEWLINE', '\n')
('IDENTIFIER', 'SetClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'f')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', " was 'flicker'")
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' sometimes do a long flicker')
('NEWLINE', '\n')
('IDENTIFIER', 'flicker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '4')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '8')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Kevins notify for flickers')
('NEWLINE', '\n')
('IDENTIFIER', 'SetClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'flicker')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'lamp_swap')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'on')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('IDENTIFIER', 'SetLightIntensity')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', 'off')
('COMMA', ',')
('IDENTIFIER', 'onFrac')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'set_particle_light')
('LPAREN', '(')
('IDENTIFIER', 'onFrac')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'flicker')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('IDENTIFIER', 'SetLightIntensity')
('LPAREN', '(')
('IDENTIFIER', 'onFrac')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'set_particle_light')
('LPAREN', '(')
('IDENTIFIER', 'onFrac')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'flicker')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' get brighter over time, up to a point')
('NEWLINE', '\n')
('IDENTIFIER', 'onFrac')
('PLUS_EQUALS', '+=')
('LPAREN', '(')
('IDENTIFIER', 'on')
('MULTIPLY', '*')
('IDENTIFIER', 'stepMultiplier')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'onFrac')
('GREATER_THAN', '>')
('IDENTIFIER', 'intensityCap')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'onFrac')
('ASSIGNMENT', '=')
('IDENTIFIER', 'intensityCap')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' if bright enough, register that this light is turning on')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'onFrac')
('GREATER_THAN', '>')
('LPAREN', '(')
('IDENTIFIER', 'on')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'lightRegistered')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' another light is turning on')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'arty_flickerlights_on')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'lightRegistered')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'lastFrac')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', 'off')
('COMMA', ',')
('IDENTIFIER', 'onFrac')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('IDENTIFIER', 'SetLightIntensity')
('LPAREN', '(')
('IDENTIFIER', 'lastFrac')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'set_particle_light')
('LPAREN', '(')
('IDENTIFIER', 'lastFrac')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('DOT', '.')
('IDENTIFIER', 'light')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_util')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'light_setintensity')
('LPAREN', '(')
('IDENTIFIER', 'on')
('COMMA', ',')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '35')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hatLamp')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'particle_light')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'on')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'lamp_swap')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'on')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Kevins notify to stop light flicker')
('NEWLINE', '\n')
('IDENTIFIER', 'SetClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'fs')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' was flicker_stop')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'lamp_swap')
('LPAREN', '(')
('IDENTIFIER', 'state')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'state')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'on')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'offModel')
('IDENTIFIER', 'Hide')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'Show')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'offModel')
('IDENTIFIER', 'Show')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'Hide')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_particle_light')
('LPAREN', '(')
('IDENTIFIER', 'onFrac')
('COMMA', ',')
('IDENTIFIER', 'on')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'on')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'light')
('DOT', '.')
('IDENTIFIER', 'onIntensity')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' evaluate intensity to pick the correct particle')
('NEWLINE', '\n')
('IDENTIFIER', 'fxIntensity')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'med')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'onFrac')
('LESS_THAN_OR_EQUAL_TO', '<=')
('LPAREN', '(')
('IDENTIFIER', 'on')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '35')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'fxIntensity')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'low')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'onFrac')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('LPAREN', '(')
('IDENTIFIER', 'on')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '65')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'fxIntensity')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'high')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'particle_light')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'on')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'fxIntensity')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'particle_light')
('LPAREN', '(')
('IDENTIFIER', 'state')
('COMMA', ',')
('IDENTIFIER', 'intensity')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'creating_particle_light')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'creating_particle_light')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' 3 different intensities to choose from in the particles')
('NEWLINE', '\n')
('IDENTIFIER', 'lightFX_high')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'metro_light_filler_high')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'lightFX_med')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'metro_light_filler_med')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'lightFX_low')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'metro_light_filler_low')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' default intensity = high')
('NEWLINE', '\n')
('IDENTIFIER', 'lightFX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'lightFX_high')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'intensity')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'intensity')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'high')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'lightFX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'lightFX_high')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'intensity')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'med')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'lightFX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'lightFX_med')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'intensity')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'low')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'lightFX')
('ASSIGNMENT', '=')
('IDENTIFIER', 'lightFX_low')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTMSG')
('LPAREN', '(')
('QUOTE', '"')
('STRING', "particle_light(): intensity of '")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'intensity')
('PLUS', '+')
('QUOTE', '"')
('STRING', "' not identified.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'state')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'on')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " don't keep deleting and spawning new particles while we're choosing the same one")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'lastParticleLight')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'lastParticleLight')
('EQUALS_TO', '==')
('IDENTIFIER', 'lightFX')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' if we have to make a new one, delete the old one')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'particleLight')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'particleLight')
('IDENTIFIER', 'Delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'particleLight')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_model')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '4')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'particleLight')
('DOT', '.')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '90')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'particleLight')
('IDENTIFIER', 'SetModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tag_origin')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PlayFxOnTag')
('LPAREN', '(')
('IDENTIFIER', 'lightFX')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'particleLight')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tag_origin')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'lastParticleLight')
('ASSIGNMENT', '=')
('IDENTIFIER', 'lightFX')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'particleLight')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'particleLight')
('IDENTIFIER', 'Delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' --- end ambient FX functions ---')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' No longer needed, keeping in case someone else wants it\n//\n// sets up water sheeting fx triggers\nwater_sheeting_init()\n{\n\ttrigs = GetEntArray( "trigger_water_sheeting", "targetname" );\n\tASSERTEX( IsDefined( trigs ) && trigs.size > 0, "Can\'t find any water sheeting triggers." );\n\t\n\tarray_thread( trigs, ::water_sheeting_trigger_think );\n}\n\nwater_sheeting_trigger_think()\n{\n\twhile( 1 )\n\t{\n\t\tself waittill( "trigger", other );\n\t\t\n\t\tif( IsPlayer( other ) )\n\t\t{\n\t\t\tother thread water_sheeting_fx( self );\n\t\t}\n\t}\n}\n\nwater_sheeting_fx( trig )\n{\n\tself endon( "death" );\n\tself endon( "disconnect" );\n\t\n\tif( !IsDefined( self.isWaterSheeting ) )\n\t{\n\t\tself.isWaterSheeting = false;\n\t}\n\t\n\tif( self.isWaterSheeting )\n\t{\n\t\treturn;\n\t}\n\t\n\twaterSheetingMinLength = 0.85;\n\twaterSheetingEndTime = GetTime() + ( waterSheetingMinLength * 1000 );\n\t\n\tself.isWaterSheeting = true;\n\t\n\twhile( GetTime() < waterSheetingEndTime )\n\t{\n\t\tself SetWaterSheeting( 1, waterSheetingMinLength );\n\t\twait( 0.2 );\n\t\t\n\t\tif( self IsTouching( trig ) )\n\t\t{\n\t\t\twaterSheetingEndTime = GetTime() + ( waterSheetingMinLength * 1000 );\n\t\t}\n\t}\n\t\n\tself.isWaterSheeting = false;\n}\n')
('EOF', None)