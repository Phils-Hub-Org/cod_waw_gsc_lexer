('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' file: ber2.gsc')
('NEWLINE', '\n')
('COMMENT', ' description: main level script for berlin2')
('NEWLINE', '\n')
('COMMENT', ' scripter: slayback')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_util')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " check if it's a demo")
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'isDemo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'IsCoopEPD')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'onPlayerConnect')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setdvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r_watersim_enabled')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_fx')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_t34')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_rus_tracked_t34_wet')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 't34_wet')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_katyusha')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_rus_wheeled_bm13_dist')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'katyusha')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_destructible_opel_blitz')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'init')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_util')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setup_eventname_triggers')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'build_starts')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'init_flags')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_assets')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_friendlies')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_drones')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_pipes')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_load')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' COD magic')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'coop_optimize')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'default_goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', '768')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_setup')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'ber2_anim_init')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_amb')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_threatbiases')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_strings')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_spawn_functions')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'undead_ai_cleanup')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' this coop warp trigger gets re-enabled later when the metrogate execution scene starts')
('NEWLINE', '\n')
('IDENTIFIER', 'disable_trigger_with_noteworthy')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_coop_warp_metrogate_execution')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('DIVIDE', '/')
('PREPROCESSOR_DIRECTIVE', '#')
('NEWLINE', '\n')
('IDENTIFIER', 'doDebug')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetDvarInt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'debug_ai')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'doDebug')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'doDebug')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'debug_ai')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#/')
('NEWLINE', '\n')
('NEWLINE', '\n')
('DIVIDE', '/')
('PREPROCESSOR_DIRECTIVE', '#')
('NEWLINE', '\n')
('IDENTIFIER', 'doDebug')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetDvarInt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'debug_bldg_collapse')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'doDebug')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'doDebug')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'building_collapse_debug')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#/')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' setup the start functions for the level start system')
('NEWLINE', '\n')
('IDENTIFIER', 'build_starts')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' apartment starts')
('NEWLINE', '\n')
('IDENTIFIER', 'add_start')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'event1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_start')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'STARTS_BER2_EVENT1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_start')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'e1_start_action')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_start_action')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'STARTS_BER2_EVENT1_ACTION')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_start')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'apt2')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_start_apt2')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'STARTS_BER2_APT2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_start')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'atrium')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_start_atrium')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'STARTS_BER2_ATRIUM')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_start')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'loadingdock')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_start_loadingdock')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'STARTS_BER2_LOADINGDOCK')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' street starts')
('NEWLINE', '\n')
('IDENTIFIER', 'add_start')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'e1_outside')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_start_outside')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'STARTS_BER2_OUTSIDE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_start')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_regroup')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_start_street_regroup')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'STARTS_BER2_STREET_REGROUP')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' metro starts')
('NEWLINE', '\n')
('IDENTIFIER', 'add_start')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'event2')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event2')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event2_start')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'STARTS_BER2_EVENT2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_start')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'metrowave')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event2')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event2_start_metrowave')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'STARTS_BER2_EVENT2_METROWAVE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' default start')
('NEWLINE', '\n')
('IDENTIFIER', 'default_start')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'start_functions')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'event1')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' turn off the introscreen if necessary')
('NEWLINE', '\n')
('DIVIDE', '/')
('PREPROCESSOR_DIRECTIVE', '#')
('NEWLINE', '\n')
('IDENTIFIER', 'start')
('ASSIGNMENT', '=')
('IDENTIFIER', 'tolower')
('LPAREN', '(')
('IDENTIFIER', 'GetDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'start')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'start')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'start')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'start')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'default')
('QUOTE', '"')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'start')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'event1')
('QUOTE', '"')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsSubStr')
('LPAREN', '(')
('IDENTIFIER', 'start')
('COMMA', ',')
('QUOTE', '"')
('STRING', '**')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'SetDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'introscreen')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' disable the introscreen')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#/')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_flags')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'friends_setup')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'event1_fakefire_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_fakefire_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_execution_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_execution_friendlies_moveup')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_execution_dialogue_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fallingsign_dialogue_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'aisneak_dialogue_thread_started')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'aisneak_sarge_firstdialogue_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'aisneak_mapreaders_dead')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'aisneak_riflemen_dead')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'aisneak_telegrapher_dead')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'execution_interrupted')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'execution_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'atrium_mger_alerted')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'player_outside')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tank2_dead')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_charge_friendlies_pared_down')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ground_mg_hit1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'building_hit1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'building_critical_hit')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'building_collapse_fallout_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'building_collapsed')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'e1_street_executions_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'metrogate_reach_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'metrogate_execution_player_close')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'metrogate_executions_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'subway_gate_closed')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lights_back_on')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'wave_sequence_started')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'wave_near_players')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'metrowave_blackout')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_assets')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tag_origin')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tag_origin_animate')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'katyusha_rocket')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sewer_rat')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon_rus_molotov_grenade')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon_rus_zippo')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'berlin_wood_beam_short')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheItem')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'panzerschrek')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheRumble')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'explosion_generic')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheRumble')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'explosion_generic_no_broadcast')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheRumble')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ber2_generic_light')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheRumble')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ber2_generic_heavy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' for the EPD demo')
('NEWLINE', '\n')
('COMMENT', 'PrecacheShader( "ber2_epd_end_slate" );')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ber2_epd_coming_soon')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_strings')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_clear_bldgs')
('ASSIGNMENT', '=')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'BER2_OBJ_CLEAR_BLDGS')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_move_thru_street')
('ASSIGNMENT', '=')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'BER2_OBJ_MOVE_THRU_STREET')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_stay_with_tank')
('ASSIGNMENT', '=')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'BER2_OBJ_STAY_WITH_TANK')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_execute')
('ASSIGNMENT', '=')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'BER2_OBJ_EXECUTE')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_regroup')
('ASSIGNMENT', '=')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'BER2_OBJ_REGROUP')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_get_to_metro')
('ASSIGNMENT', '=')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'BER2_OBJ_GET_TO_METRO')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_fight_thru_metro')
('ASSIGNMENT', '=')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'BER2_OBJ_FIGHT_THRU_METRO')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_defend_sarge')
('ASSIGNMENT', '=')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'BER2_OBJ_DEFEND_SARGE')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_objective')
('LPAREN', '(')
('IDENTIFIER', 'num')
('COMMA', ',')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'num')
('EQUALS_TO', '==')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_clear_bldgs')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '4112')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '800')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_current')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'num')
('EQUALS_TO', '==')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_move_thru_street')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '752')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '32')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '100')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_current')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'num')
('EQUALS_TO', '==')
('IDENTIFIER', '2')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '2')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_stay_with_tank')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '1616')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '32')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '100')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_current')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'num')
('EQUALS_TO', '==')
('IDENTIFIER', '3')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '2')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'Objective_Delete')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '3')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_execute')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '642')
('COMMA', ',')
('IDENTIFIER', '88')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '100')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_current')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', ' removed objective 4\n\telse if( num == 4 )\n\t{\n\t\tobjective_state( 3, "done" );\n\t\tObjective_Delete( 3 );\n\t\tobjective_add( 4, "active", level.obj_regroup, ( 700, 788, -100 ) );\n\t\tobjective_current( 4 );\n\t}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'num')
('EQUALS_TO', '==')
('IDENTIFIER', '5')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'objective_state( 4, "done" );  // removed objective 4')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '3')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'Objective_Delete')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '5')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_get_to_metro')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '1072')
('COMMA', ',')
('IDENTIFIER', '368')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '244')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_current')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'num')
('EQUALS_TO', '==')
('IDENTIFIER', '6')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '5')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'Objective_Delete')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '6')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_fight_thru_metro')
('COMMA', ',')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '2824')
('COMMA', ',')
('IDENTIFIER', '3088')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '532')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_current')
('LPAREN', '(')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'num')
('EQUALS_TO', '==')
('IDENTIFIER', '7')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '6')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '7')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_regroup')
('COMMA', ',')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '3400')
('COMMA', ',')
('IDENTIFIER', '3632')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '562')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_current')
('LPAREN', '(')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'num')
('EQUALS_TO', '==')
('IDENTIFIER', '8')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_state')
('LPAREN', '(')
('IDENTIFIER', '7')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'Objective_Delete')
('LPAREN', '(')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_add')
('LPAREN', '(')
('IDENTIFIER', '8')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'obj_defend_sarge')
('COMMA', ',')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '3400')
('COMMA', ',')
('IDENTIFIER', '3632')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '562')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'objective_current')
('LPAREN', '(')
('IDENTIFIER', '8')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_network_frame')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' skips past objectives that should have already happened (for skiptos)')
('NEWLINE', '\n')
('IDENTIFIER', 'objectives_skip')
('LPAREN', '(')
('IDENTIFIER', 'numToSkipPast')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', 'numToSkipPast')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'set_objective')
('LPAREN', '(')
('IDENTIFIER', 'i')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'onPlayerConnect')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('SEMICOLON', ';')
('SEMICOLON', ';')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'connecting')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'player')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'player thread onPlayerDisconnect(); ')
('NEWLINE', '\n')
('COMMENT', 'player thread onPlayerSpawned(); ')
('NEWLINE', '\n')
('COMMENT', 'player thread onPlayerKilled(); ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'event1_fakefire_start')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'e1fs')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'player')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_fakefire_start')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'sfs')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'player')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'warp_players_underworld')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' get the spot under the world for temp placement')
('NEWLINE', '\n')
('IDENTIFIER', 'underworld')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetStruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'struct_player_teleport_underworld')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'underworld')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTMSG')
('LPAREN', '(')
('QUOTE', '"')
('STRING', "warp_players_underworld(): can't find the underworld warp spot! aborting.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetOrigin')
('LPAREN', '(')
('IDENTIFIER', 'underworld')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' warp players to a given set of points')
('NEWLINE', '\n')
('IDENTIFIER', 'warp_players')
('LPAREN', '(')
('IDENTIFIER', 'startValue')
('COMMA', ',')
('IDENTIFIER', 'startKey')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' get start points')
('NEWLINE', '\n')
('IDENTIFIER', 'starts')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetStructArray')
('LPAREN', '(')
('IDENTIFIER', 'startValue')
('COMMA', ',')
('IDENTIFIER', 'startKey')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'starts')
('DOT', '.')
('IDENTIFIER', 'size')
('EQUALS_TO', '==')
('IDENTIFIER', '4')
('COMMA', ',')
('QUOTE', '"')
('STRING', "warp_players(): there aren't 4 player start spots!")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' prioritize special start points for singleplayer')
('NEWLINE', '\n')
('IDENTIFIER', 'spStart')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'starts')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'starts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'script_noteworthy')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'starts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'script_noteworthy')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', '1p_start')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spStart')
('ASSIGNMENT', '=')
('IDENTIFIER', 'starts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'spStart')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' sort the remaining starts into another array')
('NEWLINE', '\n')
('IDENTIFIER', 'oldStarts')
('ASSIGNMENT', '=')
('IDENTIFIER', 'array_remove')
('LPAREN', '(')
('IDENTIFIER', 'starts')
('COMMA', ',')
('IDENTIFIER', 'spStart')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' clear starts')
('NEWLINE', '\n')
('IDENTIFIER', 'starts')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' set the special start as the first one in the array')
('NEWLINE', '\n')
('IDENTIFIER', 'starts')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spStart')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' repopulate with the rest of the starts')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'oldStarts')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'starts')
('LBRACKET', '[')
('IDENTIFIER', 'starts')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'oldStarts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " Set the players' origin to each start point")
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setOrigin')
('LPAREN', '(')
('IDENTIFIER', 'starts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " Set the players' angles to face the right way.")
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setPlayerAngles')
('LPAREN', '(')
('IDENTIFIER', 'starts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_breadcrumbs')
('LPAREN', '(')
('IDENTIFIER', 'starts')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' warp player to a given set of points')
('NEWLINE', '\n')
('IDENTIFIER', 'warp_player')
('LPAREN', '(')
('IDENTIFIER', 'startValue')
('COMMA', ',')
('IDENTIFIER', 'startKey')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' get start points')
('NEWLINE', '\n')
('IDENTIFIER', 'starts')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('IDENTIFIER', 'startValue')
('COMMA', ',')
('IDENTIFIER', 'startKey')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERT')
('LPAREN', '(')
('IDENTIFIER', 'starts')
('DOT', '.')
('IDENTIFIER', 'size')
('EQUALS_TO', '==')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'index')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' figure out what start index this player should be at')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('EQUALS_TO', '==')
('IDENTIFIER', 'self')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'index')
('ASSIGNMENT', '=')
('IDENTIFIER', 'i')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERT')
('LPAREN', '(')
('IDENTIFIER', 'index')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " Set the players' origin to each start point")
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setOrigin')
('LPAREN', '(')
('IDENTIFIER', 'starts')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " Set the players' angles to face the right way.")
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setPlayerAngles')
('LPAREN', '(')
('IDENTIFIER', 'starts')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_friendlies')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friendly_startup_thread')
('ASSIGNMENT', '=')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'ber2_friendly_startup_thread')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('ASSIGNMENT', '=')
('IDENTIFIER', 'grab_starting_friends')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('DOT', '.')
('IDENTIFIER', 'size')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('COMMA', ',')
('QUOTE', '"')
('STRING', "setup_friendlies(): can't find any friendlies!")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'followmin')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'friend_remove_on_death')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'script_noteworthy')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' Sgt. Zeitzev')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'script_noteworthy')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'sarge')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sarge')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', ' Pvt. Chernov')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'script_noteworthy')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'hero1')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hero1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' guys with script_noteworthy set are heroes and need a bullet shield')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'magic_bullet_shield')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'is_active_ai')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sarge')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', "setup_friendlies(): couldn't assign level.sarge.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'is_active_ai')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hero1')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', "setup_friendlies(): couldn't assign level.hero1.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'friends_setup')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' used to get _colors reinforcements set up properly')
('NEWLINE', '\n')
('IDENTIFIER', 'ber2_friendly_startup_thread')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " make sure it's replacing a player squad guy")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'check_force_color')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'b')
('QUOTE', '"')
('RPAREN', ')')
('LOGICAL_OR', '||')
('IDENTIFIER', 'self')
('IDENTIFIER', 'check_force_color')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'p')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' add to level.friends')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'friend_add')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' warp friendlies to a given set of points')
('NEWLINE', '\n')
('IDENTIFIER', 'warp_friendlies')
('LPAREN', '(')
('IDENTIFIER', 'startValue')
('COMMA', ',')
('IDENTIFIER', 'startKey')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'friends_setup')
('QUOTE', '"')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'warp_friendlies(): level.friends needs to be set up before this runs.')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' get start points')
('NEWLINE', '\n')
('IDENTIFIER', 'friendlyStarts')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetStructArray')
('LPAREN', '(')
('IDENTIFIER', 'startValue')
('COMMA', ',')
('IDENTIFIER', 'startKey')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'friendlyStarts')
('DOT', '.')
('IDENTIFIER', 'size')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', '4')
('COMMA', ',')
('QUOTE', '"')
('STRING', "warp_friendlies(): didn't find 4 or more friendly start points!")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'Teleport')
('LPAREN', '(')
('IDENTIFIER', 'groundpos')
('LPAREN', '(')
('IDENTIFIER', 'friendlyStarts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'friendlyStarts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_drones')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' these character model names may change as art makes new variants')
('NEWLINE', '\n')
('IDENTIFIER', 'character')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'char_ger_wrmchtwet_k98')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'precache')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'character')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'char_rus_wet_r_rifle')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'precache')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'drone_spawnFunction')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'axis')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'character')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'char_ger_wrmchtwet_k98')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'drone_spawnFunction')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'allies')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'character')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'char_rus_wet_r_rifle')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Call this before maps\\_load::main(); to allow drone usage.')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_drones')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'init')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TEMP for testing')
('NEWLINE', '\n')
('IDENTIFIER', 'drawline_from_player')
('LPAREN', '(')
('IDENTIFIER', 'ent')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'kill_lines')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ent')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'color')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '255')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'ent')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'line')
('LPAREN', '(')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'ent')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'color')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_threatbiases')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' create threat bias groups')
('NEWLINE', '\n')
('IDENTIFIER', 'CreateThreatBiasGroup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'players')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'CreateThreatBiasGroup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'friends')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'CreateThreatBiasGroup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'allies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'CreateThreatBiasGroup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'non_combat')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'CreateThreatBiasGroup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fight')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'CreateThreatBiasGroup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_groundlevel_germans')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'CreateThreatBiasGroup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_groundlevel_russians')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetThreatBiasGroup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'players')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' makes the level friendlier for network traffic')
('NEWLINE', '\n')
('IDENTIFIER', 'coop_optimize')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'all_players_connected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'coopOptimize')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('GREATER_THAN', '>')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'coopOptimize')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'override')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetDvarInt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'enable_coop_optimize')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'override')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'override')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'coopOptimize')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'coopOptimize')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' upper-story drones for street battle')
('NEWLINE', '\n')
('IDENTIFIER', 'ents')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent_safe')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'buildingdrones_allies')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'target')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ents')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent_safe')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'buildingdrones_axis')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'target')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'delete_group')
('LPAREN', '(')
('IDENTIFIER', 'ents')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' remove level.friends redshirt(s)')
('NEWLINE', '\n')
('COMMENT', ' - redshirts are only reduced until heading into the subway,')
('NEWLINE', '\n')
('COMMENT', '   at which point more redshirts get added to the array')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'friends_setup')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'redshirts')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sarge')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hero1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'redshirts')
('LBRACKET', '[')
('IDENTIFIER', 'redshirts')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'array_thread')
('LPAREN', '(')
('IDENTIFIER', 'redshirts')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'coop_optimize_remove_redshirt')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TEMP NASTINESS TO REMOVE DRONES DUE TO UNRESOLVED T-POSE ISSUE - DSL')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tdrones = getentarray("drone_axis", "targetname");\n\t\n\tprintln("Removing " + drones.size + " axis drone triggers");\n\t\n\tfor(i = 0; i < drones.size; i++)\n\t{\n\t\tdrones[i] delete();\n\t}\t\n\n\tdrones = getentarray("drone_allies", "targetname");\n\tprintln("Removing " + drones.size + " ally drone triggers");\n\t\n\tfor(i = 0; i < drones.size; i++)\n\t{\n\t\tdrones[i] delete();\n\t}\t\t')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'coop_optimize_remove_redshirt')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'clear_force_color')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'disable_replace_on_death')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'friend_remove')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'Delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' --- UNDEAD CLEANUP ---')
('NEWLINE', '\n')
('IDENTIFIER', 'undead_ai_cleanup')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_script_color_allies_b9')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'aigroup_sneakyaction_guys')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_script_color_allies_b9')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'aigroup_apt1_staircase')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_script_color_allies_b13')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'aigroup_apt2_executionGuys')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_script_color_allies_b13')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'aigroup_apt2_enemies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_loadingdock_line1_spawn')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'aigroup_atrium_enemies')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'building_mgs_start')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'ai_loadingdock_shadowrunners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'building_mgs_start')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'ai_loadingdock_germans')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'building_mgs_start')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'ai_loadingdock_generic_enemies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger_objective1_reached')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'ai_outside_germans')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_subway_exitGateArea')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'aigroup_subway_enemies_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_subway_exitGateArea')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'aigroup_subway_enemies_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_subway_exitGateArea')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'ai_metro_mger_left')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_aigroup_at_trigger')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_subway_exitGateArea')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'ai_metro_mger_right')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', ' --- END UNDEAD CLEANUP ---')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' --- CUSTOM SPAWN FUNCTION SETUP ---')
('NEWLINE', '\n')
('COMMENT', 'does add_spawn_function on all the spawners that need custom behavior.')
('NEWLINE', '\n')
('IDENTIFIER', 'setup_spawn_functions')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' ambient roof runners')
('NEWLINE', '\n')
('IDENTIFIER', 'group_add_spawn_function')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawner_roof_ambientrunner')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'roof_ambient_runner')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' ignore til goal guys')
('NEWLINE', '\n')
('IDENTIFIER', 'ignoreTilPathEnders')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ignore_til_path_end')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'array_thread')
('LPAREN', '(')
('IDENTIFIER', 'ignoreTilPathEnders')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_spawn_function')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_util')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'ignore_til_path_end')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' magic bullet shield')
('NEWLINE', '\n')
('IDENTIFIER', 'bulletShielders')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'magic_bullet_shield')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'array_thread')
('LPAREN', '(')
('IDENTIFIER', 'bulletShielders')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_spawn_function')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_util')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'magic_bullet_shield_safe')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' street redshirts who execute enemies on street')
('NEWLINE', '\n')
('IDENTIFIER', 'street_executioners')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawner_outside_russian_1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'array_thread')
('LPAREN', '(')
('IDENTIFIER', 'street_executioners')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_spawn_function')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'magic_bullet_shield')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'balcony_mgSpawner')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent_safe')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawner_balcony_mg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'balcony_mgSpawner')
('IDENTIFIER', 'add_spawn_function')
('LPAREN', '(')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_balcony_mger')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' atrium MGer')
('NEWLINE', '\n')
('IDENTIFIER', 'atrium_mgSpawner')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent_safe')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawner_atrium_mger')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'atrium MG spawner')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'atrium_mgSpawner')
('IDENTIFIER', 'add_spawn_function')
('LPAREN', '(')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_atrium_mger')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' loadingdock: shadowrunners')
('NEWLINE', '\n')
('IDENTIFIER', 'group_add_spawn_function')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawner_loadingdock_shadowrunner')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_util')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'ignore_til_path_end_or_dmg')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' loadingdock: patrollers\t')
('NEWLINE', '\n')
('IDENTIFIER', 'group_add_spawn_function')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawner_loadingdock_patroller')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event1')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'event1_loadingdock_patroller')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' subway tunnel wave runners')
('NEWLINE', '\n')
('IDENTIFIER', 'group_add_spawn_function')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawner_subway_exitRunners')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber2_event2')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'metrowave_runner_spawnfunc')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' collects spawners by targetname and does add_spawn_function() on them')
('NEWLINE', '\n')
('IDENTIFIER', 'group_add_spawn_function')
('LPAREN', '(')
('IDENTIFIER', 'groupTN')
('COMMA', ',')
('IDENTIFIER', 'spawnFunc')
('COMMA', ',')
('IDENTIFIER', 'param1')
('COMMA', ',')
('IDENTIFIER', 'param2')
('COMMA', ',')
('IDENTIFIER', 'param3')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'group')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('IDENTIFIER', 'groupTN')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'group')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'group')
('DOT', '.')
('IDENTIFIER', 'size')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('COMMA', ',')
('QUOTE', '"')
('STRING', "Couldn't find group with targetname of '")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'groupTN')
('PLUS', '+')
('QUOTE', '"')
('STRING', "'.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'group')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'group')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'add_spawn_function')
('LPAREN', '(')
('IDENTIFIER', 'spawnFunc')
('COMMA', ',')
('IDENTIFIER', 'param1')
('COMMA', ',')
('IDENTIFIER', 'param2')
('COMMA', ',')
('IDENTIFIER', 'param3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', ' --- END CUSTOM SPAWN FUNCTION SETUP ---')
('EOF', None)