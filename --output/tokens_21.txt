('COMMENT', ' scripting by Bloodlust')
('NEWLINE', '\n')
('COMMENT', ' level design by BSouds')
('NEWLINE', '\n')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_anim')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber1_util')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'pel2_util')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_music')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#using_animtree("generic_human");')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' main function for handeling Event 2')
('NEWLINE', '\n')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('DIVIDE', '/')
('PREPROCESSOR_DIRECTIVE', '#')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_status')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'show_task')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'event2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#/')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'cafe_wall_crumble')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'street_ambush')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'street_first_floodspawners')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' play FXs for Tank 1 getting killed and the wall blowing up, opening the way into the asylum')
('NEWLINE', '\n')
('IDENTIFIER', 'street_ambush')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO might want to add another node closer')
('NEWLINE', '\n')
('IDENTIFIER', 'wallnode')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getVehicleNode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tank1_cleared_wall')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wallnode')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'TUEY set music state to  TANK_HIT')
('NEWLINE', '\n')
('IDENTIFIER', 'setmusicstate')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'TANK_HIT')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tank_ambush')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'street_battle')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' where most of the street battle threads are started')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'street_battle')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_debug')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_event_printname')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'Streets')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' decrease amount of color spawners by 1')
('NEWLINE', '\n')
('IDENTIFIER', 'redshirts')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getaiarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'allies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'redshirts')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'redshirts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'script_forcecolor')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'redshirts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'script_forcecolor')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'r')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'redshirts')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'disable_replace_on_death')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'bookcase_push')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'chain_near_asylum')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'chain_street_right_1')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'chain_street_right_2')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'chain_street_left_1')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'chain_street_left_2')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'roof_shreks')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'panzershrek_hits_wall')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'monitor_killspawner_151')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'save_mid_yard')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'save_asylum_entry')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'spawn_street_pickup_weapons')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber1_asylum')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'setup_crows')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'level thread bathroom_mg_exploder_200();')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'bathroom_mg')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bathroom_mg')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'bathroom_mg')
('IDENTIFIER', 'setturretignoregoals')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'ber1_asylum')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'bathroom_mg_exploder_200()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\t// notify from flag on trigger')
('NEWLINE', '\n')
('COMMENT', '\tlevel endon( "asylum_exit" );')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tdmg_trigger = getent( "exploder_200", "targetname" );')
('NEWLINE', '\n')
('COMMENT', '\tdmg_trigger waittill( "trigger" );')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\t//mg_sandbag_cleanup( "auto3749", 165 );')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tdmg_trigger delete();')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'streets_vo')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_vo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'commissar')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vo')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'keep_pushing')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_vo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chernov')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vo')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'panzershrek_fire')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_vo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'reznov')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vo')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'deal_with_it')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'roof_shreks')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_vo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'reznov')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vo')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'split_up')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_vo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'reznov')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vo')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'rest_of_you')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'last_yard_floodspawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_vo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'commissar')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vo')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'fight_your_way')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_vo')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'reznov')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'vo')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'hunt_them_down')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'street_first_floodspawners')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_street_first_floodspawners')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'simple_floodspawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_first_floodspawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'streets_vo')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' will delete a floodspawner trigger that targets a spawner that may be killspawned early, depending if the yard path is taken')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'monitor_killspawner_151')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_killspawner_151')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_spawn_street_guys_late_2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'spawn_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' guys way up on the roof that shoot towards the street')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'roof_shreks')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_roof_shreks')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'roof_shreks')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'simple_spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_asylum_roof_shreks')
('QUOTE', '"')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'street_asylum_roof_shreks_strat')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'shrek_target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'shrek_1_orig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'shrek_target')
('DOT', '.')
('IDENTIFIER', 'health')
('ASSIGNMENT', '=')
('IDENTIFIER', '1000000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'flame_move_target')
('LPAREN', '(')
('IDENTIFIER', 'shrek_target')
('COMMA', ',')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'shrek_target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'shrek_2_orig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'shrek_target')
('DOT', '.')
('IDENTIFIER', 'health')
('ASSIGNMENT', '=')
('IDENTIFIER', '1000000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'flame_move_target')
('LPAREN', '(')
('IDENTIFIER', 'shrek_target')
('COMMA', ',')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'shrek_target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'shrek_3_orig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'shrek_target')
('DOT', '.')
('IDENTIFIER', 'health')
('ASSIGNMENT', '=')
('IDENTIFIER', '1000000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'flame_move_target')
('LPAREN', '(')
('IDENTIFIER', 'shrek_target')
('COMMA', ',')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'shrek_target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'shrek_4_orig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'shrek_target')
('DOT', '.')
('IDENTIFIER', 'health')
('ASSIGNMENT', '=')
('IDENTIFIER', '1000000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'flame_move_target')
('LPAREN', '(')
('IDENTIFIER', 'shrek_target')
('COMMA', ',')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'street_asylum_roof_shreks_strat')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'accuracy')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ignoreme')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pacifist')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pacifistwait')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ignoresuppression')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'origins')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'origins')
('LBRACKET', '[')
('IDENTIFIER', 'origins')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'shrek_1_orig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'origins')
('LBRACKET', '[')
('IDENTIFIER', 'origins')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'shrek_2_orig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'origins')
('LBRACKET', '[')
('IDENTIFIER', 'origins')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'shrek_3_orig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'origins')
('LBRACKET', '[')
('IDENTIFIER', 'origins')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'shrek_4_orig')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'rockets')
('ASSIGNMENT', '=')
('IDENTIFIER', '7')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' dont fire further up the street until flag has been set (flag set on a trigger)')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_left_1')
('QUOTE', '"')
('RPAREN', ')')
('LOGICAL_OR', '||')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_right_1')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetEntityTarget')
('LPAREN', '(')
('IDENTIFIER', 'origins')
('LBRACKET', '[')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', 'origins')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetEntityTarget')
('LPAREN', '(')
('IDENTIFIER', 'origins')
('LBRACKET', '[')
('IDENTIFIER', 'randomint')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '13')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'ClearEntityTarget')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'rockets')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'goal')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'node_shrek_goto_die')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'goal')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' if all axis near asylum entrance are cleared, move up friendlies')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'chain_near_asylum')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' notify from flag on trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'asylum_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waittill_aigroupcount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'last_street_ai')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'waittill_aigroupcleared')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'last_street_mg')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'killspawner_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_killspawner_164')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'killspawner_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'killspawner_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_near_asylum')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'color_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'quick_text')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_near_asylum')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' if all axis near street area 1 are cleared, move up friendlies')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'chain_street_right_1')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' notify from flag on trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'asylum_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waittill_aigroupcount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_right_ai_0')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomfloatrange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '75')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '75')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_1a')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'color_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'quick_text')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_1a')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' some spawners that should get triggered')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_roof_shreks')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'spawn_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waittill_aigroupcleared')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_right_ai_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomfloatrange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '75')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '75')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' color chain')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_right_1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'color_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'quick_text')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_right_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' some spawners that should get triggered')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_spawn_street_guys_late')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'spawn_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_spawn_street_guys_late_2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'spawn_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' if all axis near street area 2 are cleared, move up friendlies')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'chain_street_right_2')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' notify from flag on trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'asylum_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waittill_aigroupcleared')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_right_ai_2a')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'waittill_aigroupcount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_right_ai_2')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomfloatrange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '75')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '75')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'color_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'quick_text')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' delete some earlier chains if not hit yet')
('NEWLINE', '\n')
('IDENTIFIER', 'old_color_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_right_1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'old_color_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'old_color_trig')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'old_color_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_left_1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'old_color_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'old_color_trig')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' if all axis near street-left-1 area are cleared, move up friendlies')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'chain_street_left_1')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' notify from flag on trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'asylum_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' notify from script_notify on trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'end_chain_street_left_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waittill_aigroupcleared')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_left_ai_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomfloatrange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '75')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '75')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' color chain')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_left_1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'color_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'quick_text')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_left_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'color_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' some spawners that should get triggered')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_spawn_street_guys_left_1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'spawn_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'bookcase_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_close_to_bookcase')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'bookcase_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'bookcase_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' if all axis near street-left-2 area are cleared, move up friendlies')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'chain_street_left_2')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' notify from flag on trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'asylum_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' notify from script_notify on trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'end_chain_street_left_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waittill_aigroupcount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_left_ai_2')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomfloatrange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '75')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '75')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'quick_text')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_left_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\t// color chain')
('NEWLINE', '\n')
('COMMENT', '\tcolor_trig = getent( "chain_street_left_1", "targetname" );')
('NEWLINE', '\n')
('COMMENT', '\tif( isdefined( color_trig ) )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tcolor_trig notify( "trigger" );\t')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' some spawners that should get triggered')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_asylum_entryway_spawners')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'spawn_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waittill_aigroupcount')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'last_street_ai')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '8')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_last_yard_floodspawners')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'spawn_trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' animation of guy pushing over bookcase for cover')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'bookcase_push')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait till near the pub')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_close_to_bookcase')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " pushes over bookcase if player doesn't look at the lookat trigger but moves far ahead enough")
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'trig_override')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_lookat_bookcase')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' wait for player to look at the bookcase area')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_lookat_bookcase')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'simple_spawn_single')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pub_bookcase_spawner')
('QUOTE', '"')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'pub_bookcase_strat')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Wii optimizations')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wii')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'simple_spawn_single')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'extra_bookcase_guy')
('QUOTE', '"')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'extra_bookcase_strat')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'pub_bookcase_strat')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', '30')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'street')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'anim_node')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'orig_pub_bookcase')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anim_reach_solo')
('LPAREN', '(')
('IDENTIFIER', 'self')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bookcase_push')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'anim_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' clip brush turn on')
('NEWLINE', '\n')
('IDENTIFIER', 'bookcase_clip_brush')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pub_bookcase_brush')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'bookcase_clip_brush')
('IDENTIFIER', 'solid')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'pose')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bookcase_push_starting')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setcandamage')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'anim_single_solo')
('LPAREN', '(')
('IDENTIFIER', 'self')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'bookcase_push')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'anim_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setcandamage')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bookcase_pushed_over')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'goal_node')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'node_bookcase_goto')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'goal_node')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', '250')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' 2nd bookcase guy')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'extra_bookcase_strat')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', '20')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait_or_timeout')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bookcase_push_starting')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'original_pusher')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_specific_single_ai')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'bookcase_ai')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' if bookcase pushed over already, take cover behind it')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'original_pusher')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'isalive')
('LPAREN', '(')
('IDENTIFIER', 'original_pusher')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'goal')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'node_bookcase_goto_2')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setgoalnode')
('LPAREN', '(')
('IDENTIFIER', 'goal')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', '60')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', ' or if the pusher has been killed, push it over yourself')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'pub_bookcase_strat')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' play anim of cafe wall crumbling')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'cafe_wall_crumble')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'vnode')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getvehiclenode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'auto3542')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'vnode')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waittillframeend')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' animate all the wall pieces')
('NEWLINE', '\n')
('IDENTIFIER', 'org_node')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getNode')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'cafe_wall_node')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'pieces')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getEntArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tank_wall')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'pieces')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'pieces')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'notsolid')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'pieces')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'connectpaths')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'delete_chunk')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'connectpaths')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'delete_chunk')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'playfx')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'tank_thru_cafe_wall')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'org_node')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '54')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'anglestoforward')
('LPAREN', '(')
('IDENTIFIER', 'org_node')
('DOT', '.')
('IDENTIFIER', 'angles')
('SUBTRACT', '-')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '90')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'client notify for Kevins audio')
('NEWLINE', '\n')
('IDENTIFIER', 'SetClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tank_wall_sound')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_anim')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'anim_ents')
('LPAREN', '(')
('IDENTIFIER', 'pieces')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'crumble')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'org_node')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'cafe_wall')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'autosave_by_name')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'Ber1 cafe crumble')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_flags_on_street_triggers')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'event2_split_squad')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'simple_floodspawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_right_spawners_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Wii optimizations')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'wii')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'NumRemoteClients')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' start ambient drones')
('NEWLINE', '\n')
('IDENTIFIER', 'drone_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'street_drones_1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'drone_trig')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', " sets some flags on triggers that can't be setup to use script_flag automatically through radiant")
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_flags_on_street_triggers')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_right_1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'set_flag_on_trigger')
('LPAREN', '(')
('IDENTIFIER', 'trig')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'chain_street_right_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chain_street_left_1')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'set_flag_on_trigger')
('LPAREN', '(')
('IDENTIFIER', 'trig')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'chain_street_left_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_last_yard_floodspawners')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'set_flag_on_trigger')
('LPAREN', '(')
('IDENTIFIER', 'trig')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'last_yard_floodspawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' the wall between the street and yard that the panzershrek blows open')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'panzershrek_hits_wall')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_spawn_street_guys_late')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'panzershrek_2_spawn')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ps2_spawn')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'low_wall')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ps2_target')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fire_shrecks')
('LPAREN', '(')
('IDENTIFIER', 'panzershrek_2_spawn')
('COMMA', ',')
('IDENTIFIER', 'low_wall')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'rpg_impact_boom')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'panzershrek_2_spawn playsound( "weap_pnzr_fire" );')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'playfx')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'asylum_wall_explode')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'low_wall')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'playSoundAtPosition')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'concrete_wall_explo')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'low_wall')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '103')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'wait randomfloatrange(1.5, 2);')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'thread fire_shrecks(panzershrek_2_spawn, gate, undefined, "iron_gate_explo", 1);')
('NEWLINE', '\n')
('COMMENT', 'ps1_spawn playsound("weap_pnzr_fire");')
('NEWLINE', '\n')
('COMMENT', 'wait 1;')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'gate_clip connectpaths();')
('NEWLINE', '\n')
('COMMENT', 'waittillframeend;')
('NEWLINE', '\n')
('COMMENT', 'gate_clip delete();')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'gate maps\\ber1_anim::asylum_grounds_gate_open();')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'gate_clip2 solid();\t')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' split the squad to move through the asylum street and grounds simultaneously')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'event2_split_squad')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_color_chain')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'courtyard_squad_split')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'allies')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getaiarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'allies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'allies')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' if is an even number of the array')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'i')
('MODULUS', '%')
('IDENTIFIER', '2')
('EQUALS_TO', '==')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'allies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'set_force_color')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'r')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('COMMENT', ' odd')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'allies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'set_force_color')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'c')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' piggybacking autosaves onto other triggers, to save entities')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////\t')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'save_mid_yard')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_save_mid_yard')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'autosave_by_name')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'Ber1 mid yard')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' piggybacking autosaves onto other triggers, to save entities')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////\t')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'save_asylum_entry')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trig_save_asylum_entry')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'autosave_by_name')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'Ber1 asylum entry')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '/////////////////')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' spawn these manually when the event starts, to save on entities at load time')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '/////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_street_pickup_weapons')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'street_weapons')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'street_weapons')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawnstruct')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'street_weapons')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'weapon_name')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'weapon_panzerschrek')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'street_weapons')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '3169')
('DOT', '.')
('IDENTIFIER', '9')
('COMMA', ',')
('IDENTIFIER', '1566')
('DOT', '.')
('IDENTIFIER', '6')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '382')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'street_weapons')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '287')
('DOT', '.')
('IDENTIFIER', '17')
('COMMA', ',')
('IDENTIFIER', '355')
('DOT', '.')
('IDENTIFIER', '56')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '50')
('DOT', '.')
('IDENTIFIER', '1497')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'street_weapons')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawnstruct')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'street_weapons')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'weapon_name')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'weapon_panzerschrek')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'street_weapons')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '3169')
('DOT', '.')
('IDENTIFIER', '9')
('COMMA', ',')
('IDENTIFIER', '1526')
('DOT', '.')
('IDENTIFIER', '6')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '382')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'street_weapons')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '287')
('DOT', '.')
('IDENTIFIER', '17')
('COMMA', ',')
('IDENTIFIER', '355')
('DOT', '.')
('IDENTIFIER', '56')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '50')
('DOT', '.')
('IDENTIFIER', '1497')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_pickup_weapons')
('LPAREN', '(')
('IDENTIFIER', 'street_weapons')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('EOF', None)