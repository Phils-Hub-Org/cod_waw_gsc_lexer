('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_zombiemode_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' setup and kick off think functions')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleporter_init')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_links')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'countdown')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_delay')
('ASSIGNMENT', '=')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_cost')
('ASSIGNMENT', '=')
('IDENTIFIER', '1500')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_cooldown')
('ASSIGNMENT', '=')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'is_cooldown')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_timer')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_pad_link_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_pad_link_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_pad_link_3')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_for_all_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Get the Pad triggers')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '3')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEnt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger_teleport_pad_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'i')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'trig')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_pad_think')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_pad_think')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_pad_think')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_core_think')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'start_black_room_fx')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'init_pack_door')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'SetDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'factoryAftereffectOverride')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '-1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'packapunch_see')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'packapunch_see')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'packapunch_see')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'packapunch_see')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'play_packa_see_vox')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsSplitscreen')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_factory_teleporter')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'teleport_aftereffect_fov')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_factory_teleporter')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'teleport_aftereffect_shellshock')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_factory_teleporter')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'teleport_aftereffect_shellshock_electric')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_factory_teleporter')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'teleport_aftereffect_bw_vision')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_factory_teleporter')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'teleport_aftereffect_red_vision')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_factory_teleporter')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'teleport_aftereffect_flashy_vision')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_factory_teleporter')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'teleport_aftereffect_flare_vision')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' sets up up the pack a punch door')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'init_pack_door')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pack_door')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'movez')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '50')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'all_players_connected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'movez')
('LPAREN', '(')
('IDENTIFIER', '50')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'packa_door_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Open slightly the first two times')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_pad_link_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'movez')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '35')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'packa_door_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'packa_door_reminder')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Second link')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_pad_link_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'movez')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '25')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'packa_door_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Final Link')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_pad_link_3')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'movez')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '60')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'packa_door_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'door rotateyaw( -90, 1.5, 1 );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'clip')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pack_door_clip')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'clip')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'clip')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'connectpaths')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'clip')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' handles activating and deactivating pads for cool down')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'pad_manager')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' shut off the pads')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_TELEPORT_COOLDOWN')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'teleport_trigger_invisible')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'is_cooldown')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_cooldown')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'is_cooldown')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'teleport_active')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_TELEPORT_TO_CORE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_LINK_TPAD')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', '\t\tlevel.teleporter_pad_trig[i] teleport_trigger_invisible( false );')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' staggers the black room fx')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'start_black_room_fx')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '901')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', '904')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', 'i')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' handles turning on the pad and waiting for link')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_pad_think')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'tele_help')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tele_help_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'index')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'tele_help')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'tele_help')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'play_tele_help_vox')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'active')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' init the pad')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'waiting')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'setcursorhint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'HINT_NOICON')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_FLAMES_UNAVAILABLE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'electricity_on')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_POWER_UP_TPAD')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('DOT', '.')
('IDENTIFIER', 'teleport_active')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'trigger')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'active')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_links')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '3')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_core')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger_teleport_core')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_core')
('IDENTIFIER', 'teleport_trigger_invisible')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' when one starts the others disabled')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'teleport_trigger_invisible')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'timer_on')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' start the countdown back to the core')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_pad_countdown')
('LPAREN', '(')
('IDENTIFIER', 'index')
('COMMA', ',')
('IDENTIFIER', '30')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'teleporter_vo')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'countdown')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'trigger')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait for the countdown')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'timer_on')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' core was activated in time')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'active')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pw')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' pad wire #')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'AUDIO')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tp')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Teleporter #')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' MM - Auto teleport the first time')
('NEWLINE', '\n')
('IDENTIFIER', 'teleporter_wire_wait')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\ttrigger teleport_trigger_invisible( true );')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'player_teleporting')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' Reenable triggers')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'teleport_trigger_invisible')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'is_cooldown')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' shut off the pads')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_TELEPORT_COOLDOWN')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'teleport_trigger_invisible')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('DOT', '.')
('IDENTIFIER', 'teleport_active')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_pad_active_think')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' updates the teleport pad timer')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_pad_countdown')
('LPAREN', '(')
('IDENTIFIER', 'index')
('COMMA', ',')
('IDENTIFIER', 'time')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stop_countdown')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tiprintlnbold( &"ZOMBIE_START_TPAD" );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_timer')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_timer')
('ASSIGNMENT', '=')
('IDENTIFIER', 'index')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'countdown')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'AUDIO')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pac')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'TRf')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Teleporter receiver map light flash')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' start timer for all players')
('NEWLINE', '\n')
('COMMENT', '\tAdd a second for VO sync')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_zombiemode_timer')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'start_timer')
('LPAREN', '(')
('IDENTIFIER', 'time')
('PLUS', '+')
('IDENTIFIER', '1')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'stop_countdown')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'time')
('PLUS', '+')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_timer')
('EQUALS_TO', '==')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_timer')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' ran out of time to activate teleporter')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'index')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'timer_off')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\tiprintlnbold( "out of time" );')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'TRs')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Stop flashing the receiver map light')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'countdown')
('SUBTRACT', '-')
('SUBTRACT', '-')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' handles teleporting players when triggered')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_pad_active_think')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "player_teleported" );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' link established, can be used to teleport')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setcursorhint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'HINT_NOICON')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'teleport_active')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'user')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tself sethintstring( &"ZOMBIE_TELEPORT_TO_CORE" );')
('NEWLINE', '\n')
('COMMENT', '\tself teleport_trigger_invisible( false );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'user')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'is_player_valid')
('LPAREN', '(')
('IDENTIFIER', 'user')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'user')
('DOT', '.')
('IDENTIFIER', 'score')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_cost')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'is_cooldown')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleporter_pad_trig')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'teleport_trigger_invisible')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'user')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_zombiemode_score')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'minus_to_player_score')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_cost')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " Non-threaded so the trigger doesn't activate before the cooldown")
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'player_teleporting')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' handles moving the players and fx, etc...moved out so it can be threaded')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'player_teleporting')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'time_since_last_teleport')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetTime')
('LPAREN', '(')
('RPAREN', ')')
('SUBTRACT', '-')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_time')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' begin the teleport')
('NEWLINE', '\n')
('COMMENT', ' add 3rd person fx')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_pad_start_exploder')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' play startup fx at the core')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '105')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'AUDIO')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tpw')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' start fps fx')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_pad_player_fx')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_delay')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'AUDIO')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_2d_audio')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Activate the TP zombie kill effect')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_nuke')
('LPAREN', '(')
('IDENTIFIER', '20')
('COMMA', ',')
('IDENTIFIER', '300')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Max 20 zombies and range 300')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait a bit')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_delay')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' end fps fx')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fx_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' add 3rd person beam fx')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_pad_end_exploder')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' teleport the players')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'teleport_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'AUDIO')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tpc')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'index')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " only need this if it's not cooling down")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'is_cooldown')
('EQUALS_TO', '==')
('IDENTIFIER', 'false')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'pad_manager')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Now spawn a powerup goodie after a few seconds')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('DOT', '.')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ss')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_powerup')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'ss')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ss')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_zombiemode_powerups')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'special_powerup_drop')
('LPAREN', '(')
('IDENTIFIER', 'ss')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Special for teleporting too much.  The Dogs attack!')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'time_since_last_teleport')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '60000')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_links')
('EQUALS_TO', '==')
('IDENTIFIER', '3')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN', '>')
('IDENTIFIER', '20')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'dog_spawners')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'special_dog_spawner')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_zombiemode_dogs')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'special_dog_spawn')
('LPAREN', '(')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'iprintlnbold( "Samantha Sez: No Powerup For You!" );')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'play_sound_2d')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sam_nospawn')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetTime')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' pad fx for the start of the teleport')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_pad_start_exploder')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'switch')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('IDENTIFIER', '0')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '202')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('IDENTIFIER', '1')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '302')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('IDENTIFIER', '2')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '402')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' pad fx for the end of the teleport')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_pad_end_exploder')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'switch')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('IDENTIFIER', '0')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '201')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('IDENTIFIER', '1')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '301')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('IDENTIFIER', '2')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '401')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' used to enable / disable the pad use trigger for players')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_trigger_invisible')
('LPAREN', '(')
('IDENTIFIER', 'enable')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getplayers')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetInvisibleToPlayer')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'enable')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' checks if player is within radius of the teleport pad')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'player_is_near_pad')
('LPAREN', '(')
('IDENTIFIER', 'player')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'radius')
('ASSIGNMENT', '=')
('IDENTIFIER', '88')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'scale_factor')
('ASSIGNMENT', '=')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'dist')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Distance2D')
('LPAREN', '(')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'dist_touching')
('ASSIGNMENT', '=')
('IDENTIFIER', 'radius')
('MULTIPLY', '*')
('IDENTIFIER', 'scale_factor')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'dist')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'dist_touching')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' this is the 1st person effect seen when touching the teleport pad')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_pad_player_fx')
('LPAREN', '(')
('IDENTIFIER', 'delay')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fx_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getplayers')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'player_is_near_pad')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetTransported')
('LPAREN', '(')
('IDENTIFIER', 'delay')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetTransported')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' send players back to the core')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_players')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'player_radius')
('ASSIGNMENT', '=')
('IDENTIFIER', '16')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getplayers')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'core_pos')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'occupied')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'image_room')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players_touching')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('COMMENT', ' the players that will actually be teleported')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player_idx')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'prone_offset')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '49')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'crouch_offset')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '20')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'stand_offset')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' send players to a black room to flash images for a few seconds')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '4')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'core_pos')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'origin_teleport_player_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'i')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'occupied')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'image_room')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleport_room_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'i')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'settransported')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'player_is_near_pad')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players_touching')
('LBRACKET', '[')
('IDENTIFIER', 'player_idx')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'i')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player_idx')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'image_room')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_laststand')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'player_is_in_laststand')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'disableOffhandWeapons')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'disableweapons')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'getstance')
('LPAREN', '(')
('RPAREN', ')')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'prone')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'desired_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'image_room')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('IDENTIFIER', 'prone_offset')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'getstance')
('LPAREN', '(')
('RPAREN', ')')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'desired_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'image_room')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('IDENTIFIER', 'crouch_offset')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'desired_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'image_room')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('IDENTIFIER', 'stand_offset')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'teleport_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_origin')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'teleport_origin')
('DOT', '.')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'linkto')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'teleport_origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'teleport_origin')
('DOT', '.')
('IDENTIFIER', 'origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'desired_origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'FreezeControls')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_network_frame')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'black_box_start')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'teleport_origin')
('DOT', '.')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'image_room')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Nuke anything at the core')
('NEWLINE', '\n')
('IDENTIFIER', 'core')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEnt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger_teleport_core')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'core')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_nuke')
('LPAREN', '(')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', '300')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Max any zombies at the pad range 300')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' check if any players are standing on top of core teleport positions')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'j')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'j')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '4')
('SEMICOLON', ';')
('IDENTIFIER', 'j')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'occupied')
('LBRACKET', '[')
('IDENTIFIER', 'j')
('RBRACKET', ']')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'dist')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Distance2D')
('LPAREN', '(')
('IDENTIFIER', 'core_pos')
('LBRACKET', '[')
('IDENTIFIER', 'j')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'dist')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'player_radius')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'occupied')
('LBRACKET', '[')
('IDENTIFIER', 'j')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'black_box_end')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait_network_frame')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' move players to the core')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players_touching')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'player_idx')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players_touching')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'player_idx')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'player')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' find a free space at the core')
('NEWLINE', '\n')
('IDENTIFIER', 'slot')
('ASSIGNMENT', '=')
('IDENTIFIER', 'i')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'start')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'occupied')
('LBRACKET', '[')
('IDENTIFIER', 'slot')
('RBRACKET', ']')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'start')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '4')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'start')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'slot')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'slot')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', '4')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'slot')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'occupied')
('LBRACKET', '[')
('IDENTIFIER', 'slot')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'pos_name')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'origin_teleport_player_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'slot')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_core_pos')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('IDENTIFIER', 'pos_name')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'unlink')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'assert')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'teleport_origin')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'teleport_origin')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'teleport_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'enableweapons')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'enableoffhandweapons')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'setorigin')
('LPAREN', '(')
('IDENTIFIER', 'core_pos')
('LBRACKET', '[')
('IDENTIFIER', 'slot')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'setplayerangles')
('LPAREN', '(')
('IDENTIFIER', 'core_pos')
('LBRACKET', '[')
('IDENTIFIER', 'slot')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'FreezeControls')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_aftereffects')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'vox_rand')
('ASSIGNMENT', '=')
('IDENTIFIER', 'randomintrange')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', 'RARE: Sets up rare post-teleport line')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'vox_rand')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', '2')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'player teleporter_vo( "vox_tele_sick_rare" );')
('NEWLINE', '\n')
('COMMENT', 'iprintlnbold( "Hey, this is the random teleport sickness line!" );')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'teleporter_vo')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vox_tele_sick')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'achievement_notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'DLC3_ZOMBIE_FIVE_TELEPORTS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' play beam fx at the core')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '106')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' updates the hint string when countdown is started and expired')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_core_hint_update')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setcursorhint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'HINT_NOICON')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " can't use teleporters until power is on")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'electricity_on')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_FLAMES_UNAVAILABLE')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'teleport_pads_are_active')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_LINK_TPAD')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_links')
('EQUALS_TO', '==')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_INACTIVE_TPAD')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'sethintstring')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' establishes the link between teleporter pads and the core')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_core_think')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger_teleport_core')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'trigger')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleport_core_hint_update')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' disable teleporters to power is turned on')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'electricity_on')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'teleport_pads_are_active')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\ttrigger teleport_trigger_invisible( true );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tiprintlnbold( &"ZOMBIE_LINK_ACTIVE" );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' link the activated pads')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'timer_on')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'active')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_links')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_pad_link_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_links')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'AUDIO')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'scd')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'i')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_core_start_exploder')
('LPAREN', '(')
('IDENTIFIER', 'i')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' check for all teleporters active')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_links')
('EQUALS_TO', '==')
('IDENTIFIER', '3')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '101')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pap1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Pack-A-Punch door on')
('NEWLINE', '\n')
('IDENTIFIER', 'teleporter_vo')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'linkall')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'trigger')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', '7')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'achievement_notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'DLC3_ZOMBIE_FAST_LINK')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'Earthquake')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '3')
('COMMA', ',')
('IDENTIFIER', '2')
('DOT', '.')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', 'trigger')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', '3700')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' stop the countdown for the teleport pad')
('NEWLINE', '\n')
('IDENTIFIER', 'pad')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'trigger_teleport_pad_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'i')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_pad')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent')
('LPAREN', '(')
('IDENTIFIER', 'pad')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'trigger_pad')
('IDENTIFIER', 'stop_countdown')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ClientNotify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'TRs')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Stop flashing the receiver map light')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'active_timer')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'stop_countdown')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stop_countdown')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stop_countdown')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' checks if any of the teleporter pads are counting down')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_pads_are_active')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' have any pads started?')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'timer_on')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('COMMENT', ' starts the exploder for the teleport pad fx')
('NEWLINE', '\n')
('COMMENT', '-------------------------------------------------------------------------------')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_core_start_exploder')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'switch')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('IDENTIFIER', '0')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '102')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('IDENTIFIER', '1')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '103')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('IDENTIFIER', '2')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'exploder')
('LPAREN', '(')
('IDENTIFIER', '104')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_2d_audio')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fx_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getplayers')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'player_is_near_pad')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 't2d')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' kill anything near the pad')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_nuke')
('LPAREN', '(')
('IDENTIFIER', 'max_zombies')
('COMMA', ',')
('IDENTIFIER', 'range')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'zombies')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getaispeciesarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'axis')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'zombies')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_array_of_closest')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'zombies')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('COMMA', ',')
('IDENTIFIER', 'max_zombies')
('COMMA', ',')
('IDENTIFIER', 'range')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'zombies')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'randomfloatrange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '3')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'is_magic_bullet_shield_enabled')
('LPAREN', '(')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('LPAREN', '(')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'enemy_is_dog')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_zombiemode_spawner')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'zombie_head_gib')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'dodamage')
('LPAREN', '(')
('IDENTIFIER', '10000')
('COMMA', ',')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'playsoundatposition')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'nuked')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleporter_vo')
('LPAREN', '(')
('IDENTIFIER', 'tele_vo_type')
('COMMA', ',')
('IDENTIFIER', 'location')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'location')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleporter_vo_play')
('LPAREN', '(')
('IDENTIFIER', 'tele_vo_type')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'distance')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'location')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '64')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'switch')
('LPAREN', '(')
('IDENTIFIER', 'tele_vo_type')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'linkall')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleporter_vo_play')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vox_tele_linkall')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'countdown')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleporter_vo_play')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vox_tele_count')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleporter_vo_play')
('LPAREN', '(')
('IDENTIFIER', 'vox_type')
('COMMA', ',')
('IDENTIFIER', 'pre_wait')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'pre_wait')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'pre_wait')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'index')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_zombiemode_weapons')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'get_player_index')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plr')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'plr_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'index')
('PLUS', '+')
('QUOTE', '"')
('STRING', '_')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'pre_wait')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'create_and_play_dialog')
('LPAREN', '(')
('IDENTIFIER', 'plr')
('COMMA', ',')
('IDENTIFIER', 'vox_type')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_tele_help_vox')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tele_help_end')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'who')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'electricity_on')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'who')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleporter_vo_play')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vox_tele_help')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tele_help_end')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'who')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('LPAREN', '(')
('IDENTIFIER', 'who')
('RPAREN', ')')
('IDENTIFIER', 'IsTouching')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_packa_see_vox')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '10')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_pad_link_3')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'who')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'who')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'teleporter_vo_play')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vox_perk_packa_see')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tThis should match the perk_wire_fx_client function')
('NEWLINE', '\n')
('COMMENT', '\twaits for the effect to travel along the wire')
('NEWLINE', '\n')
('IDENTIFIER', 'teleporter_wire_wait')
('LPAREN', '(')
('IDENTIFIER', 'index')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'targ')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pad_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'index')
('PLUS', '+')
('QUOTE', '"')
('STRING', '_wire')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'targ')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'isDefined')
('LPAREN', '(')
('IDENTIFIER', 'targ')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isDefined')
('LPAREN', '(')
('IDENTIFIER', 'targ')
('DOT', '.')
('IDENTIFIER', 'target')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('IDENTIFIER', 'targ')
('DOT', '.')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'targ')
('ASSIGNMENT', '=')
('IDENTIFIER', 'target')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Teleporter Aftereffects')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_aftereffects')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'GetDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'factoryAftereffectOverride')
('QUOTE', '"')
('RPAREN', ')')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', '-1')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('LBRACKET', '[')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('LBRACKET', '[')
('IDENTIFIER', 'RandomInt')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('RBRACKET', ']')
('RBRACKET', ']')
('RBRACKET', ']')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('LBRACKET', '[')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'teleport_ae_funcs')
('LBRACKET', '[')
('IDENTIFIER', 'int')
('LPAREN', '(')
('IDENTIFIER', 'GetDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'factoryAftereffectOverride')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('RBRACKET', ']')
('RBRACKET', ']')
('RBRACKET', ']')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_aftereffect_shellshock')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'println')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '*** Explosion Aftereffect***\\n')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'shellshock')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'explosion')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_aftereffect_shellshock_electric')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'println')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '***Electric Aftereffect***\\n')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'shellshock')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'electrocution')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' tae indicates to Clientscripts that a teleporter aftereffect should start')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_aftereffect_fov')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tae')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_aftereffect_bw_vision')
('LPAREN', '(')
('IDENTIFIER', 'localClientNum')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tae')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_aftereffect_red_vision')
('LPAREN', '(')
('IDENTIFIER', 'localClientNum')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tae')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_aftereffect_flashy_vision')
('LPAREN', '(')
('IDENTIFIER', 'localClientNum')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tae')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teleport_aftereffect_flare_vision')
('LPAREN', '(')
('IDENTIFIER', 'localClientNum')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'tae')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'packa_door_reminder')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'teleporter_pad_link_3')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'rand')
('ASSIGNMENT', '=')
('IDENTIFIER', 'randomintrange')
('LPAREN', '(')
('IDENTIFIER', '4')
('COMMA', ',')
('IDENTIFIER', '16')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'playsound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'packa_door_hitch')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'rand')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('EOF', None)