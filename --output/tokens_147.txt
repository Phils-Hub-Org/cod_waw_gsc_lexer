('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_zombiemode_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_trap_pendulum')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '#include maps\\nazi_zombie_sumpf_trap_electric;')
('NEWLINE', '\n')
('COMMENT', '#include maps\\nazi_zombie_sumpf_trap_propeller;')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_blockers')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'magic_box_init')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'activate_door_flags')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'magic_blocker')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'script_noteworthy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'start_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'attic_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Declaring global bool that monitors perk huts')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '2')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'first_time_opening_perk_hut')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'waitfor_flag_open_chest_location')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'nw_magic_box')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'waitfor_flag_open_chest_location')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ne_magic_box')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'waitfor_flag_open_chest_location')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'se_magic_box')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'waitfor_flag_open_chest_location')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sw_magic_box')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waitfor_flag_open_chest_location')
('LPAREN', '(')
('IDENTIFIER', 'which')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'switch')
('LPAREN', '(')
('IDENTIFIER', 'which')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'nw_magic_box')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'nw_magic_box')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'nw_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' activate zones to that area ')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'activate_outdoor_zones')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'northwest')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' spawn initial zombies')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'get_enemy_count')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dog_round')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'spawn_initial_outside_zombies')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'northwest_initial_zombies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' JV initialize the swinging concrete block')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_trap_pendulum')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'initPendulumTrap')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'JV pendulum cannot be activated until this debris is cleared')
('NEWLINE', '\n')
('IDENTIFIER', 'penBuyTrigger')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pendulum_buy_trigger')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'array_thread')
('LPAREN', '(')
('IDENTIFIER', 'penBuyTrigger')
('COMMA', ',')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_trap_pendulum')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'penThink')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' adding spawners when area is opened')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_area_dog_spawners')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'nw_magic_box_dog_spawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'ne_magic_box')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ne_magic_box')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'ne_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' activate zones to that area')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'activate_outdoor_zones')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'northeast')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' spawn initial zombies')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'get_enemy_count')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dog_round')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'spawn_initial_outside_zombies')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'northeast_initial_zombies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' JV initialize the easy access routes')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zipline')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'initZipline')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' adding dog spawners when area is opened')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_area_dog_spawners')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ne_magic_box_dog_spawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'se_magic_box')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'se_magic_box')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'se_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' activate zones to that area')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'activate_outdoor_zones')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'southeast')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' spawn initial zombies')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'get_enemy_count')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dog_round')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'spawn_initial_outside_zombies')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'southeast_initial_zombies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' adding dog spawners when area is opened')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_area_dog_spawners')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'se_magic_box_dog_spawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'sw_magic_box')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sw_magic_box')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'sw_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' activate zones to that area')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'activate_outdoor_zones')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'southwest')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' spawn initial zombies')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'get_enemy_count')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'dog_round')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'spawn_initial_outside_zombies')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'southwest_initial_zombies')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' adding dog spawners when area is opened')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_area_dog_spawners')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sw_magic_box_dog_spawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'default')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' JMA - here is where we actually randomize perks and weapons when the first blockable is unlocked')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'randomize_perks')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'randomize_perks')
('EQUALS_TO', '==')
('IDENTIFIER', 'false')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_perks')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'randomize_vending_machines')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'vending_model_info')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'vending_model_info')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'vending_model_info')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'zombie_vending_jugg_on_price')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'vending_model_info')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'vending_model_info')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'zombie_vending_doubletap_price')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'vending_model_info')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'vending_model_info')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'zombie_vending_revive_on_price')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'vending_model_info')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'vending_model_info')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'zombie_vending_sleight_on_price')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Weighting the weapons with the vending machine names')
('NEWLINE', '\n')
('COMMENT', 'Format - "vending_machine_name1:gun1,gun2,gun3,gun4,:;vending_machine_name2...etc."')
('NEWLINE', '\n')
('COMMENT', 'Vending Machines: vending_doubletap, vending_jugg, vending_revive, vending_sleight,')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Guns:30cal,bar,doublebarrel, doublebarrel_sawed_grip,fg42,gewehr43,kar98k_scoped_zombie,m1carbine,m1garand')
('NEWLINE', '\n')
('COMMENT', '  ,m1garand_gl_zombie,mg42,type100_smg,panzerschrek_zombie,ppsh,ptrs41_zombie,shotgun,springfield,stg44,sw_357,thompson ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' \t\t\tlist = "vending_doubletap:30cal,bar,doublebarrel_sawed_grip,fg42:;";')
('NEWLINE', '\n')
('COMMENT', ' \t\t\tlist = list + "vending_jugg:gewehr43,m1carbine,mg42,m1garand_gl_zombie:;";\t\t')
('NEWLINE', '\n')
('COMMENT', ' \t\t\tlist = list + "vending_revive:type100_smg, panzerschrek_zombie,ppsh,ptrs41_zombie:;";')
('NEWLINE', '\n')
('COMMENT', ' \t\t\tlist = list + "vending_sleight:shotgun,springfield,stg44,sw_357:;";')
('NEWLINE', '\n')
('COMMENT', ' \t\t')
('NEWLINE', '\n')
('COMMENT', ' \t\t \tmaps\\nazi_zombie_sumpf_perks::randomize_weapons(list);')
('NEWLINE', '\n')
('COMMENT', ' \t\t \tmaps\\_zombiemode_weapons::init_weapon_upgrade();')
('NEWLINE', '\n')
('COMMENT', ' \t\t\t')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'randomize_perks')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'adding flag waits for after vending machines are randomized')
('NEWLINE', '\n')
('IDENTIFIER', 'switch')
('LPAREN', '(')
('IDENTIFIER', 'which')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'nw_magic_box')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'northwest_building_unlocked')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_area_dog_spawners')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'nw_perk_hut_dog_spawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_perks')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'vending_randomization_effect')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'ne_magic_box')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'northeast_building_unlocked')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_area_dog_spawners')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ne_perk_hut_dog_spawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_perks')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'vending_randomization_effect')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'se_magic_box')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'southeast_building_unlocked')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_area_dog_spawners')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'se_perk_hut_dog_spawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_perks')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'vending_randomization_effect')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'sw_magic_box')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'southwest_building_unlocked')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_zone_management')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'add_area_dog_spawners')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'sw_perk_hut_dog_spawners')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'nazi_zombie_sumpf_perks')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'vending_randomization_effect')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' This function makes sure that the first move is in the perks hut and afterwards to any random location')
('NEWLINE', '\n')
('IDENTIFIER', 'magic_box_tracker')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' wait until the first move')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon_fly_away_start')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' make sure weapon box spawns in one of the perks hut as the first move')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'nw_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'ne_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'se_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'sw_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' JMA - used to determine if magic box has moved')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'magic_box_first_move')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' magic box has finished the first move')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'magic_box_light_switch')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' make the weapon box move to any of the six locations')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'nw_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'ne_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'se_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'sw_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'start_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'open_chest_location')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'attic_chest')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('EOF', None)