('COMMENT', '\nspawn_a_zero()\n{\n\tmy_trig = GetEnt("start_zero_test", "targetname");\n\tmy_trig waittill("trigger");\n\t\n\tspawn_pos = GetEnt("spawn_zero_pos", "targetname");\n\tplane = SpawnVehicle( "vehicle_jap_airplane_zero_d_fuselage", "new_plane", "zero", spawn_pos.origin, spawn_pos.angles );\n\tplane.vehicletype = "zero";\n\tmaps\\_vehicle::vehicle_init(plane);\n\t\n}\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'strafing_runs')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'my_trig')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEnt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'start_zero_test')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'my_trig')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEnt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'strafing_target_one')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'strafe_a_zero')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'back_strafe_right')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'target')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'strafe_a_zero')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'back_strafe_left')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'target')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'strafe_a_zero')
('LPAREN', '(')
('IDENTIFIER', 'type_of_attack')
('COMMA', ',')
('IDENTIFIER', 'target')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\n\tif(level.total_zeros_spawned >= level.MAX_ZEROS)\n\t{\n\t\treturn;\n\t}\n\t')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'total_zeros_spawned')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('COMMENT', 'increment global zero counter')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'starting_points')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'starting_points')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_pathpoints_start')
('LPAREN', '(')
('IDENTIFIER', 'target')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('GREATER_THAN', '>')
('IDENTIFIER', '60000')
('LOGICAL_OR', '||')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('LESS_THAN_OR_EQUAL_TO', '<')
('SUBTRACT', '-')
('IDENTIFIER', '60000')
('LOGICAL_OR', '||')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('GREATER_THAN', '>')
('IDENTIFIER', '60000')
('LOGICAL_OR', '||')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('LESS_THAN_OR_EQUAL_TO', '<')
('SUBTRACT', '-')
('IDENTIFIER', '60000')
('LOGICAL_OR', '||')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('GREATER_THAN', '>')
('IDENTIFIER', '20000')
('LOGICAL_OR', '||')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('LESS_THAN_OR_EQUAL_TO', '<')
('SUBTRACT', '-')
('IDENTIFIER', '1000')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'false')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'the spawn point for the new plane was all messed up')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('ASSIGNMENT', '=')
('IDENTIFIER', 'SpawnVehicle')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_jap_airplane_zero_d_fuselage')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'new_plane')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'zero')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'ang')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'vehicletype')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'zero')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_vehicle')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'vehicle_init')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'type_of_attack')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'back_strafe_right')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'get_pathpoints_straight_strafe_bank_away')
('LPAREN', '(')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'type_of_attack')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'back_strafe_left')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'get_pathpoints_straight_strafe_bank_away')
('LPAREN', '(')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'ai_turret_think')
('LPAREN', '(')
('IDENTIFIER', 'target')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'setplanegoalpos')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', '100')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', '160')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'curve_end')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'size')
('SUBTRACT', '-')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'plane setplanegoalpos(plane.pathpoints["fly_org"][i], plane.pathpoints["fly_ang"][i], 160);')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'setplanegoalpos')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('PLUS', '+')
('IDENTIFIER', '1')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('PLUS', '+')
('IDENTIFIER', '2')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('PLUS', '+')
('IDENTIFIER', '3')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('PLUS', '+')
('IDENTIFIER', '4')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('PLUS', '+')
('IDENTIFIER', '5')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', '160')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'plane thread draw_debug_lines(i);')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'range')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'Distance2D')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', '2000')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'delay')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'curve_end')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'Distance2D')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'kill_on_range')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'RadiusDamage')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '50000')
('COMMA', ',')
('IDENTIFIER', '50000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'total_zeros_spawned')
('SUBTRACT', '-')
('SUBTRACT', '-')
('SEMICOLON', ';')
('COMMENT', 'maintain the total number of zeros')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'get_pathpoints_start')
('LPAREN', '(')
('IDENTIFIER', 'target')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('SUBTRACT', '-')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('MULTIPLY', '*')
('IDENTIFIER', '10000')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('MULTIPLY', '*')
('IDENTIFIER', '10000')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', 'The origin of the target')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'give the zeros a random initial dive degree that is between 15 and 30')
('NEWLINE', '\n')
('IDENTIFIER', 'z_value')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Tan')
('LPAREN', '(')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', '8')
('COMMA', ',')
('IDENTIFIER', '15')
('RPAREN', ')')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', 'Distance2D')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'start_points["org"] += (0,0,z_value);')
('NEWLINE', '\n')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('PLUS_EQUALS', '+=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '1500')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'start_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'ang')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'start_points')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'get_pathpoints_straight_strafe_bank_away')
('LPAREN', '(')
('IDENTIFIER', 'target')
('COMMA', ',')
('IDENTIFIER', 'direction')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'shoot_gun_range')
('ASSIGNMENT', '=')
('IDENTIFIER', '5000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'kill_on_range')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'setup the initial spawnpoint')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', '75')
('COMMA', ',')
('IDENTIFIER', '600')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'end_curve')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'kill_on_range')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', '999999')
('SEMICOLON', ';')
('COMMENT', 'A really LARGE number')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'new_path_point_org')
('ASSIGNMENT', '=')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'VectorNormalize')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', '50000')
('RPAREN', ')')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '1200')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', '((AnglesToForward(target.angles)[0] * 50000, (AnglesToForward(target.angles)[1] * 50000), 600)); //(0, 50000, 600);')
('NEWLINE', '\n')
('IDENTIFIER', 'new_path_point_ang')
('ASSIGNMENT', '=')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'new_path_point_org')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'new_path_point_ang')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'delay')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'kill_on_range')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', '999999')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'direction')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '100')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'new_path_point_org')
('ASSIGNMENT', '=')
('IDENTIFIER', 'offset_point_generator')
('LPAREN', '(')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToRight')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('MULTIPLY', '*')
('IDENTIFIER', '10000')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToRight')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('MULTIPLY', '*')
('IDENTIFIER', '10000')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', '5000')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'new_path_point_org')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'new_path_point_ang')
('ASSIGNMENT', '=')
('IDENTIFIER', 'offset_point_generator')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'new_path_point_ang')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'new_path_point_org')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'new_path_point_ang')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'delay')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'kill_on_range')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', '12000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'direction')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '100')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'new_path_point_org')
('ASSIGNMENT', '=')
('IDENTIFIER', 'offset_point_generator')
('LPAREN', '(')
('LPAREN', '(')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToRight')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('MULTIPLY', '*')
('IDENTIFIER', '10000')
('RPAREN', ')')
('RPAREN', ')')
('MULTIPLY', '*')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('COMMA', ',')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToRight')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('MULTIPLY', '*')
('IDENTIFIER', '10000')
('RPAREN', ')')
('RPAREN', ')')
('MULTIPLY', '*')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '5000')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'new_path_point_org')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'new_path_point_ang')
('ASSIGNMENT', '=')
('IDENTIFIER', 'offset_point_generator')
('LPAREN', '(')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'new_path_point_ang')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'new_path_point_org')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'new_path_point_ang')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'delay')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'kill_on_range')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', '12000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'offset_point_generator')
('LPAREN', '(')
('IDENTIFIER', 'org_offset')
('COMMA', ',')
('IDENTIFIER', 'original_point')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'new_point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'original_point')
('PLUS', '+')
('IDENTIFIER', 'org_offset')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'new_point')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'draw_debug_lines')
('LPAREN', '(')
('IDENTIFIER', 'id')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'curve_end')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'end_line')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'Line')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'id')
('RBRACKET', ']')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'Line')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('IDENTIFIER', 'VectorNormalize')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'id')
('RBRACKET', ']')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', '5000')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '01')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ai_turret_think')
('LPAREN', '(')
('IDENTIFIER', 'target')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'max_fire_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'time_firing')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stop_my_firing')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'turret_origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'turret_target')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'firing')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'firing')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'self setgunnertargetent(self.right_turret_target, (0,0,0), 0);')
('NEWLINE', '\n')
('COMMENT', 'self setgunnertargetent(self.left_turret_target, (0,0,0), 1);')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self_forward')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'random_num')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'firing_at_player')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'firing_at_player')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self_forward')
('ASSIGNMENT', '=')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'target_vector')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'self_forward')
('MULTIPLY', '*')
('IDENTIFIER', '5000')
('RPAREN', ')')
('SUBTRACT', '-')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('DOT', '.')
('IDENTIFIER', '2679491')
('MULTIPLY', '*')
('IDENTIFIER', '5000')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', '-- Tan(15)\t')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- Check and see if the player is within a reasonable angle and if he is, then shoot at him instead')
('NEWLINE', '\n')
('IDENTIFIER', 'player_dir')
('ASSIGNMENT', '=')
('IDENTIFIER', 'VectorNormalize')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'origin')
('SUBTRACT', '-')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'angle')
('ASSIGNMENT', '=')
('IDENTIFIER', 'VectorDot')
('LPAREN', '(')
('IDENTIFIER', 'self_forward')
('COMMA', ',')
('IDENTIFIER', 'player_dir')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'angle')
('GREATER_THAN', '>')
('DOT', '.')
('IDENTIFIER', '965')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'target_vector')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '45')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'firing_at_player')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- if the player and the zero are flying in the same direction then no damage')
('NEWLINE', '\n')
('IDENTIFIER', 'player_for')
('ASSIGNMENT', '=')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'plane_a')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'other_angle')
('ASSIGNMENT', '=')
('IDENTIFIER', 'VectorDot')
('LPAREN', '(')
('IDENTIFIER', 'self_forward')
('COMMA', ',')
('IDENTIFIER', 'player_for')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'other_angle')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'firing_at_player')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetGunnerTargetVec')
('LPAREN', '(')
('IDENTIFIER', 'target_vector')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetGunnerTargetVec')
('LPAREN', '(')
('IDENTIFIER', 'target_vector')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'Distance2D')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'shoot_gun_range')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'firegunnerweapon')
('LPAREN', '(')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '14')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'time_firing')
('PLUS_EQUALS', '+=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '14')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'firegunnerweapon')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '14')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'time_firing')
('PLUS_EQUALS', '+=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '14')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'firing')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('COMMENT', '-- old')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'firing_at_player')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zero_accuracy_override')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'plane_a')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pby_nose_damage')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'random_num')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '10')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'random_num')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', '7')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'plane_a')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'pby_nose_damage')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'firing')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('COMMENT', '-- old')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'time_firing')
('GREATER_THAN', '>')
('IDENTIFIER', 'max_fire_time')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'random_wait')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'random_wait')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'time_firing')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\nturret_loop_right()\n{\n\tself endon("death");\n\t\n\twhile(1)\n\t{\n\t\tif(self.firing)\n\t\t{\n\t\t\tturret_right_origin = self GetTagOrigin("tag_gunright") + (AnglesToForward(self.angles) * 50);\n\t\t\tturret_right_target = turret_right_origin + (AnglesToForward(self.angles) * 5000) - (0,0, Tan(10) * 5000);\n\t\t\tMagicBullet("default_aircraft_turret", turret_right_origin, turret_right_target);\n\t\t}\n\t\twait(RandomFloatRange(0.05, 0.1));\n\t}\n}\t\n\nturret_loop_left()\n{\n\tself endon("death");\n\t\n\twhile(1)\n\t{\n\t\tif(self.firing)\n\t\t{\n\t\t\tturret_left_origin = self GetTagOrigin("tag_gunleft") + (AnglesToForward(self.angles) * 50);\n\t\t\tturret_left_target = turret_left_origin + (AnglesToForward(self.angles) * 5000) - (0,0, Tan(10) * 5000);\n\t\t\tMagicBullet("default_aircraft_turret", turret_left_origin, turret_left_target);\n\t\t}\n\t\twait(RandomFloatRange(0.05, 0.1));\n\t}\n}\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'strafe_a_moving_target')
('LPAREN', '(')
('IDENTIFIER', 'target')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', '-- increment global zero counter')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'total_zeros_spawned')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- Get the initial starting point for the Zero')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'starting_points')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ref_ent')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEnt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'ev5_ref_origin')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- Calculate an approprite spawnpoint')
('NEWLINE', '\n')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('SUBTRACT', '-')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'ref_ent')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('MULTIPLY', '*')
('IDENTIFIER', '20000')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'ref_ent')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('MULTIPLY', '*')
('IDENTIFIER', '20000')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', 'The origin of the target')
('NEWLINE', '\n')
('IDENTIFIER', 'z_value')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Tan')
('LPAREN', '(')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', '8')
('COMMA', ',')
('IDENTIFIER', '15')
('RPAREN', ')')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', 'Distance2D')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('PLUS_EQUALS', '+=')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', 'z_value')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'ang')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'ref_ent')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('ASSIGNMENT', '=')
('IDENTIFIER', 'SpawnVehicle')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'vehicle_jap_airplane_zero_d_fuselage')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'new_plane')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'zero')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'org')
('QUOTE', '"')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'starting_points')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'ang')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'vehicletype')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'zero')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_vehicle')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'vehicle_init')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'shoot_gun_range')
('ASSIGNMENT', '=')
('IDENTIFIER', '5000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'ai_turret_think')
('LPAREN', '(')
('IDENTIFIER', 'target')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- Make shorter splines that get flown completely while working on strafing the target')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'kill_on_range')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'Distance2D')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', '5000')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '600')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'ref_ent')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'end_curve')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'kill_on_range')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', '999999')
('SEMICOLON', ';')
('COMMENT', 'A really LARGE number')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'setplanegoalpos')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', '200')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'waittillclose')
('LPAREN', '(')
('IDENTIFIER', 'target')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'curve_end')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- Fly straight for a little bit')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'VectorToAngles')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '600')
('RPAREN', ')')
('RPAREN', ')')
('SUBTRACT', '-')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', '8000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'ref_ent')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_cond')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'end_curve')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'kill_on_range')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', '999999')
('SEMICOLON', ';')
('COMMENT', 'A really LARGE number')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'plane')
('IDENTIFIER', 'setplanegoalpos')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_org')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'pathpoints')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'fly_ang')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', '200')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '-- Bank left/right after strafing past the target')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'TEMP - ZERO REACHED THE END OF ITS PATH WITHOUT DYING')
('NEWLINE', '\n')
('IDENTIFIER', 'RadiusDamage')
('LPAREN', '(')
('IDENTIFIER', 'plane')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', '100')
('COMMA', ',')
('IDENTIFIER', '2500')
('COMMA', ',')
('IDENTIFIER', '2500')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'waittillclose')
('LPAREN', '(')
('IDENTIFIER', 'target')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'curve_end')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '10')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'Distance2D')
('LPAREN', '(')
('IDENTIFIER', 'target')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '5000')
('RPAREN', ')')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'curve_end')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'curve_end')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('EOF', None)