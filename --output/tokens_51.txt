('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' DEPRECATED, ah well...')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' file: ber3b_fireteams.gsc')
('NEWLINE', '\n')
('COMMENT', ' description: fireteams script for berlin3b')
('NEWLINE', '\n')
('COMMENT', ' scripter: slayback')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_anim')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' --- SETUP EXAMPLES ---')
('NEWLINE', '\n')
('COMMENT', '\n// set these up in your level\'s ::main function\n//level.fireteams_init_func = ::ber3b_fireteams_init;\n//level.fireteams_reset_ais_customfunc = ::ber3b_fireteam_reset_ais_customfunc;\n//maps\\ber3b_fireteams::fireteams_init();\n\n// init function example\nber3b_fireteams_init()\n{\t\n\t//\n\t// --- FIRETEAM CONTROL ARRAY NOTES ---\n\t//\n\t// -- GENERAL REFERENCE --\n\t// - teamname = the reference name for this team, used for string concatenation for dialogue, etc.\n\t// - level.current_battle is set up to match the area the player is in at the moment (ex. "foyer", "parliament", etc)\n\t// - warpSpots are where the guys will start from (generally inside a door, etc.)\n\t// - doors are opened when the fireteam shows up, open type depends on "openDirection"\n\t// - nodes are where guys run to when they spawn, can be chained per entrance index by targeting another set\n\t// - aimSpots are where guys will fire at, these are used differently per fireteam\n\t//    since they all have different firing behavior\n\t// - geoPrefixes (optional) are the prefix strings for destructible string concatenation\n\t// - killzones (optional) are our failsafes: we can DoDamage to guys in those areas to\n\t//    make sure that the teams kills \'em dead\n\t// - killspawners (optional) can be triggered so that a team\'s impact is permanent to that area\n\t//\n\t// -- OTHER --\n\t// - only need one set of spawners per fireteam, since we\'re warping guys just outside of the battle areas\n\t// - most of these groups (warpSpots, nodes, doors, etc.) are all connected by their array indices,\n\t//    so if I want a team to enter from entrance index 0, it can potentially go to different nodes,\n\t//    use different aimSpots, etc. than if it enters from entrance index 1.\n\t// - each fireteam type has unique behavior, and we could add to them as well - sniper team, mortar team, etc.\n\t//\n\t// - main fireteam behavior function note! unlike in almost every other function,\n\t//    fireteamControlArray is only used to copy any values we added to the array\n\t//    during the input loop over into the copy of the array that\'s stored in the level variable\n\t//    (for example, level.fireteam_bazooka)\n\t//\n\t// - direct questions/bugs to sean slayback\n\t//\n\t\n\t// -- bazooka fireteam control array --\t\n\tlevel.fireteam_bazooka["teamname"] = "bazooka";\n\tlevel.fireteam_bazooka["displayname"] = "bazooka";  // TODO localize\n\tlevel.fireteam_bazooka["maxUses"] = 1;\n\tlevel.fireteam_bazooka["masterControlFunc"] = maps\\ber3b_fireteams::fireteam_bazooka;\n\t//level.fireteam_bazooka["pickEntranceFunc"] = maps\\ber3b_fireteams::fireteams_pickentrance;\n\t\n\tlevel.fireteam_bazooka["spawner_primary"] = getent_safe( "spawner_fireteam_bazooka", "targetname" );\n\tlevel.fireteam_bazooka["spawner_secondary"] = getent_safe( "spawner_fireteam_bazooka_helper", "targetname" );\n\t\n\tlevel.fireteam_bazooka["foyer"]["warpSpots_primary"][0] = getstruct_safe( "struct_fireteam_foyer_warpSpot_primary_rightDoor", "targetname" );\n\tlevel.fireteam_bazooka["foyer"]["warpSpots_secondary"][0] = getstruct_safe( "struct_fireteam_foyer_warpSpot_secondary_rightDoor", "targetname" );\n\tlevel.fireteam_bazooka["foyer"]["warpSpots_primary"][1] = getstruct_safe( "struct_fireteam_foyer_warpSpot_primary_leftDoor", "targetname" );\n\tlevel.fireteam_bazooka["foyer"]["warpSpots_secondary"][1] = getstruct_safe( "struct_fireteam_foyer_warpSpot_secondary_leftDoor", "targetname" );\n\t\n\tlevel.fireteam_bazooka["foyer"]["doors"][0] = getent_safe( "sbmodel_fireteam_door_foyer_1", "targetname" );\n\tlevel.fireteam_bazooka["foyer"]["doors"]["openDirection"][0] = "right";\n\tlevel.fireteam_bazooka["foyer"]["doors"][1] = getent_safe( "sbmodel_fireteam_door_foyer_2", "targetname" );\n\tlevel.fireteam_bazooka["foyer"]["doors"]["openDirection"][1] = "left";\n\t\n\tlevel.fireteam_bazooka["foyer"]["nodes_primary"][0] = getnode_safe( "node_fireteam_foyer_bazooka_1", "targetname" );\n\tlevel.fireteam_bazooka["foyer"]["nodes_secondary"][0] = getnode_safe( "node_fireteam_foyer_bazooka_helper_1", "targetname" );\n\t// for now, second set of runto nodes are the same as primary ones\n\tlevel.fireteam_bazooka["foyer"]["nodes_primary"][1] = getnode_safe( "node_fireteam_foyer_bazooka_1", "targetname" );\n\tlevel.fireteam_bazooka["foyer"]["nodes_secondary"][1] = getnode_safe( "node_fireteam_foyer_bazooka_helper_1", "targetname" );\n\t\n\t// TODO allow for multiple sets of aimSpots per level.current_battle\n\tlevel.fireteam_bazooka["foyer"]["aimSpots"][0] = getent_safe( "org_fireteam_foyer_bazooka_aimSpot1", "targetname" );\n\tlevel.fireteam_bazooka["foyer"]["aimSpots"][1] = getent_safe( "org_fireteam_foyer_bazooka_aimSpot2", "targetname" );\n\tlevel.fireteam_bazooka["foyer"]["aimSpots"][2] = getent_safe( "org_fireteam_foyer_bazooka_aimSpot3", "targetname" );\n\t\n\t// set up the geometry name prefixes for destruction later\n\t// NOTE these must match the aimSpot reference indices above\n\t// TODO rework these to use _exploder\n\tlevel.fireteam_bazooka["foyer"]["geoPrefixes"][0] = "sbmodel_foyer_strongpoint_1";  // left side\n\tlevel.fireteam_bazooka["foyer"]["geoPrefixes"][1] = "sbmodel_foyer_strongpoint_2";  // center\n\tlevel.fireteam_bazooka["foyer"]["geoPrefixes"][2] = "sbmodel_foyer_strongpoint_3";  // right\n\t\n\t// -- flamethrower fireteam control array --\n\tlevel.fireteam_flamethrower["teamname"] = "flamethrower";\n\tlevel.fireteam_flamethrower["displayname"] = "flamethrower";  // TODO localize\n\tlevel.fireteam_flamethrower["maxUses"] = 1;\n\tlevel.fireteam_flamethrower["masterControlFunc"] = maps\\ber3b_fireteams::fireteam_flamethrower;\n\tlevel.fireteam_flamethrower["pickEntranceFunc"] = maps\\ber3b_fireteams::fireteam_flamethrower_pickentrance;\n\t\n\tlevel.fireteam_flamethrower["spawner_primary"] = getent_safe( "spawner_fireteam_flamethrower", "targetname" );\n\tlevel.fireteam_flamethrower["spawner_secondary"] = getent_safe( "spawner_fireteam_flamethrower_helper", "targetname" );\n\t\n\tlevel.fireteam_flamethrower["foyer"]["warpSpots_primary"][0] = getstruct_safe( "struct_fireteam_foyer_warpSpot_primary_leftDoor", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["warpSpots_secondary"][0] = getstruct_safe( "struct_fireteam_foyer_warpSpot_secondary_leftDoor", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["warpSpots_primary"][1] = getstruct_safe( "struct_fireteam_foyer_warpSpot_primary_rightDoor", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["warpSpots_secondary"][1] = getstruct_safe( "struct_fireteam_foyer_warpSpot_secondary_rightDoor", "targetname" );\n\t\n\tlevel.fireteam_flamethrower["foyer"]["doors"][0] = getent_safe( "sbmodel_fireteam_door_foyer_2", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["doors"]["openDirection"][0] = "left";\n\tlevel.fireteam_flamethrower["foyer"]["doors"][1] = getent_safe( "sbmodel_fireteam_door_foyer_1", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["doors"]["openDirection"][1] = "right";\n\t\n\tlevel.fireteam_flamethrower["foyer"]["nodes_primary"][0] = getnode_safe( "node_fireteam_foyer_flamethrower_right_1", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["nodes_secondary"][0] = getnode_safe( "node_fireteam_foyer_flamethrower_helper_right_1", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["nodes_primary"][1] = getnode_safe( "node_fireteam_foyer_flamethrower_1", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["nodes_secondary"][1] = getnode_safe( "node_fireteam_foyer_flamethrower_helper_1", "targetname" );\n\t\n\t// NOTE: for flamer to sweep from one node to another, any spot grabbed here should target at least one more\n\t// entrance index 0, fire on this spot first\n\tlevel.fireteam_flamethrower["foyer"]["aimSpots"][0][0] = getent_safe( "org_fireteam_foyer_flamethrower_right_aimSpot1a", "targetname" );\n\t// then move and fire on this spot second\n\tlevel.fireteam_flamethrower["foyer"]["aimSpots"][0][1] = getent_safe( "org_fireteam_foyer_flamethrower_right_aimSpot2a", "targetname" );\n\t\n\t// entrance index 1\n\tlevel.fireteam_flamethrower["foyer"]["aimSpots"][1][0] = getent_safe( "org_fireteam_foyer_flamethrower_aimSpot1a", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["aimSpots"][1][1] = getent_safe( "org_fireteam_foyer_flamethrower_aimSpot2a", "targetname" );\n\t\n\t// killzones & killspawners should match the aimSpot sets\n\tlevel.fireteam_flamethrower["foyer"]["killzones"][0][0] = getent_safe( "trig_fireteam_foyer_flamethrower_right_killzone_1", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["killzones"][0][1] = getent_safe( "trig_fireteam_foyer_flamethrower_right_killzone_2", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["killzones"][1][0] = getent_safe( "trig_fireteam_foyer_flamethrower_killzone_1", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["killzones"][1][1] = getent_safe( "trig_fireteam_foyer_flamethrower_killzone_2", "targetname" );\n\t\n\t// TODO separate the separate groups of guys into different killspawners?\n\tlevel.fireteam_flamethrower["foyer"]["killspawners"][0][0] = getent_safe( "trig_script_killspawner_13", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["killspawners"][0][1] = getent_safe( "trig_script_killspawner_14", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["killspawners"][1][0] = getent_safe( "trig_script_killspawner_13", "targetname" );\n\tlevel.fireteam_flamethrower["foyer"]["killspawners"][1][1] = getent_safe( "trig_script_killspawner_14", "targetname" );\n\t\n\t// -- mg fireteam control array --\n\tlevel.fireteam_mg["teamname"] = "mg";\n\tlevel.fireteam_mg["displayname"] = "DP28 LMG";  // TODO localize\n\tlevel.fireteam_mg["maxUses"] = 1;\n\tlevel.fireteam_mg["masterControlFunc"] = maps\\ber3b_fireteams::fireteam_mg;\n\t//level.fireteam_mg["pickEntranceFunc"] = maps\\ber3b_fireteams::fireteams_pickentrance;\n\t\n\tlevel.fireteam_mg["spawner_primary"] = getent_safe( "spawner_fireteam_mg", "targetname" );\n\tlevel.fireteam_mg["spawner_secondary"] = getent_safe( "spawner_fireteam_mg_helper", "targetname" );\n\t\n\tlevel.fireteam_mg["foyer"]["warpSpots_primary"][0] = getstruct_safe( "struct_fireteam_foyer_warpSpot_primary_rightDoor", "targetname" );\n\tlevel.fireteam_mg["foyer"]["warpSpots_secondary"][0] = getstruct_safe( "struct_fireteam_foyer_warpSpot_secondary_rightDoor", "targetname" );\n\tlevel.fireteam_mg["foyer"]["warpSpots_primary"][1] = getstruct_safe( "struct_fireteam_foyer_warpSpot_primary_leftDoor", "targetname" );\n\tlevel.fireteam_mg["foyer"]["warpSpots_secondary"][1] = getstruct_safe( "struct_fireteam_foyer_warpSpot_secondary_leftDoor", "targetname" );\n\t\n\tlevel.fireteam_mg["foyer"]["doors"][0] = getent_safe( "sbmodel_fireteam_door_foyer_1", "targetname" );\n\tlevel.fireteam_mg["foyer"]["doors"]["openDirection"][0] = "right";\n\tlevel.fireteam_mg["foyer"]["doors"][1] = getent_safe( "sbmodel_fireteam_door_foyer_2", "targetname" );\n\tlevel.fireteam_mg["foyer"]["doors"]["openDirection"][1] = "left";\n\t\n\tlevel.fireteam_mg["foyer"]["nodes_primary"][0] = getnode_safe( "node_fireteam_foyer_mg_1", "targetname" );\n\tlevel.fireteam_mg["foyer"]["nodes_secondary"][0] = getnode_safe( "node_fireteam_foyer_mg_helper_1", "targetname" );\n\t// for now, second set of runto nodes are the same as primary ones\n\tlevel.fireteam_mg["foyer"]["nodes_primary"][1] = getnode_safe( "node_fireteam_foyer_mg_1", "targetname" );\n\tlevel.fireteam_mg["foyer"]["nodes_secondary"][1] = getnode_safe( "node_fireteam_foyer_mg_helper_1", "targetname" );\n\t\n\tlevel.fireteam_mg["foyer"]["aimSpots"][0] = getent_safe( "org_fireteam_foyer_mg_aimSpot1a", "targetname" );\n\tlevel.fireteam_mg["foyer"]["aimSpots"][1] = getent_safe( "org_fireteam_foyer_mg_aimSpot1b", "targetname" );\n\t\n\t// -- global fireteam settings --\t\n\tlevel.fireteams_action_slot = 4;  // to which action slot do we want to assign the fireteams?\n\tlevel.fireteams_dpad_button = "DPAD_RIGHT";  // HACK this needs to be keybinding- and platform-safe\n\tlevel.fireteam_request_wait_min = 3;  // min seconds that the fireteam will take to show up\n\tlevel.fireteam_request_wait_max = 5;  // max seconds that the fireteam will take to show up\n\tlevel.fireteam_dialogue_deny_wait = 8;  // seconds to wait between playing fireteam deny dialogues\n\tlevel.fireteam_cooldown_time = 60;  // seconds we have to wait between fireteams\n\tlevel.fireteam_hud_fade_time = 0.1;  // seconds over which fireteam hudelements will fade in/out\n\tlevel.fireteam_input_pause_time = 2;  // seconds to pause the input loop after calling in a fireteam\n}\n\n// self = an AI\nber3b_fireteam_reset_ais_customfunc()\n{\n\t// add to color chain\n\tfriend_add( self );\n\tself thread friend_remove_on_death();\n\tself set_force_color( "b" );\n}\n\n// --- level_anim setup example ---\n// -- fireteam anims --\nlevel.scr_sound["fireteam_bazooka_primary"]["bazooka_reload"] = "print: Bazooka loading anim";\nlevel.scr_sound["fireteam_bazooka_secondary"]["bazooka_reload"] = "print: Bazooka loading anim";\n\n// -- fireteam dialogue --\n// generic to all fireteams\nlevel.scr_sound["fireteam_generic"]["fireteams_unavailable"] = "print:Fireteams no longer available, we\'ll let you know when that changes.";\nlevel.scr_sound["fireteam_generic"]["fireteams_unavailable_reminder"] = "print:Fireteams are still unavailable.";\nlevel.scr_sound["fireteam_generic"]["fireteams_unavailable_already_active"] = "print:There\'s already a fireteam with us!";\nlevel.scr_sound["fireteam_generic"]["fireteams_available"] = "print:Fireteams are ready to be called!";\n\n// request\nlevel.scr_sound["fireteam_requester"]["fireteam_request_bazooka"] = "print:We need a bazooka team up here, NOW!";\nlevel.scr_sound["fireteam_requester"]["fireteam_request_flamethrower"] = "print:Flamethrowers, get up here!";\nlevel.scr_sound["fireteam_requester"]["fireteam_request_mg"] = "print:We need a machine gun on the front line!";\n\n// arrival\nlevel.scr_sound["fireteam_bazooka_primary"]["fireteam_arrival_bazooka"] = "print:Bazooka team here, ready to rock!";\nlevel.scr_sound["fireteam_flamethrower_primary"]["fireteam_arrival_flamethrower"] = "print:Flamethrower team on the line!  Cover us!";\nlevel.scr_sound["fireteam_mg_primary"]["fireteam_arrival_mg"] = "print:Machine gun team setting up now!  Move up when we suppress the enemy!";\n\n// finished\nlevel.scr_sound["fireteam_bazooka_primary"]["fireteam_finished_bazooka"] = "print:Bazooka shells expended, but we still have our rifles.";\nlevel.scr_sound["fireteam_flamethrower_primary"]["fireteam_finished_flamethrower"] = "print:Flamethrower team is out of gas, but we\'ll keep fighting with you.";\nlevel.scr_sound["fireteam_mg_primary"]["fireteam_finished_mg"] = "print:We\'re out of MG drums!";\n// -- end fireteam dialogue --\n\n')
('NEWLINE', '\n')
('COMMENT', ' --- END SETUP EXAMPLES ---')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_init')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' setup flags')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_setup')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' have we initialized all the arrays?')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_ability_given')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' did we give players the ability to call in fireteams yet?')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' are we in a place where the fireteams can enter the battle?')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_active')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' is there currently a fireteam doing its thing?')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_init')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_hud_clearing')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' are we clearing the fireteam hud element?\t')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_setup_hud')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('COMMENT', ' default to 0 to eliminate script asserts')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteams_init_func')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', "Scripter needs to set up the level's fireteam_init_func.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('LBRACKET', '[')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteams_init_func')
('RBRACKET', ']')
('RBRACKET', ']')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' hide the destroyed states')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_hide_destroyed_states')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' populate level.fireteams with our control arrays')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_populate_leveldotfireteams')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_setup')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_populate_leveldotfireteams')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteams')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_bazooka')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteams')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_flamethrower')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteams')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_mg')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_hide_destroyed_states')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'prefixes')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_bazooka')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'foyer')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'geoPrefixes')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' TODO array_add more here as we update the script')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'prefixes')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'prefix')
('ASSIGNMENT', '=')
('IDENTIFIER', 'prefixes')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'fullname')
('ASSIGNMENT', '=')
('IDENTIFIER', 'prefix')
('PLUS', '+')
('QUOTE', '"')
('STRING', '_destroyed')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'destruction')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('IDENTIFIER', 'fullname')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'destruction')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'destruction')
('DOT', '.')
('IDENTIFIER', 'size')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('COMMA', ',')
('QUOTE', '"')
('STRING', "Couldn't find any destruction to hide with targetname of '")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'fullname')
('PLUS', '+')
('QUOTE', '"')
('STRING', "'.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' each destruction group can have both models and sbmodels')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'k')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'destruction')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'destruction')
('LBRACKET', '[')
('IDENTIFIER', 'k')
('RBRACKET', ']')
('IDENTIFIER', 'Hide')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_give_ability_allplayers')
('LPAREN', '(')
('IDENTIFIER', 'setAvailable')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'fireteams_give_ability')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_ability_given')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'setAvailable')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setAvailable')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'setAvailable')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_set_available')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' kick off the callbacks')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteams_onPlayerConnect')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = a player')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_give_ability')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'GiveWeapon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rocket_barrage')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetActionSlot')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteams_action_slot')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'weapon')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'rocket_barrage')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteams_catch_input')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' players can now call in fireteams')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_set_available')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteam_dialogue')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' players can no longer call in fireteams')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_set_unavailable')
('LPAREN', '(')
('IDENTIFIER', 'sayDialogue')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_clear')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'sayDialogue')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'sayDialogue')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'sayDialogue')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteam_dialogue')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_unavailable')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_firsthint')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'Press Right D-Pad to call in a fireteam.')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' TODO localize')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud_fade_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'foundOne')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'is_calling_fireteam')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'is_calling_fireteam')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'foundOne')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'foundOne')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud_fade_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = a player')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_catch_input')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disconnect')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' wait for player to switch to the item')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'GetCurrentWeapon')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'rocket_barrage')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', "No current battle defined, so we can't call in a fireteam.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' init self.is_calling_fireteam if necessary')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'is_calling_fireteam')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'is_calling_fireteam')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " if we're not already in the middle of calling in a fireteam...")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'is_calling_fireteam')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_setup')
('QUOTE', '"')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'fireteams need to be set up first.')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " if fireteams aren't currently available, we can't call it in")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'sayDialogue')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' how much time has elapsed since we last denied service?')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_dialogue_last_deny')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_dialogue_last_deny')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetTime')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' if too little time has elapsed...')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'GetTime')
('LPAREN', '(')
('RPAREN', ')')
('SUBTRACT', '-')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_dialogue_last_deny')
('LESS_THAN_OR_EQUAL_TO', '<')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_dialogue_deny_wait')
('MULTIPLY', '*')
('IDENTIFIER', '1000')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' TODO maybe pulse the fireteam icon or something?')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', ' otherwise...')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' is it because a fireteam is doing its thing at the moment?')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_active')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteam_dialogue')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_unavailable_already_active')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', ' or some other reason?')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteam_dialogue')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_unavailable_reminder')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait for weapon switch OR for fireteams to become available again before continuing')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'GetCurrentWeapon')
('LPAREN', '(')
('RPAREN', ')')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'rocket_barrage')
('QUOTE', '"')
('LOGICAL_AND', '&&')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', " otherwise we're ok to call in a fireteam")
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'is_calling_fireteam')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'GetCurrentWeapon')
('LPAREN', '(')
('RPAREN', ')')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'rocket_barrage')
('QUOTE', '"')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteams')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " make sure we're still legit in case this isn't the first iteration of the loop")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'GetCurrentWeapon')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_NOT', '!')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'rocket_barrage')
('QUOTE', '"')
('LOGICAL_OR', '||')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteamControlArray')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteams')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' set up the "timesUsed" element of the control array, if necessary')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'timesUsed')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'timesUsed')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " skip this fireteam if we've used them more than we're allowed to")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'timesUsed')
('QUOTE', '"')
('RBRACKET', ']')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'maxUses')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO localize')
('NEWLINE', '\n')
('IDENTIFIER', 'printstring')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'Press Fire to call in the ')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'displayname')
('QUOTE', '"')
('RBRACKET', ']')
('PLUS', '+')
('QUOTE', '"')
('STRING', ' team, press Use to select a different one.')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_hud_print')
('LPAREN', '(')
('IDENTIFIER', 'printstring')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'input')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait for input: player can press one of two buttons here')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'GetCurrentWeapon')
('LPAREN', '(')
('RPAREN', ')')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'rocket_barrage')
('QUOTE', '"')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AttackButtonPressed')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'input')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'attack')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait for button to be unpressed before continuing')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AttackButtonPressed')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', ' HACK this needs to be keybinding- and platform-safe')
('NEWLINE', '\n')
('COMMENT', 'else if( self ButtonPressed( level.fireteams_dpad_button ) )')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'UseButtonPressed')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'input')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'switch')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'UseButtonPressed')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteams_hud_clear')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' weapon can switch here (out of ammo, player presses weapon swap button, etc),')
('NEWLINE', '\n')
('COMMENT', "  so make sure that input is defined and that we're still allowed to call in a team")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'input')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'input')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'attack')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'fireteams_call_in_team')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' wait for player to be switched off of weapon, etc., before we wait for feedback again')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_input_pause_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', "wait( 0.05 );  // shouldn't need this but might as well be safe")
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'is_calling_fireteam')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = a player')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_call_in_team')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_requester')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_set_unavailable')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_active')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'timesUsed')
('QUOTE', '"')
('RBRACKET', ']')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('LBRACKET', '[')
('LBRACKET', '[')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'masterControlFunc')
('QUOTE', '"')
('RBRACKET', ']')
('RBRACKET', ']')
('RBRACKET', ']')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_setup_hud')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('DOT', '.')
('IDENTIFIER', 'alignX')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('DOT', '.')
('IDENTIFIER', 'fontScale')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '25')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('DOT', '.')
('IDENTIFIER', 'x')
('ASSIGNMENT', '=')
('IDENTIFIER', '90')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('DOT', '.')
('IDENTIFIER', 'y')
('ASSIGNMENT', '=')
('IDENTIFIER', '200')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewHudElem')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('DOT', '.')
('IDENTIFIER', 'alignX')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('DOT', '.')
('IDENTIFIER', 'fontScale')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('DOT', '.')
('IDENTIFIER', 'x')
('ASSIGNMENT', '=')
('IDENTIFIER', '210')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hint_hud')
('DOT', '.')
('IDENTIFIER', 'y')
('ASSIGNMENT', '=')
('IDENTIFIER', '200')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_hud_print')
('LPAREN', '(')
('IDENTIFIER', 'text')
('COMMA', ',')
('IDENTIFIER', 'method')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_hud_clearing')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' TODO maybe waittillframeend?')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('IDENTIFIER', 'setText')
('LPAREN', '(')
('IDENTIFIER', 'text')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud_fade_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_hud_clear')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_set')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_hud_clearing')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud_fade_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_hud_fade_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_clear')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_hud_clearing')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' handles specific behavior for when a bazooka fireteam is called in')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_bazooka')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " HACK? we've added some values to our working copy of the control array,")
('NEWLINE', '\n')
('COMMENT', '  so now we need to copy that over into the level variable')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_bazooka')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' same for the copies in this array')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_populate_leveldotfireteams')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " TODO figure out which entrance we're using!  for now default to 0")
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteam_preshoot')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_bazooka')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guys')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_secondary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guys')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_bazooka_primary')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_secondary')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_bazooka_secondary')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'SetCanDamage')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' collect aimSpots')
('NEWLINE', '\n')
('IDENTIFIER', 'aimSpots')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_bazooka')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'aimSpots')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TEMP remove after testing\t')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'aimSpots')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'draw_line_until_notify')
('LPAREN', '(')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'aimSpots')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '255')
('COMMA', ',')
('IDENTIFIER', '255')
('COMMA', ',')
('IDENTIFIER', 'level')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'fireteam_done_firing')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'explosionRadius')
('ASSIGNMENT', '=')
('IDENTIFIER', '215')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO allow for multiple sets of aimSpots per level.current_battle')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'aimSpots')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' guys reload bazooka')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('IDENTIFIER', 'fireteam_bazooka_reload')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'aimSpot')
('ASSIGNMENT', '=')
('IDENTIFIER', 'aimSpots')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'AllowedStances')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stand')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'ignoreall')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'SetEntityTarget')
('LPAREN', '(')
('IDENTIFIER', 'aimSpot')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'waittillmatch')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireAnim')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'fire')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Fired off a shot')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO wait for damage')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' do damage to the spot and kill the guys in the area')
('NEWLINE', '\n')
('COMMENT', ' TODO possibly break this out into a separate function -')
('NEWLINE', '\n')
('COMMENT', '   see if other fireteams need the functionality')
('NEWLINE', '\n')
('IDENTIFIER', 'prefix')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_bazooka')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'geoPrefixes')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'geoIntactArray')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('IDENTIFIER', 'prefix')
('PLUS', '+')
('QUOTE', '"')
('STRING', '_intact')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'geoDestroyedArray')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('IDENTIFIER', 'prefix')
('PLUS', '+')
('QUOTE', '"')
('STRING', '_destroyed')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO play a particle')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' kill the enemies in the area')
('NEWLINE', '\n')
('IDENTIFIER', 'enemies')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetAIArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'axis')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'k')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'enemies')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'enemy')
('ASSIGNMENT', '=')
('IDENTIFIER', 'enemies')
('LBRACKET', '[')
('IDENTIFIER', 'k')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'Distance')
('LPAREN', '(')
('IDENTIFIER', 'aimSpot')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'enemy')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<=')
('IDENTIFIER', 'explosionRadius')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'enemy')
('IDENTIFIER', 'DoDamage')
('LPAREN', '(')
('IDENTIFIER', 'enemy')
('DOT', '.')
('IDENTIFIER', 'health')
('PLUS', '+')
('IDENTIFIER', '50')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' delete the intact geo')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'k')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'geoIntactArray')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'geo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'geoIntactArray')
('LBRACKET', '[')
('IDENTIFIER', 'k')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' TODO perhaps connectpaths on sbmodels\t\t\t')
('NEWLINE', '\n')
('IDENTIFIER', 'geo')
('IDENTIFIER', 'Delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' show the destroyed geo')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'k')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'geoDestroyedArray')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'geo')
('ASSIGNMENT', '=')
('IDENTIFIER', 'geoDestroyedArray')
('LBRACKET', '[')
('IDENTIFIER', 'k')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' TODO perhaps disconnectpaths on sbmodels\t\t\t')
('NEWLINE', '\n')
('IDENTIFIER', 'geo')
('IDENTIFIER', 'Show')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'ClearEntityTarget')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'AllowedStances')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " if it's not the last spot to shoot at...")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('LPAREN', '(')
('IDENTIFIER', 'aimSpots')
('DOT', '.')
('IDENTIFIER', 'size')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '2')
('COMMA', ',')
('IDENTIFIER', '5')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' give him some time after shooting')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' switch weapon')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'gun_switchto')
('LPAREN', '(')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'secondaryweapon')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait a few seconds')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('IDENTIFIER', 'fireteam_postshoot')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_bazooka')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO put in anims when we get them')
('NEWLINE', '\n')
('COMMENT', ' self = the fireteam AI array')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_bazooka_reload')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'anime')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'bazooka_reload')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'anim_single')
('LPAREN', '(')
('IDENTIFIER', 'self')
('COMMA', ',')
('IDENTIFIER', 'anime')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('IDENTIFIER', 'anime')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' handles specific behavior for when a flamethrower fireteam is called in')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_flamethrower')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " HACK? we've added some values to our working copy of the control array,")
('NEWLINE', '\n')
('COMMENT', '  so now we need to copy that over into the level variable')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_flamethrower')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' same for the copies in this array')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_populate_leveldotfireteams')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " TODO figure out which entrance we're using!  for now default to 1")
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteam_preshoot')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_flamethrower')
('COMMA', ',')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guys')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_secondary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guys')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' we want these guys to do a couple firing sets')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteam_runto_nodes')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_flamethrower')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' get the "sets" of aimSpots for this entrance index.  this tells us how many stops the flamethrower team will make')
('NEWLINE', '\n')
('IDENTIFIER', 'aimSpotSets')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_flamethrower')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'aimSpots')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' OPTIONAL - get the killspawners for this entrance index')
('NEWLINE', '\n')
('IDENTIFIER', 'killspawners')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_flamethrower')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'killspawners')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' OPTIONAL - get the killzones for the entrance index')
('NEWLINE', '\n')
('IDENTIFIER', 'killzones')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_flamethrower')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'killzones')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'killspawners')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'aimSpotSets')
('DOT', '.')
('IDENTIFIER', 'size')
('EQUALS_TO', '==')
('IDENTIFIER', 'killspawners')
('DOT', '.')
('IDENTIFIER', 'size')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'The size of the aimSpotSets and killspawners arrays should match!')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'killzones')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'aimSpotSets')
('DOT', '.')
('IDENTIFIER', 'size')
('EQUALS_TO', '==')
('IDENTIFIER', 'killzones')
('DOT', '.')
('IDENTIFIER', 'size')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'The size of the aimSpotSets and killzones arrays should match!')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'aimSpotSets')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_reached_nodes')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'killspawners')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'killspawners')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' turn off the killspawner')
('NEWLINE', '\n')
('IDENTIFIER', 'killspawners')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'trigger')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " find the first spot from the control array, and get the second one from the first one's target")
('NEWLINE', '\n')
('IDENTIFIER', 'aimSpots')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'aimSpotSets')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'aimSpots')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getent_safe')
('LPAREN', '(')
('IDENTIFIER', 'aimSpots')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO maybe do a flamethrower team setup anim before shooting')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' set up the flamethrower guy to shoot')
('NEWLINE', '\n')
('IDENTIFIER', 'og_shootTime_min')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootTime_min')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'og_shootTime_max')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootTime_max')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootTime_min')
('ASSIGNMENT', '=')
('IDENTIFIER', '10000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootTime_max')
('ASSIGNMENT', '=')
('IDENTIFIER', '15000')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'og_DelayTime_min')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootDelay_min')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'og_DelayTime_max')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootDelay_max')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootDelay_min')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootDelay_max')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " derive spots close to the shooter so he's never blocked by cover")
('NEWLINE', '\n')
('COMMENT', '  the aimSpot origins in the map are, in this case, for visual convenience')
('NEWLINE', '\n')
('IDENTIFIER', 'aimOrigins_close')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'k')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'aimSpots')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'eyeOrigin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'GetEye')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'forward')
('ASSIGNMENT', '=')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'VectorToAngles')
('LPAREN', '(')
('IDENTIFIER', 'aimSpots')
('LBRACKET', '[')
('IDENTIFIER', 'k')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('SUBTRACT', '-')
('IDENTIFIER', 'eyeOrigin')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'aimOrigins_close')
('LBRACKET', '[')
('IDENTIFIER', 'k')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'eyeOrigin')
('PLUS', '+')
('IDENTIFIER', 'vectorScale')
('LPAREN', '(')
('IDENTIFIER', 'forward')
('COMMA', ',')
('IDENTIFIER', '64')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TEMP remove after testing\t')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'k')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'aimOrigins_close')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'eyeOrigin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'GetEye')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'draw_line_until_notify')
('LPAREN', '(')
('IDENTIFIER', 'eyeOrigin')
('COMMA', ',')
('IDENTIFIER', 'aimOrigins_close')
('LBRACKET', '[')
('IDENTIFIER', 'k')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '255')
('COMMA', ',')
('IDENTIFIER', '255')
('COMMA', ',')
('IDENTIFIER', 'level')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'fireteam_runto_nextnode')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' spawn the target origin that will do the actual moving')
('NEWLINE', '\n')
('IDENTIFIER', 'org')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_origin')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'aimOrigins_close')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'ignoreall')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_secondary')
('DOT', '.')
('IDENTIFIER', 'ignoreall')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'SetCanDamage')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'SetEntityTarget')
('LPAREN', '(')
('IDENTIFIER', 'org')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flameTimer')
('ASSIGNMENT', '=')
('IDENTIFIER', '10')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flameStartTime')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetTime')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flameSweepTime')
('ASSIGNMENT', '=')
('IDENTIFIER', '2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' move the target origin around')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'GetTime')
('LPAREN', '(')
('RPAREN', ')')
('SUBTRACT', '-')
('IDENTIFIER', 'flameStartTime')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('LPAREN', '(')
('IDENTIFIER', 'flameTimer')
('MULTIPLY', '*')
('IDENTIFIER', '1000')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'k')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'aimOrigins_close')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'org')
('IDENTIFIER', 'MoveTo')
('LPAREN', '(')
('IDENTIFIER', 'aimOrigins_close')
('LBRACKET', '[')
('IDENTIFIER', 'k')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'flameSweepTime')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'org')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'movedone')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'killzones')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'killzones')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' kill guys off')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'kill_axis_in_trigger')
('LPAREN', '(')
('IDENTIFIER', 'killzones')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' clean up target and spawned origin')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'ClearEntityTarget')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'org')
('IDENTIFIER', 'Delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootTime_min')
('ASSIGNMENT', '=')
('IDENTIFIER', 'og_shootTime_min')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootTime_max')
('ASSIGNMENT', '=')
('IDENTIFIER', 'og_shootTime_max')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootDelay_min')
('ASSIGNMENT', '=')
('IDENTIFIER', 'og_DelayTime_min')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'a')
('DOT', '.')
('IDENTIFIER', 'flamethrowerShootDelay_max')
('ASSIGNMENT', '=')
('IDENTIFIER', 'og_DelayTime_max')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' send them to the next goalnodes')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_runto_nextnode')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' flamer switch weapons')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'gun_switchto')
('LPAREN', '(')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'secondaryweapon')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('IDENTIFIER', 'fireteam_postshoot')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_flamethrower')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = level')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_flamethrower_pickentrance')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'switch')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'foyer')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'foyer_midpoint')
('ASSIGNMENT', '=')
('IDENTIFIER', '1140')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'get_players_avg_origin')
('LPAREN', '(')
('RPAREN', ')')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('GREATER_THAN', '>')
('IDENTIFIER', '1140')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' come in from the right side')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' come in from the left side')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'default')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTMSG')
('LPAREN', '(')
('QUOTE', '"')
('STRING', "current_battle string '")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('PLUS', '+')
('QUOTE', '"')
('STRING', "' not recognized.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' handles specific behavior for when an MG fireteam is called in')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_mg')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " HACK? we've added some values to our working copy of the control array,")
('NEWLINE', '\n')
('COMMENT', '  so now we need to copy that over into the level variable')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_mg')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' same for the copies in this array')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_populate_leveldotfireteams')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " TODO figure out which entrance we're using!  for now default to 0")
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteam_preshoot')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_mg')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guys')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_secondary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guys')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' collect aimSpots')
('NEWLINE', '\n')
('IDENTIFIER', 'aimSpots')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_mg')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'aimSpots')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TEMP remove after testing\t')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'aimSpots')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'draw_line_until_notify')
('LPAREN', '(')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'aimSpots')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '255')
('COMMA', ',')
('IDENTIFIER', '255')
('COMMA', ',')
('IDENTIFIER', 'level')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'fireteam_done_firing')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO set up and fire the MG!')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'ignoreall')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'SetCanDamage')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TEMP stuff here for now')
('NEWLINE', '\n')
('IDENTIFIER', 'iprintlnbold')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'firing mg')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '15')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy_primary')
('IDENTIFIER', 'gun_switchto')
('LPAREN', '(')
('IDENTIFIER', 'guy_primary')
('DOT', '.')
('IDENTIFIER', 'secondaryweapon')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('IDENTIFIER', 'fireteam_postshoot')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_mg')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' handles generic pre-shooting behavior for fireteams')
('NEWLINE', '\n')
('COMMENT', ' runToNodes = if true, this will tell guys to run to nodes for you; disable for custom behavior')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_preshoot')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('COMMA', ',')
('IDENTIFIER', 'runToNodes')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_starting')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'runToNodes')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'runToNodes')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " call 'em in")
('NEWLINE', '\n')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteam_request_dialogue')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_request_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_request_wait_min')
('COMMA', ',')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_request_wait_max')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' optionally, figure out which entrance index to use')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'pickEntranceFunc')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('LBRACKET', '[')
('LBRACKET', '[')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'pickEntranceFunc')
('QUOTE', '"')
('RBRACKET', ']')
('RBRACKET', ']')
('RBRACKET', ']')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' spawn, setup, warp the guys')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteam_spawn_ais')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('IDENTIFIER', 'fireteam_setup_ais')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'guys fireteam_warp_ais( fireteamControlArray );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' open the door')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('IDENTIFIER', 'fireteam_entrance_action')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' entrance dialogue')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteam_dialogue')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'entrance')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'runToNodes')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' guys run to node')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('IDENTIFIER', 'fireteam_runto_nodes')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'guys')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' handles the fireteam "request" when players activate it')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_request_dialogue')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_requester')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'teamname')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'teamname')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_requester')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anime')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_request_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'teamname')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO echo this back, relay style - I bet we can get away with just playing the sound farther away')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' get the non-hero friendly closest to the player')
('NEWLINE', '\n')
('COMMENT', ' TODO maybe we always want the sarge to do the dialogue?')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'friends')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' no heroes, since they have unique voices')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('EQUALS_TO', '==')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sarge')
('LOGICAL_OR', '||')
('IDENTIFIER', 'guy')
('EQUALS_TO', '==')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hero1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'is_active_ai')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' first guy becomes our test case')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'speaker')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " if the guy we're evaluating is closer...")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'Distance')
('LPAREN', '(')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'Distance')
('LPAREN', '(')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'speaker')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' we have a new winner')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " maybe we only have heroes in the squad?  this is no bueno but we'll roll with it.")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'speaker')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sarge')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'println')
('LPAREN', '(')
('QUOTE', '"')
('STRING', "BER3B: fireteam_request_dialogue(): tried to find a non-hero AI to call the fireteam in with, but couldn't.  defaulting to sarge.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('IDENTIFIER', 'say_dialogue')
('LPAREN', '(')
('IDENTIFIER', 'animname')
('COMMA', ',')
('IDENTIFIER', 'anime')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_request_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = the array of AIs who are the fireteam')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_spawn_ais')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' get warp spots and spawners')
('NEWLINE', '\n')
('IDENTIFIER', 'warpspot_primary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'warpSpots_primary')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'warpspot_secondary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'warpSpots_secondary')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawner_primary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'spawner_primary')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'spawner_secondary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'spawner_secondary')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' move the spawners to the warp spots before using them')
('NEWLINE', '\n')
('IDENTIFIER', 'spawner_primary')
('DOT', '.')
('IDENTIFIER', 'origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'warpspot_primary')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'spawner_secondary')
('DOT', '.')
('IDENTIFIER', 'origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'warpspot_secondary')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn_guy')
('LPAREN', '(')
('IDENTIFIER', 'spawner_primary')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' primary guy')
('NEWLINE', '\n')
('IDENTIFIER', 'guys')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn_guy')
('LPAREN', '(')
('IDENTIFIER', 'spawner_secondary')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' secondary guy')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'guys')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = the fireteam AI array')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_entrance_action')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' TODO more action on door opening!')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'doors')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'openDirection')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'doors')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'openDirection')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'door')
('IDENTIFIER', 'fireteam_door_open')
('LPAREN', '(')
('IDENTIFIER', 'openDirection')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = the door script_brushmodel')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_door_open')
('LPAREN', '(')
('IDENTIFIER', 'openDirection')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', " if multiple teams are using the same door, don't keep rotating it")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'fireteam_door_opened')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'fireteam_door_opened')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'ConnectPaths')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'openDirection')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'right')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'RotateYaw')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '120')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'RotateYaw')
('LPAREN', '(')
('IDENTIFIER', '120')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rotatedone')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'DisconnectPaths')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = the fireteam AI array')
('NEWLINE', '\n')
('COMMENT', ' waitForNotifies = do we wait for a notify before moving to the next node set?')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_runto_nodes')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('COMMA', ',')
('IDENTIFIER', 'waitForNotifies')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'waitForNotifies')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'waitForNotifies')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'nodePrimary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'nodes_primary')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'nodeSecondary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'current_battle')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'nodes_secondary')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_entrance_index')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' can handle a node chain, if necessary')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('IDENTIFIER', 'SetGoalNode')
('LPAREN', '(')
('IDENTIFIER', 'nodePrimary')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('IDENTIFIER', 'SetGoalNode')
('LPAREN', '(')
('IDENTIFIER', 'nodeSecondary')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'array_thread')
('LPAREN', '(')
('IDENTIFIER', 'self')
('COMMA', ',')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'fireteam_member_reached_node')
('COMMA', ',')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'numReached')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'numReached')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_member_reached_goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'numReached')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_reached_nodes')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' if there are more nodes in the chain...')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'nodePrimary')
('DOT', '.')
('IDENTIFIER', 'target')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'nodeSecondary')
('DOT', '.')
('IDENTIFIER', 'target')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'nodePrimary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnode_safe')
('LPAREN', '(')
('IDENTIFIER', 'nodePrimary')
('DOT', '.')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'nodeSecondary')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getnode_safe')
('LPAREN', '(')
('IDENTIFIER', 'nodeSecondary')
('DOT', '.')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'waitForNotifies')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_runto_nextnode')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = an AI')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_member_reached_node')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_member_reached_goal')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' special behavior for bazooka guys when they reach their nodes')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'teamname')
('QUOTE', '"')
('RBRACKET', ']')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'bazooka')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowedStances')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = the array of AIs who are the fireteam')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_setup_ais')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'fireteam_role')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'primary')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'fireteam_role')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'secondary')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'og_goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', '12')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'ignoreme')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'ignoreall')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'og_grenadeawareness')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'grenadeawareness')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'grenadeawareness')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('IDENTIFIER', 'PushPlayer')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'magic_bullet_shield')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' handles generic post-shooting behavior for fireteams')
('NEWLINE', '\n')
('COMMENT', ' self = the fireteam AI array')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_postshoot')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_done_firing')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteam_dialogue')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'finished')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' when done, reset guys')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'fireteam_reset_ais')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_finished')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteams_cooldown_timer')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self should be the level')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_cooldown_timer')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' set as no longer active')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_clear')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteam_active')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_dialogue')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_unavailable')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' wait for the cooldown timer and reset the fireteams as available')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_cooldown_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_set_available')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' sets these guys back to be normal friendlies')
('NEWLINE', '\n')
('COMMENT', ' self = the array of AIs who are the fireteam')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_reset_ais')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'is_active_ai')
('LPAREN', '(')
('IDENTIFIER', 'guy')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'goalradius')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'og_goalradius')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'ignoreme')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'ignoreall')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'grenadeawareness')
('ASSIGNMENT', '=')
('IDENTIFIER', 'guy')
('DOT', '.')
('IDENTIFIER', 'og_grenadeawareness')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('IDENTIFIER', 'PushPlayer')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('IDENTIFIER', 'SetCanDamage')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('IDENTIFIER', 'AllowedStances')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stand')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'prone')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_reset_ais_customfunc')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('LBRACKET', '[')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'fireteam_reset_ais_customfunc')
('RBRACKET', ']')
('RBRACKET', ']')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' TODO maybe add some default node-seeking functionality?')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " thread this so players don't experience a long period of time between")
('NEWLINE', '\n')
('COMMENT', '  fireteam action and the start of the cooldown period')
('NEWLINE', '\n')
('IDENTIFIER', 'guy')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteam_reset_ais_delayed_danger')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' gives a fireteam member a fighting chance to get some cover after doing their fireteam duties')
('NEWLINE', '\n')
('COMMENT', ' self = an AI')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_reset_ais_delayed_danger')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill_notify_or_timeout')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'goal')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '10')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stop magic bullet shield')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = the fireteam AI array')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteam_dialogue')
('LPAREN', '(')
('IDENTIFIER', 'dialogueType')
('COMMA', ',')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anime')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'fireteamControlArray')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'teamname')
('ASSIGNMENT', '=')
('IDENTIFIER', 'fireteamControlArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'teamname')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'teamname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'generic')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'switch')
('LPAREN', '(')
('IDENTIFIER', 'dialogueType')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'entrance')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'teamname')
('PLUS', '+')
('QUOTE', '"')
('STRING', '_primary')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anime')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_arrival_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'teamname')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'finished')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'teamname')
('PLUS', '+')
('QUOTE', '"')
('STRING', '_primary')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anime')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_finished_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'teamname')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sarge')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_generic')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anime')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteams_available')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'fireteams_unavailable')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sarge')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_generic')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anime')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteams_unavailable')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'fireteams_unavailable_reminder')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sarge')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_generic')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anime')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteams_unavailable_reminder')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'case')
('QUOTE', '"')
('STRING', 'fireteams_unavailable_already_active')
('QUOTE', '"')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'sarge')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteam_generic')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anime')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fireteams_unavailable_already_active')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'default')
('SINGLE_COLON', ':')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTMSG')
('LPAREN', '(')
('QUOTE', '"')
('STRING', "Can't recognize fireteam dialogue type '")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'dialogueType')
('PLUS', '+')
('QUOTE', '"')
('STRING', "'.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'speaker')
('IDENTIFIER', 'say_dialogue')
('LPAREN', '(')
('IDENTIFIER', 'animname')
('COMMA', ',')
('IDENTIFIER', 'anime')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' --- COOP FUNCTIONS ---')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_onPlayerConnect')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' initial server connection')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'connecting')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'player')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'fireteams_onPlayerSpawned')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' self = a player connected to the server')
('NEWLINE', '\n')
('IDENTIFIER', 'fireteams_onPlayerSpawned')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' need to loop because potentially this can happen more than once per player, since')
('NEWLINE', '\n')
('COMMENT', "  last stand just respawns the downed player when they're rezzed.")
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' waittill the player spawns')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawned_player')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " set up fireteam control if we've hit that part of the level")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'flag')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fireteams_ability_given')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'fireteams_give_ability')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', ' --- END COOP FUNCTIONS ---')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' --- UTIL FUNCTIONS ---')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' does GetEnt, error checks the result, and if bad, gives the scripter a useable error message')
('NEWLINE', '\n')
('COMMENT', ' returns the result of the GetEnt call')
('NEWLINE', '\n')
('COMMENT', ' debugName = an arbitrary string that the scripter can use to ID his issue')
('NEWLINE', '\n')
('IDENTIFIER', 'getent_safe')
('LPAREN', '(')
('IDENTIFIER', 'value')
('COMMA', ',')
('IDENTIFIER', 'key')
('COMMA', ',')
('IDENTIFIER', 'debugName')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ent')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEnt')
('LPAREN', '(')
('IDENTIFIER', 'value')
('COMMA', ',')
('IDENTIFIER', 'key')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'debugName')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'debugString')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', "Couldn't GetEnt for: ")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'debugName')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'debugString')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', "Couldn't GetEnt with KVP ")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'key')
('PLUS', '+')
('QUOTE', '"')
('STRING', ' / ')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'value')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'ent')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'ent')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTMSG')
('LPAREN', '(')
('IDENTIFIER', 'debugString')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' same as above, but for GetNode')
('NEWLINE', '\n')
('IDENTIFIER', 'getnode_safe')
('LPAREN', '(')
('IDENTIFIER', 'value')
('COMMA', ',')
('IDENTIFIER', 'key')
('COMMA', ',')
('IDENTIFIER', 'debugName')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'node')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetNode')
('LPAREN', '(')
('IDENTIFIER', 'value')
('COMMA', ',')
('IDENTIFIER', 'key')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'debugName')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'debugString')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', "Couldn't GetNode for: ")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'debugName')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'debugString')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', "Couldn't GetNode with KVP ")
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'key')
('PLUS', '+')
('QUOTE', '"')
('STRING', ' / ')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'value')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'node')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'node')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTMSG')
('LPAREN', '(')
('IDENTIFIER', 'debugString')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' spawns a guy')
('NEWLINE', '\n')
('COMMENT', ' spawner = the spawner to spawn a guy from')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_guy')
('LPAREN', '(')
('IDENTIFIER', 'spawner')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawnedGuy')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawner')
('IDENTIFIER', 'StalingradSpawn')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_failed')
('LPAREN', '(')
('IDENTIFIER', 'spawnedGuy')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERT')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'spawnedGuy')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'spawnedGuy')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' plays dialogue from a specific AI')
('NEWLINE', '\n')
('COMMENT', ' self = the AI to speak')
('NEWLINE', '\n')
('IDENTIFIER', 'say_dialogue')
('LPAREN', '(')
('IDENTIFIER', 'animname')
('COMMA', ',')
('IDENTIFIER', 'theLine')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'is_active_ai')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', "play_dialogue(): the entity that's supposed to be speaking is not an active AI.")
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'og_animname')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'animname')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('IDENTIFIER', 'animname')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " don't want to mess up previously scripted values")
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'magic_bullet_shield')
('RPAREN', ')')
('LOGICAL_OR', '||')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'magic_bullet_shield')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'magic_bullet_shield')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'say_dialogue_bullet_shield')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'anim_single_solo')
('LPAREN', '(')
('IDENTIFIER', 'self')
('COMMA', ',')
('IDENTIFIER', 'theLine')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'animname')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'og_animname')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'say_dialogue_bullet_shield')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'say_dialogue_bullet_shield')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stop magic bullet shield')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'is_active_ai')
('LPAREN', '(')
('IDENTIFIER', 'suspect')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'suspect')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'IsSentient')
('LPAREN', '(')
('IDENTIFIER', 'suspect')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'IsAlive')
('LPAREN', '(')
('IDENTIFIER', 'suspect')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' returns the "average" of all players\' origins ')
('NEWLINE', '\n')
('IDENTIFIER', 'get_players_avg_origin')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'meanX')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'meanY')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'meanZ')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'meanX')
('PLUS_EQUALS', '+=')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'origin')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'meanY')
('PLUS_EQUALS', '+=')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'origin')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'meanZ')
('PLUS_EQUALS', '+=')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'origin')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'meanX')
('DIVIDE_EQUALS', '/=')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'meanY')
('DIVIDE_EQUALS', '/=')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'meanZ')
('DIVIDE_EQUALS', '/=')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('LPAREN', '(')
('IDENTIFIER', 'meanX')
('COMMA', ',')
('IDENTIFIER', 'meanY')
('COMMA', ',')
('IDENTIFIER', 'meanZ')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' kill axis in a given trigger')
('NEWLINE', '\n')
('IDENTIFIER', 'kill_axis_in_trigger')
('LPAREN', '(')
('IDENTIFIER', 'trig')
('COMMA', ',')
('IDENTIFIER', 'randomDelayFloat')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTEX')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'trig')
('RPAREN', ')')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'kill_axis_in_trigger(): trig is not defined')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'enemies')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetAIArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'axis')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'k')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'enemies')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'k')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'enemy')
('ASSIGNMENT', '=')
('IDENTIFIER', 'enemies')
('LBRACKET', '[')
('IDENTIFIER', 'k')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'enemy')
('IDENTIFIER', 'IsTouching')
('LPAREN', '(')
('IDENTIFIER', 'trig')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'enemy')
('IDENTIFIER', 'bloody_death')
('LPAREN', '(')
('IDENTIFIER', 'true')
('COMMA', ',')
('IDENTIFIER', 'randomDelayFloat')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Fake death')
('NEWLINE', '\n')
('COMMENT', ' self = the guy getting worked')
('NEWLINE', '\n')
('IDENTIFIER', 'bloody_death')
('LPAREN', '(')
('IDENTIFIER', 'die')
('COMMA', ',')
('IDENTIFIER', 'delay')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'is_active_ai')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'bloody_death')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'bloody_death')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'bloody_death')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'delay')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloat')
('LPAREN', '(')
('IDENTIFIER', 'delay')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'tags')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tags')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'j_hip_le')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tags')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'j_hip_ri')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tags')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'j_head')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tags')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'j_spine4')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tags')
('LBRACKET', '[')
('IDENTIFIER', '4')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'j_elbow_le')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tags')
('LBRACKET', '[')
('IDENTIFIER', '5')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'j_elbow_ri')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tags')
('LBRACKET', '[')
('IDENTIFIER', '6')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'j_clavicle_le')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'tags')
('LBRACKET', '[')
('IDENTIFIER', '7')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'j_clavicle_ri')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '3')
('PLUS', '+')
('IDENTIFIER', 'RandomInt')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'random')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomIntRange')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', 'tags')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'vec = self GetTagOrigin( tags[random] );')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'bloody_death_fx')
('LPAREN', '(')
('IDENTIFIER', 'tags')
('LBRACKET', '[')
('IDENTIFIER', 'random')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'undefined')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloat')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'die')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'DoDamage')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'health')
('PLUS', '+')
('IDENTIFIER', '50')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " self = the AI on which we're playing fx")
('NEWLINE', '\n')
('IDENTIFIER', 'bloody_death_fx')
('LPAREN', '(')
('IDENTIFIER', 'tag')
('COMMA', ',')
('IDENTIFIER', 'fxName')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'fxName')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'fxName')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'flesh_hit')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'PlayFxOnTag')
('LPAREN', '(')
('IDENTIFIER', 'fxName')
('COMMA', ',')
('IDENTIFIER', 'self')
('COMMA', ',')
('IDENTIFIER', 'tag')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('EOF', None)