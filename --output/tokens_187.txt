('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_anim')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'common_scripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_music')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#include')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'payload_zombiemode_utility')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#using_animtree(')
('QUOTE', '"')
('STRING', 'generic_human')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'main')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_shaders')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_models')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheItem')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'fraggrenade')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheItem')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'colt')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_strings')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'init_levelvars')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'init_animscripts')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'init_sounds')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'init_shellshocks')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' the initial spawners')
('NEWLINE', '\n')
('COMMENT', '\tlevel.enemy_spawns = getEntArray( "zombie_spawner_init", "targetname" ); ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'maps\\_destructible_type94truck::init(); ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'custom_introscreen')
('ASSIGNMENT', '=')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'zombie_intro_screen')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'reset_clientdvars')
('ASSIGNMENT', '=')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'onPlayerConnect_clientDvars')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_fx')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'hudelem_count')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' Call the other zombiemode scripts')
('NEWLINE', '\n')
('COMMENT', '\tmaps\\payload_zombiemode_weapons::init();')
('NEWLINE', '\n')
('COMMENT', '\tmaps\\_zombiemode_blockers::init();')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'payload_zombiemode_spawner')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'init')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\tmaps\\payload_zombiemode_powerups::init();')
('NEWLINE', '\n')
('COMMENT', '\tmaps\\payload_zombiemode_radio::init();\t')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tinit_utility();')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' register a client system...')
('NEWLINE', '\n')
('COMMENT', '\tmaps\\_utility::registerClientSys("zombify");')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' fog settings')
('NEWLINE', '\n')
('COMMENT', 'setexpfog( 150, 800, 0.803, 0.812, 0.794, 10 ); ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tlevel thread check_for_level_end(); ')
('NEWLINE', '\n')
('COMMENT', '\tlevel thread coop_player_spawn_placement();')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' zombie ai and anim inits')
('NEWLINE', '\n')
('IDENTIFIER', 'init_anims')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Sets up function pointers for animscripts to refer to')
('NEWLINE', '\n')
('COMMENT', '\tlevel.playerlaststand_func = ::player_laststand;')
('NEWLINE', '\n')
('COMMENT', '\tlevel.global_kill_func = maps\\payload_zombiemode_spawner::zombie_death; ')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'global_damage_func')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'payload_zombiemode_spawner')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'zombie_damage')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'global_damage_func_ads')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'payload_zombiemode_spawner')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'zombie_damage_ads')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\tlevel.overridePlayerKilled = ::player_killed_override;')
('NEWLINE', '\n')
('COMMENT', '\tlevel.overridePlayerDamage = ::player_damage_override;')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' used to a check in last stand for players to become zombies')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'is_zombie_level')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\tlevel.player_becomes_zombie = ::zombify_player; ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " so we dont get the uber colt when we're knocked out")
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'laststandpistol')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'colt')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_start_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'onPlayerConnect')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_dvars')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'all_players_connected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'thread zombie_difficulty_ramp_up(); ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Start the Zombie MODE!')
('NEWLINE', '\n')
('COMMENT', '\tlevel thread round_start();')
('NEWLINE', '\n')
('COMMENT', '\tlevel thread players_playing();')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'testing_spawner_bug')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('ASSIGNMENT', '=')
('IDENTIFIER', '7')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawners')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'spawners')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEnt')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'testy')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'enemy_spawns')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawners')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_shaders')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'precacheshader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'nazi_intro')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precacheshader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_intro')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hud_chalk_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hud_chalk_2')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hud_chalk_3')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hud_chalk_4')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hud_chalk_5')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'precache_models')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'precachemodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'char_ger_honorgd_zomb_behead')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'precachemodel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'char_ger_zombieeye')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheModel')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'tag_origin')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_shellshocks')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player_killed_shellshock')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'zombie_death')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheShellshock')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'player_killed_shellshock')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_strings')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheString')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_WEAPONCOSTAMMO')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheString')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_ROUND')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheString')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'SCRIPT_PLUS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheString')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_GAME_OVER')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheString')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_SURVIVED_ROUND')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'PrecacheString')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_SURVIVED_ROUNDS')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'undefined')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_UNDEFINED')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Random Treasure Chest')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_treasure_chest_950')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_RANDOM_WEAPON_950')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Barrier Pieces')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_barrier_piece_10')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_BACK_BARRIER_10')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_barrier_piece_20')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_BACK_BARRIER_20')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_barrier_piece_50')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_BACK_BARRIER_50')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_barrier_piece_100')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_BACK_BARRIER_100')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' REWARD Barrier Pieces')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_reward_barrier_piece')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_REWARD_BARRIER')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_reward_barrier_piece_10')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_REWARD_BARRIER_10')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_reward_barrier_piece_20')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_REWARD_BARRIER_20')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_reward_barrier_piece_30')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_REWARD_BARRIER_30')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_reward_barrier_piece_40')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_REWARD_BARRIER_40')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_reward_barrier_piece_50')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_REWARD_BARRIER_50')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Debris')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_100')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_100')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_200')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_200')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_250')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_250')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_500')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_500')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_750')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_750')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_1000')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_1000')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_1250')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_1250')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_1500')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_1500')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_1750')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_1750')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_debris_2000')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_CLEAR_DEBRIS_2000')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Doors')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_100')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_100')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_200')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_200')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_250')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_250')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_500')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_500')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_750')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_750')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_1000')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_1000')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_1250')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_1250')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_1500')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_1500')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_1750')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_1750')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_door_2000')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_DOOR_2000')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Areas')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_100')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_100')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_200')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_200')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_250')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_250')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_500')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_500')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_750')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_750')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_1000')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_1000')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_1250')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_1250')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_1500')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_1500')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_1750')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_1750')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_zombie_hint')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'default_buy_area_2000')
('QUOTE', '"')
('COMMA', ',')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_BUTTON_BUY_OPEN_AREA_2000')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_sounds')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'end_of_round')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'round_over')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'end_of_game')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'mx_game_over')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chalk_one_up')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'chalk')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'purchase')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'cha_ching')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'no_purchase')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'no_cha_ching')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Zombification')
('NEWLINE', '\n')
('COMMENT', ' TODO need to vary these up')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'playerzombie_usebutton_sound')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'attack_vocals')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'playerzombie_attackbutton_sound')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'attack_vocals')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'playerzombie_adsbutton_sound')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'attack_vocals')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Head gib')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_head_gib')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'zombie_head_gib')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Blockers')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rebuild_barrier_piece')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'repair_boards')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rebuild_barrier_hover')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'boards_float')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'debris_hover_loop')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'couch_loop')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'break_barrier_piece')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'break_boards')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'blocker_end_move')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'board_slam')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'barrier_rebuild_slam')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'board_slam')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Doors')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'door_slide_open')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'door_slide_open')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'door_rotate_open')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'door_slide_open')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Debris')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'debris_move')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'weap_wall')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Random Weapon Chest')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'open_chest')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'lid_open')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'music_chest')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'music_box')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'close_chest')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'lid_close')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Weapons on walls')
('NEWLINE', '\n')
('IDENTIFIER', 'add_sound')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'weapon_show')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'weap_wall')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_levelvars')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'intermission')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_total')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'no_laststandmissionfail')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Default to not zombify the player till further support')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombify_player')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'below_world_check')
('QUOTE', '"')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '1000')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Respawn in the spectators in between rounds')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spectators_respawn')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Round\t')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_use_failsafe')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_round_time')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '30')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_between_round_time')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '10')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_intermission_time')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '15')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Spawning')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_spawn_delay')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' AI ')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_health_increase')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_health_increase_percent')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_health_start')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '150')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_max_ai')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '24')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_ai_per_player')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Scoring')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_score_start')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '500')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_score_kill')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '50')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_score_damage')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_score_bonus_melee')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '80')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_score_bonus_head')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '50')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_score_bonus_neck')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '20')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_score_bonus_torso')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '10')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_score_bonus_burn')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '10')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'penalty_no_revive_percent')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '10')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'penalty_died_percent')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'penalty_downed_percent')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '5')
('COMMA', ',')
('IDENTIFIER', '100')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_flame_dmg_point_delay')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '500')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsSplitScreen')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'set_zombie_var')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_timer_offset')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '280')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' hud offsets')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_dvars')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombiemode')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'GetDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_debug')
('QUOTE', '"')
('RPAREN', ')')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'SetDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_debug')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'GetDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_cheat')
('QUOTE', '"')
('RPAREN', ')')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'SetDvar')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombie_cheat')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'init_fx')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'wood_chunk_destory')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'impacts/large_woodhit')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'edge_fog')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/smoke/fx_fog_zombie_amb')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'chest_light')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/light/fx_ray_sun_sm_short')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'eye_glow')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'misc/fx_zombie_eye_single')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_grain')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'misc/fx_zombie_grain_cloud')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'headshot')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'impacts/flesh_hit_head_fatal_lg_exit')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'headshot_nochunks')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'misc/fx_zombie_bloodsplat')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'bloodspurt')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'LoadFX')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'misc/fx_zombie_bloodspurt')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Flamethrower')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_pain_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_sm_1sec')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_sm')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_md')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_effect')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'character_fire_death_torso')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'loadfx')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'env/fire/fx_fire_player_torso')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' zombie specific anims')
('NEWLINE', '\n')
('IDENTIFIER', 'init_anims')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' deaths')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'death1')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_death_v1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'death2')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_death_v2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'death3')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_crawl_death_v1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'death4')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_crawl_death_v2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' run cycles')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'walk1')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_walk_v1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'walk2')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_walk_v2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'walk3')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_walk_v3')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'walk4')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_walk_v4')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'run1')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_walk_fast_v1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'run2')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_walk_fast_v2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'run3')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_walk_fast_v3')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'sprint1')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_sprint_v1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'sprint2')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_sprint_v2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' run cycles in prone')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'crawl1')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_crawl')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'crawl2')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_crawl_v1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'scr_anim')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'crawl3')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_crawl_sprint')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_zombie_melee')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_zombie_melee')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_attack_forward_v1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_zombie_melee')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_attack_forward_v2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_zombie_melee')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_attack_v1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_zombie_melee')
('LBRACKET', '[')
('IDENTIFIER', '3')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_attack_v2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' melee in crawl')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_zombie_melee_crawl')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_attack_crawl')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', '_zombie_melee_crawl')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_attack_crawl_lunge')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Initialize any animscript related variables')
('NEWLINE', '\n')
('IDENTIFIER', 'init_animscripts')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' Setup the animscripts, then override them (we call this just incase an AI has not yet spawned)')
('NEWLINE', '\n')
('IDENTIFIER', 'animscripts')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'init')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'firstInit')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'anim')
('DOT', '.')
('IDENTIFIER', 'idleAnimArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'stand')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anim')
('DOT', '.')
('IDENTIFIER', 'idleAnimWeights')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'stand')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anim')
('DOT', '.')
('IDENTIFIER', 'idleAnimArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'stand')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_idle_v1_delta')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anim')
('DOT', '.')
('IDENTIFIER', 'idleAnimWeights')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'stand')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', '10')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'anim')
('DOT', '.')
('IDENTIFIER', 'idleAnimArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anim')
('DOT', '.')
('IDENTIFIER', 'idleAnimWeights')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anim')
('DOT', '.')
('IDENTIFIER', 'idleAnimArray')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('MODULUS', '%')
('IDENTIFIER', 'ai_zombie_idle_crawl_delta')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'anim')
('DOT', '.')
('IDENTIFIER', 'idleAnimWeights')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'crouch')
('QUOTE', '"')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', '10')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Handles the intro screen')
('NEWLINE', '\n')
('IDENTIFIER', 'zombie_intro_screen')
('LPAREN', '(')
('IDENTIFIER', 'string1')
('COMMA', ',')
('IDENTIFIER', 'string2')
('COMMA', ',')
('IDENTIFIER', 'string3')
('COMMA', ',')
('IDENTIFIER', 'string4')
('COMMA', ',')
('IDENTIFIER', 'string5')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'all_players_connected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'TUEY Set music state to Splash Screencompass')
('NEWLINE', '\n')
('IDENTIFIER', 'setmusicstate')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'SPLASH_SCREEN')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'TUEY Set music state to WAVE_1')
('NEWLINE', '\n')
('IDENTIFIER', 'setmusicstate')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'WAVE_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players_playing')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' initialize level.players_playing')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players_playing')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '20')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'players_playing')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' NETWORK SECTION ====================================================================== //')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'watchGrenadeThrow')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disconnect')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'grenade_fire')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'grenade')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'grenade')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_laststand')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'player_is_in_laststand')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'grenade')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'onPlayerConnect')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('SEMICOLON', ';')
('SEMICOLON', ';')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'connecting')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'player')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'entity_num')
('ASSIGNMENT', '=')
('IDENTIFIER', 'player')
('IDENTIFIER', 'GetEntityNumber')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'onPlayerSpawned')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'onPlayerDisconnect')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'watchGrenadeThrow')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'score')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_score_start')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'score_total')
('ASSIGNMENT', '=')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'score')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'old_score')
('ASSIGNMENT', '=')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'score')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'is_zombie')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'initialized')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'zombification_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'onPlayerConnect_clientDvars')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetClientDvars')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'cg_deadChatWithDead')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '1')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_deadChatWithTeam')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '1')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_deadHearTeamLiving')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '1')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_deadHearAllLiving')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '1')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_everyoneHearsEveryone')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '1')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'compass')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'hud_showStance')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_thirdPerson')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_fov')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '65')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_thirdPersonAngle')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'ammoCounterHide')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'miniscoreboardhide')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'ui_hud_hardcore')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetDepthOfField')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '512')
('COMMA', ',')
('IDENTIFIER', '4000')
('COMMA', ',')
('IDENTIFIER', '4')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'onPlayerDisconnect')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disconnect')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'remove_from_spectate_list')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'onPlayerSpawned')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disconnect')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('SEMICOLON', ';')
('SEMICOLON', ';')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawned_player')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetClientDvars')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'cg_thirdPerson')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_fov')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '65')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_thirdPersonAngle')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetDepthOfField')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '512')
('COMMA', ',')
('IDENTIFIER', '4000')
('COMMA', ',')
('IDENTIFIER', '4')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'add_to_spectate_list')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isdefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'initialized')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'initialized')
('EQUALS_TO', '==')
('IDENTIFIER', 'false')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'initialized')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself maps\\payload_zombiemode_score::create_player_score_hud(); ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' set the initial score on the hud\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself maps\\payload_zombiemode_score::set_player_score_hud( true ); ')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'player_zombie_breadcrumb')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player_laststand')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', '\tself maps\\payload_zombiemode_score::player_downed_penalty();')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'intermission')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'intermission')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' Taken from _laststand since we will never go back to it...')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'downs')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_challenges_coop')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'doMissionCallback')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'playerDied')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'forever')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawnSpectator')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disconnect')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawned_spectator')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawned')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'end_respawn')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'intermission')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'no_spectator')
('RPAREN', ')')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'no_spectator')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ExitLevel')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' The check_for_level_end looks for this')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'is_zombie')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Remove all reviving abilities')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'zombified')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'revivetrigger')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'revivetrigger')
('IDENTIFIER', 'delete')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'revivetrigger')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'zombification_time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getTime')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', 'set time when player died')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'resetTimeout')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Stop shellshock and rumble')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'StopShellshock')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'StopRumble')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'damage_heavy')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'sessionstate')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'spectator')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'spectatorclient')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'remove_from_spectate_list')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'maxhealth')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'health')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'shellshocked')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'inWater')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'friendlydamage')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'hasSpawned')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'spawnTime')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getTime')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'afk')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'println')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '*************************Zombie Spectator***')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'detachAll')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setSpectatePermissions')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'spectator_thread')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'Spawn')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawned_spectator')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setSpectatePermissions')
('LPAREN', '(')
('IDENTIFIER', 'isOn')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowSpectateTeam')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'allies')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'isOn')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowSpectateTeam')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'axis')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowSpectateTeam')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'freelook')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowSpectateTeam')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'none')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spectator_thread')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disconnect')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawned_player')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsSplitScreen')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'last_alive')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'is_zombie')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'last_alive')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'share_screen')
('LPAREN', '(')
('IDENTIFIER', 'last_alive')
('COMMA', ',')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'spectator_toggle_3rd_person')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spectator_toggle_3rd_person')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disconnect')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawned_player')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'third_person')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'set_third_person')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\tself NotifyOnCommand( "toggle_3rd_person", "weapnext" );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\twhile( 1 )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tself waittill( "toggle_3rd_person" );')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\t\tif( third_person )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\tthird_person = false;')
('NEWLINE', '\n')
('COMMENT', '\t\t\tself set_third_person( false );')
('NEWLINE', '\n')
('COMMENT', '\t\t\twait( 0.5 );')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\telse')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\tthird_person = true;')
('NEWLINE', '\n')
('COMMENT', '\t\t\tself set_third_person( true );')
('NEWLINE', '\n')
('COMMENT', '\t\t\twait( 0.5 );')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'set_third_person')
('LPAREN', '(')
('IDENTIFIER', 'value')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'value')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetClientDvars')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'cg_thirdPerson')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '1')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_fov')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '40')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_thirdPersonAngle')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '354')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setDepthOfField')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '128')
('COMMA', ',')
('IDENTIFIER', '512')
('COMMA', ',')
('IDENTIFIER', '4000')
('COMMA', ',')
('IDENTIFIER', '6')
('COMMA', ',')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '8')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetClientDvars')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'cg_thirdPerson')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_fov')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '65')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_thirdPersonAngle')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setDepthOfField')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '512')
('COMMA', ',')
('IDENTIFIER', '4000')
('COMMA', ',')
('IDENTIFIER', '4')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spectators_respawn')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'between_round_over')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'spectators_respawn')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('LOGICAL_OR', '||')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'spectators_respawn')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'custom_spawnPlayer')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' Custom spawn call for when they respawn from spectator')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'custom_spawnPlayer')
('ASSIGNMENT', '=')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'spectator_respawn')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'sessionstate')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'spectator')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('LBRACKET', '[')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'spawnPlayer')
('RBRACKET', ']')
('RBRACKET', ']')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spectator_respawn')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'println')
('LPAREN', '(')
('QUOTE', '"')
('STRING', '*************************Respawn Spectator***')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_off_player')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_closest_valid_player')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_safe_breadcrumb_pos')
('LPAREN', '(')
('IDENTIFIER', 'spawn_off_player')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setSpectatePermissions')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'VectorToAngles')
('LPAREN', '(')
('IDENTIFIER', 'spawn_off_player')
('DOT', '.')
('IDENTIFIER', 'origin')
('SUBTRACT', '-')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawnpoints')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetEntArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'info_player_deathmatch')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'classname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'num')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomInt')
('LPAREN', '(')
('IDENTIFIER', 'spawnpoints')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawnpoints')
('LBRACKET', '[')
('IDENTIFIER', 'num')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawnpoints')
('LBRACKET', '[')
('IDENTIFIER', 'num')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'Spawn')
('LPAREN', '(')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsSplitScreen')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'last_alive')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'is_zombie')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'last_alive')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'share_screen')
('LPAREN', '(')
('IDENTIFIER', 'last_alive')
('COMMA', ',')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' The check_for_level_end looks for this')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'is_zombie')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ignoreme')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lsm')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', ' Notify client last stand ended.')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'RevivePlayer')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'spawned_player')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " Penalize the player when we respawn, since he 'died'")
('NEWLINE', '\n')
('COMMENT', '\tself maps\\payload_zombiemode_score::player_reduce_points( "died" );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'get_safe_breadcrumb_pos')
('LPAREN', '(')
('IDENTIFIER', 'player')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'valid_players')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'min_dist')
('ASSIGNMENT', '=')
('IDENTIFIER', '150')
('MULTIPLY', '*')
('IDENTIFIER', '150')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'is_player_valid')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'valid_players')
('LBRACKET', '[')
('IDENTIFIER', 'valid_players')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'valid_players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'count')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'q')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('IDENTIFIER', 'q')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'q')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'DistanceSquared')
('LPAREN', '(')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('LBRACKET', '[')
('IDENTIFIER', 'q')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'valid_players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'min_dist')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'count')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'count')
('EQUALS_TO', '==')
('IDENTIFIER', 'valid_players')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'player')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('LBRACKET', '[')
('IDENTIFIER', 'q')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'round_spawning')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intermission')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'intermission')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'enemy_spawns')
('DOT', '.')
('IDENTIFIER', 'size')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'ASSERTMSG')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'No spawners with targetname zombie_spawner in map.')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('DIVIDE', '/')
('PREPROCESSOR_DIRECTIVE', '#')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombies')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#/')
('NEWLINE', '\n')
('IDENTIFIER', 'count')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'CODER MOD: TOMMY K')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'zombification_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_start_time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getTime')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'max')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_max_ai')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'multiplier')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('DIVIDE', '/')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'multiplier')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'multiplier')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' After round 10, exponentially have more AI attack the player')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', '10')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'multiplier')
('MULTIPLY_EQUALS', '*=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '15')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'max')
('PLUS_EQUALS', '+=')
('IDENTIFIER', 'int')
('LPAREN', '(')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('DOT', '.')
('IDENTIFIER', 'size')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_ai_per_player')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('MULTIPLY', '*')
('IDENTIFIER', 'multiplier')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'first_round')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'max')
('ASSIGNMENT', '=')
('IDENTIFIER', 'int')
('LPAREN', '(')
('IDENTIFIER', 'max')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '3')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'max')
('ASSIGNMENT', '=')
('IDENTIFIER', 'int')
('LPAREN', '(')
('IDENTIFIER', 'max')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '4')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'max')
('ASSIGNMENT', '=')
('IDENTIFIER', 'int')
('LPAREN', '(')
('IDENTIFIER', 'max')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '6')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '5')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'max')
('ASSIGNMENT', '=')
('IDENTIFIER', 'int')
('LPAREN', '(')
('IDENTIFIER', 'max')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '8')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_total')
('ASSIGNMENT', '=')
('IDENTIFIER', 'max')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'count')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'max')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'spawn_point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'enemy_spawns')
('LBRACKET', '[')
('IDENTIFIER', 'RandomInt')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'enemy_spawns')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'get_enemy_count')
('LPAREN', '(')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', '31')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ai')
('ASSIGNMENT', '=')
('IDENTIFIER', 'spawn_zombie')
('LPAREN', '(')
('IDENTIFIER', 'spawn_point')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'ai')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_total')
('SUBTRACT', '-')
('SUBTRACT', '-')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('DIVIDE', '/')
('PREPROCESSOR_DIRECTIVE', '#')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombies')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'ai')
('SEMICOLON', ';')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#/')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ai')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'round_spawn_failsafe')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'count')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_spawn_delay')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TESTING! Only 1 Zombie for testing')
('NEWLINE', '\n')
('COMMENT', '\t\tlevel waittill( "forever" );')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'round_text')
('LPAREN', '(')
('IDENTIFIER', 'text')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'first_round')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'intro')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'intro')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('ASSIGNMENT', '=')
('IDENTIFIER', 'create_simple_hud')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'horzAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'center')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'vertAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'middle')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alignX')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'center')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alignY')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'middle')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'y')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '100')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'foreground')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'fontscale')
('ASSIGNMENT', '=')
('IDENTIFIER', '16')
('DOT', '.')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'color')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('IDENTIFIER', 'text')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'intro')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_change_color')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', 'hud.color = ( 0.8, 0, 0 );')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'color')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '423')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '004')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'intro')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_hud_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'destroy')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'round_start')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_health')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_health_start')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'first_round')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " so players get init'ed with grenades")
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'giveweapon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setweaponammoclip')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('DIVIDE', '/')
('PREPROCESSOR_DIRECTIVE', '#')
('NEWLINE', '\n')
('COMMENT', 'level thread bunker_ui(); ')
('NEWLINE', '\n')
('PREPROCESSOR_DIRECTIVE', '#/')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud1')
('ASSIGNMENT', '=')
('IDENTIFIER', 'create_chalk_hud')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud2')
('ASSIGNMENT', '=')
('IDENTIFIER', 'create_chalk_hud')
('LPAREN', '(')
('IDENTIFIER', '64')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tlevel waittill( "introscreen_done" );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'round_think')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'create_chalk_hud')
('LPAREN', '(')
('IDENTIFIER', 'x')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'x')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'x')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('ASSIGNMENT', '=')
('IDENTIFIER', 'create_simple_hud')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alignX')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alignY')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'horzAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'vertAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'color')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '423')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '004')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'x')
('ASSIGNMENT', '=')
('IDENTIFIER', 'x')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'SetShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hud_chalk_1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '64')
('COMMA', ',')
('IDENTIFIER', '64')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'hud')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'chalk_one_up')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'first_round')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'intro')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'intro')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'intro')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('ASSIGNMENT', '=')
('IDENTIFIER', 'create_simple_hud')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'alignX')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'center')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'alignY')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'horzAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'center')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'vertAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'bottom')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'fontscale')
('ASSIGNMENT', '=')
('IDENTIFIER', '16')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'color')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'x')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'y')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '265')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('IDENTIFIER', 'SetText')
('LPAREN', '(')
('LOCAL_STRING', '&')
('QUOTE', '"')
('STRING', 'ZOMBIE_ROUND')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\t\tround.color = ( 0.8, 0, 0 );')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'color')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '423')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '004')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '6')
('LOGICAL_OR', '||')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN', '>')
('IDENTIFIER', '10')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'fontscale')
('ASSIGNMENT', '=')
('IDENTIFIER', '32')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '11')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'intro')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'horzAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'center')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'x')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'y')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '200')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('EQUALS_TO', '==')
('IDENTIFIER', '11')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud2')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud2')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud2')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'play_sound_at_pos')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'chalk_one_up')
('QUOTE', '"')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('EQUALS_TO', '==')
('IDENTIFIER', '11')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud2')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud2')
('IDENTIFIER', 'destroy_hud')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN', '>')
('IDENTIFIER', '10')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'SetValue')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'intro')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'round')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intro_hud_done')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'MoveOverTime')
('LPAREN', '(')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '75')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'horzAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'left')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\t\thud.x = 0;')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('DOT', '.')
('IDENTIFIER', 'y')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'round')
('IDENTIFIER', 'destroy_hud')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN', '>')
('IDENTIFIER', '10')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN', '>')
('IDENTIFIER', '5')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'SetShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hud_chalk_')
('QUOTE', '"')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('SUBTRACT', '-')
('IDENTIFIER', '5')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', '64')
('COMMA', ',')
('IDENTIFIER', '64')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN', '>')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'hud')
('IDENTIFIER', 'SetShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'hud_chalk_')
('QUOTE', '"')
('PLUS', '+')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('COMMA', ',')
('IDENTIFIER', '64')
('COMMA', ',')
('IDENTIFIER', '64')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tReportMTU(level.round_number);\t// In network debug instrumented builds, causes network spike report to generate.')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'chalk_round_hint')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'huds')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN', '>')
('IDENTIFIER', '5')
('LOGICAL_AND', '&&')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '11')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'huds')
('DOT', '.')
('IDENTIFIER', 'size')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'chalk_hud2')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_between_round_time')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'huds')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'time')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'color')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'time')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'play_sound_at_pos')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'end_of_round')
('QUOTE', '"')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Pulse')
('NEWLINE', '\n')
('IDENTIFIER', 'fade_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'steps')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'time')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('DIVIDE', '/')
('IDENTIFIER', 'fade_time')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'q')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'q')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'steps')
('SEMICOLON', ';')
('IDENTIFIER', 'q')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'huds')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'fade_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'fade_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'huds')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'fade_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'fade_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'huds')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'time')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\t\thuds[i].color = ( 0.8, 0, 0 );')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'color')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '423')
('COMMA', ',')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '004')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'huds')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'round_think')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', 'TUEY - MOVE THIS LATER')
('NEWLINE', '\n')
('COMMENT', 'TUEY Set music state to round 1')
('NEWLINE', '\n')
('IDENTIFIER', 'setmusicstate')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'WAVE_1')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('SEMICOLON', ';')
('SEMICOLON', ';')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', '////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', 'designed by prod DT#36173')
('NEWLINE', '\n')
('IDENTIFIER', 'maxreward')
('ASSIGNMENT', '=')
('IDENTIFIER', '50')
('MULTIPLY', '*')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'maxreward')
('GREATER_THAN', '>')
('IDENTIFIER', '500')
('RPAREN', ')')
('NEWLINE', '\n')
('IDENTIFIER', 'maxreward')
('ASSIGNMENT', '=')
('IDENTIFIER', '500')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'rebuild_barrier_cap_per_round')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'maxreward')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '////////////////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_timer')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_round_time')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ai_calculate_health')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'add_later_round_spawners')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'chalk_one_up')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\t\tround_text( &"ZOMBIE_ROUND_BEGIN" );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\t\tmaps\\payload_zombiemode_powerups::powerup_round_start();')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', '\t\tarray_thread( players, maps\\payload_zombiemode_blockers::rebuild_barrier_reward_reset );')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'award_grenades_for_survivors')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'round_spawning')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'round_wait')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'first_round')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'spectators_respawn')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\t\tround_text( &"ZOMBIE_ROUND_END" );')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'chalk_round_hint')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_between_round_time')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', " here's the difficulty increase over time area")
('NEWLINE', '\n')
('IDENTIFIER', 'timer')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_spawn_delay')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'timer')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '08')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'timer')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '08')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_spawn_delay')
('QUOTE', '"')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'timer')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '95')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Increase the zombie move speed')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_move_speed')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('MULTIPLY', '*')
('IDENTIFIER', '8')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'between_round_over')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'award_grenades_for_survivors')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'is_zombie')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'HasWeapon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'GiveWeapon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetWeaponAmmoClip')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'GetFractionMaxAmmo')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetWeaponAmmoClip')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'GetFractionMaxAmmo')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetWeaponAmmoClip')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '3')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetWeaponAmmoClip')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stielhandgranate')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '4')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'ai_calculate_health')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' After round 10, get exponentially harder')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN_OR_EQUAL_TO', '>=')
('IDENTIFIER', '10')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_health')
('PLUS_EQUALS', '+=')
('IDENTIFIER', 'Int')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_health')
('MULTIPLY', '*')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_health_increase_percent')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'round_number')
('GREATER_THAN', '>')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_health')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Int')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_health')
('PLUS', '+')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_health_increase')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'put the conditions in here which should')
('NEWLINE', '\n')
('COMMENT', 'cause the failsafe to reset')
('NEWLINE', '\n')
('IDENTIFIER', 'round_spawn_failsafe')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', 'guy just died')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', 'FAILSAFE "hack shit"  DT#33203')
('NEWLINE', '\n')
('COMMENT', '////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('IDENTIFIER', 'prevorigin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'zombie_use_failsafe')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '30')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', "if i've torn a board down in the last 5 seconds, just ")
('NEWLINE', '\n')
('COMMENT', 'wait 30 again.')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'isDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'lastchunk_destroy_time')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LPAREN', '(')
('IDENTIFIER', 'getTime')
('LPAREN', '(')
('RPAREN', ')')
('SUBTRACT', '-')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'lastchunk_destroy_time')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '5000')
('RPAREN', ')')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'fell out of world')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'below_world_check')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'dodamage')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'health')
('PLUS', '+')
('IDENTIFIER', '100')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'hasnt moved 24 inches in 30 seconds?\t')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'DistanceSquared')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'prevorigin')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '576')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'dodamage')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'health')
('PLUS', '+')
('IDENTIFIER', '100')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'break')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'prevorigin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('COMMENT', '////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', 'END OF FAILSAFE "hack shit"')
('NEWLINE', '\n')
('COMMENT', '////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Waits for the time and the ai to die')
('NEWLINE', '\n')
('IDENTIFIER', 'round_wait')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', 'get_enemy_count')
('LPAREN', '(')
('RPAREN', ')')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('LOGICAL_OR', '||')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_total')
('GREATER_THAN', '>')
('IDENTIFIER', '0')
('LOGICAL_OR', '||')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'intermission')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'zombify_player()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '//\tself maps\\payload_zombiemode_score::player_died_penalty(); ')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tif( !IsDefined( level.zombie_vars["zombify_player"] ) || !level.zombie_vars["zombify_player"] )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tself thread spawnSpectator(); ')
('NEWLINE', '\n')
('COMMENT', '\t\treturn; ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tself.ignoreme = true; ')
('NEWLINE', '\n')
('COMMENT', '\tself.is_zombie = true; ')
('NEWLINE', '\n')
('COMMENT', '\tself.zombification_time = getTime(); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself.team = "axis"; ')
('NEWLINE', '\n')
('COMMENT', '\tself notify( "zombified" ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tif( IsDefined( self.revivetrigger ) )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tself.revivetrigger Delete(); ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\tself.revivetrigger = undefined; ')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\tself setMoveSpeedScale( 0.3 ); ')
('NEWLINE', '\n')
('COMMENT', '\tself reviveplayer(); ')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tself TakeAllWeapons(); ')
('NEWLINE', '\n')
('COMMENT', '\tself starttanning(); ')
('NEWLINE', '\n')
('COMMENT', '\tself GiveWeapon( "zombie_melee", 0 ); ')
('NEWLINE', '\n')
('COMMENT', '\tself SwitchToWeapon( "zombie_melee" ); ')
('NEWLINE', '\n')
('COMMENT', '\tself DisableWeaponCycling(); ')
('NEWLINE', '\n')
('COMMENT', '\tself DisableOffhandWeapons(); ')
('NEWLINE', '\n')
('COMMENT', '\tself VisionSetNaked( "zombie_turned", 1 ); ')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tmaps\\_utility::setClientSysState( "zombify", 1, self ); \t// Zombie grain goooo')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tself thread maps\\payload_zombiemode_spawner::zombie_eye_glow(); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\t// set up the ground ref ent')
('NEWLINE', '\n')
('COMMENT', '\tself thread injured_walk(); ')
('NEWLINE', '\n')
('COMMENT', '\t// allow for zombie attacks, but they lose points?')
('NEWLINE', '\n')
('COMMENT', '\t\t\t')
('NEWLINE', '\n')
('COMMENT', '\tself thread playerzombie_player_damage(); ')
('NEWLINE', '\n')
('COMMENT', '\tself thread playerzombie_soundboard(); ')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'playerzombie_player_damage()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "death" ); ')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "disconnect" ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself thread playerzombie_infinite_health();  // manually keep regular health up')
('NEWLINE', '\n')
('COMMENT', '\tself.zombiehealth = level.zombie_health; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\t// enable PVP damage on this guy')
('NEWLINE', '\n')
('COMMENT', '\t// self EnablePvPDamage(); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\twhile( 1 )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tself waittill( "damage", amount, attacker, directionVec, point, type ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\tif( !IsDefined( attacker ) || !IsPlayer( attacker ) )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\twait( 0.05 ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\tcontinue; ')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\tself.zombiehealth -= amount; ')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\tif( self.zombiehealth <= 0 )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\t// "down" the zombie')
('NEWLINE', '\n')
('COMMENT', '\t\t\tself thread playerzombie_downed_state(); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\tself waittill( "playerzombie_downed_state_done" ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\tself.zombiehealth = level.zombie_health; ')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'playerzombie_downed_state()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "death" ); ')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "disconnect" ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tdownTime = 15; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tstartTime = GetTime(); ')
('NEWLINE', '\n')
('COMMENT', '\tendTime = startTime +( downTime * 1000 ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself thread playerzombie_downed_hud(); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself.playerzombie_soundboard_disable = true; ')
('NEWLINE', '\n')
('COMMENT', '\tself thread maps\\payload_zombiemode_spawner::zombie_eye_glow_stop(); ')
('NEWLINE', '\n')
('COMMENT', '\tself DisableWeapons(); ')
('NEWLINE', '\n')
('COMMENT', '\tself AllowStand( false ); ')
('NEWLINE', '\n')
('COMMENT', '\tself AllowCrouch( false ); ')
('NEWLINE', '\n')
('COMMENT', '\tself AllowProne( true ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\twhile( GetTime() < endTime )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\twait( 0.05 ); ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself.playerzombie_soundboard_disable = false; ')
('NEWLINE', '\n')
('COMMENT', '\tself thread maps\\payload_zombiemode_spawner::zombie_eye_glow(); ')
('NEWLINE', '\n')
('COMMENT', '\tself EnableWeapons(); ')
('NEWLINE', '\n')
('COMMENT', '\tself AllowStand( true ); ')
('NEWLINE', '\n')
('COMMENT', '\tself AllowCrouch( false ); ')
('NEWLINE', '\n')
('COMMENT', '\tself AllowProne( false ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself notify( "playerzombie_downed_state_done" ); ')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'playerzombie_downed_hud()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "death" ); ')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "disconnect" ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\ttext = NewClientHudElem( self ); ')
('NEWLINE', '\n')
('COMMENT', '\ttext.alignX = "center"; ')
('NEWLINE', '\n')
('COMMENT', '\ttext.alignY = "middle"; ')
('NEWLINE', '\n')
('COMMENT', '\ttext.horzAlign = "center"; ')
('NEWLINE', '\n')
('COMMENT', '\ttext.vertAlign = "bottom"; ')
('NEWLINE', '\n')
('COMMENT', '\ttext.foreground = true; ')
('NEWLINE', '\n')
('COMMENT', '\ttext.font = "default"; ')
('NEWLINE', '\n')
('COMMENT', '\ttext.fontScale = 1.8; ')
('NEWLINE', '\n')
('COMMENT', '\ttext.alpha = 0; ')
('NEWLINE', '\n')
('COMMENT', '\ttext.color = ( 1.0, 1.0, 1.0 ); ')
('NEWLINE', '\n')
('COMMENT', '\ttext SetText( &"ZOMBIE_PLAYERZOMBIE_DOWNED" ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\ttext.y = -113; \t')
('NEWLINE', '\n')
('COMMENT', '\tif( IsSplitScreen() )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\ttext.y = -137; ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\ttext FadeOverTime( 0.1 ); ')
('NEWLINE', '\n')
('COMMENT', '\ttext.alpha = 1; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself waittill( "playerzombie_downed_state_done" ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\ttext FadeOverTime( 0.1 ); ')
('NEWLINE', '\n')
('COMMENT', '\ttext.alpha = 0; ')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'playerzombie_infinite_health()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "death" ); ')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "disconnect" ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tbighealth = 100000; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\twhile( 1 )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tif( self.health < bighealth )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\tself.health = bighealth; ')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\twait( 0.1 ); ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'playerzombie_soundboard()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "death" ); ')
('NEWLINE', '\n')
('COMMENT', '\tself endon( "disconnect" ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself.playerzombie_soundboard_disable = false; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself.buttonpressed_use = false; ')
('NEWLINE', '\n')
('COMMENT', '\tself.buttonpressed_attack = false; ')
('NEWLINE', '\n')
('COMMENT', '\tself.buttonpressed_ads = false; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself.useSound_waitTime = 3 * 1000;  // milliseconds')
('NEWLINE', '\n')
('COMMENT', '\tself.useSound_nextTime = GetTime(); ')
('NEWLINE', '\n')
('COMMENT', '\tuseSound = "playerzombie_usebutton_sound"; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself.attackSound_waitTime = 3 * 1000; ')
('NEWLINE', '\n')
('COMMENT', '\tself.attackSound_nextTime = GetTime(); ')
('NEWLINE', '\n')
('COMMENT', '\tattackSound = "playerzombie_attackbutton_sound"; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tself.adsSound_waitTime = 3 * 1000; ')
('NEWLINE', '\n')
('COMMENT', '\tself.adsSound_nextTime = GetTime(); ')
('NEWLINE', '\n')
('COMMENT', '\tadsSound = "playerzombie_adsbutton_sound"; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', "\tself.inputSound_nextTime = GetTime();  // don't want to be able to do all sounds at once")
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\twhile( 1 )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tif( self.playerzombie_soundboard_disable )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\twait( 0.05 ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\tcontinue; ')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\tif( self UseButtonPressed() )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\tif( self can_do_input( "use" ) )')
('NEWLINE', '\n')
('COMMENT', '\t\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself thread playerzombie_play_sound( useSound ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself thread playerzombie_waitfor_buttonrelease( "use" ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself.useSound_nextTime = GetTime() + self.useSound_waitTime; ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\telse if( self AttackButtonPressed() )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\tif( self can_do_input( "attack" ) )')
('NEWLINE', '\n')
('COMMENT', '\t\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself thread playerzombie_play_sound( attackSound ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself thread playerzombie_waitfor_buttonrelease( "attack" ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself.attackSound_nextTime = GetTime() + self.attackSound_waitTime; ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\telse if( self AdsButtonPressed() )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\tif( self can_do_input( "ads" ) )')
('NEWLINE', '\n')
('COMMENT', '\t\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself thread playerzombie_play_sound( adsSound ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself thread playerzombie_waitfor_buttonrelease( "ads" ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tself.adsSound_nextTime = GetTime() + self.adsSound_waitTime; ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\twait( 0.05 ); ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'can_do_input( inputType )')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tif( GetTime() < self.inputSound_nextTime )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\treturn false; ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tcanDo = false; ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tswitch( inputType )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tcase "use":')
('NEWLINE', '\n')
('COMMENT', '\t\t\tif( GetTime() >= self.useSound_nextTime && !self.buttonpressed_use )')
('NEWLINE', '\n')
('COMMENT', '\t\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tcanDo = true; ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t\tbreak; ')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\tcase "attack":')
('NEWLINE', '\n')
('COMMENT', '\t\t\tif( GetTime() >= self.attackSound_nextTime && !self.buttonpressed_attack )')
('NEWLINE', '\n')
('COMMENT', '\t\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tcanDo = true; ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t\tbreak; ')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\tcase "ads":')
('NEWLINE', '\n')
('COMMENT', '\t\t\tif( GetTime() >= self.useSound_nextTime && !self.buttonpressed_ads )')
('NEWLINE', '\n')
('COMMENT', '\t\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\t\tcanDo = true; ')
('NEWLINE', '\n')
('COMMENT', '\t\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\t\tbreak; ')
('NEWLINE', '\n')
('COMMENT', '\t\t')
('NEWLINE', '\n')
('COMMENT', '\t\tdefault:')
('NEWLINE', '\n')
('COMMENT', '\t\t\tASSERTMSG( "can_do_input(): didn\'t recognize inputType of " + inputType ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t\tbreak; ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\treturn canDo; ')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'playerzombie_play_sound( alias )')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tself play_sound_on_ent( alias ); ')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'playerzombie_waitfor_buttonrelease( inputType )')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tif( inputType != "use" && inputType != "attack" && inputType != "ads" )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tASSERTMSG( "playerzombie_waitfor_buttonrelease(): inputType of " + inputType + " is not recognized." ); ')
('NEWLINE', '\n')
('COMMENT', '\t\treturn; ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tnotifyString = "waitfor_buttonrelease_" + inputType; ')
('NEWLINE', '\n')
('COMMENT', '\tself notify( notifyString ); ')
('NEWLINE', '\n')
('COMMENT', '\tself endon( notifyString ); ')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tif( inputType == "use" )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tself.buttonpressed_use = true; ')
('NEWLINE', '\n')
('COMMENT', '\t\twhile( self UseButtonPressed() )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\twait( 0.05 ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\tself.buttonpressed_use = false; ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\telse if( inputType == "attack" )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tself.buttonpressed_attack = true; ')
('NEWLINE', '\n')
('COMMENT', '\t\twhile( self AttackButtonPressed() )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\twait( 0.05 ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\tself.buttonpressed_attack = false; ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\telse if( inputType == "ads" )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tself.buttonpressed_ads = true; ')
('NEWLINE', '\n')
('COMMENT', '\t\twhile( self AdsButtonPressed() )')
('NEWLINE', '\n')
('COMMENT', '\t\t{')
('NEWLINE', '\n')
('COMMENT', '\t\t\twait( 0.05 ); ')
('NEWLINE', '\n')
('COMMENT', '\t\t}')
('NEWLINE', '\n')
('COMMENT', '\t\tself.buttonpressed_ads = false; ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player_damage_override')
('LPAREN', '(')
('IDENTIFIER', 'eInflictor')
('COMMA', ',')
('IDENTIFIER', 'eAttacker')
('COMMA', ',')
('IDENTIFIER', 'iDamage')
('COMMA', ',')
('IDENTIFIER', 'iDFlags')
('COMMA', ',')
('IDENTIFIER', 'sMeansOfDeath')
('COMMA', ',')
('IDENTIFIER', 'sWeapon')
('COMMA', ',')
('IDENTIFIER', 'vPoint')
('COMMA', ',')
('IDENTIFIER', 'vDir')
('COMMA', ',')
('IDENTIFIER', 'sHitLoc')
('COMMA', ',')
('IDENTIFIER', 'modelIndex')
('COMMA', ',')
('IDENTIFIER', 'psOffsetTime')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'iDamage')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'health')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'intermission')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'forever')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'count')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('EQUALS_TO', '==')
('IDENTIFIER', 'self')
('LOGICAL_OR', '||')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'is_zombie')
('LOGICAL_OR', '||')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_laststand')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'player_is_in_laststand')
('LPAREN', '(')
('RPAREN', ')')
('LOGICAL_OR', '||')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'sessionstate')
('EQUALS_TO', '==')
('QUOTE', '"')
('STRING', 'spectator')
('QUOTE', '"')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'count')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'count')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'intermission')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_laststand')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'PlayerLastStand')
('LPAREN', '(')
('IDENTIFIER', 'eInflictor')
('COMMA', ',')
('IDENTIFIER', 'eAttacker')
('COMMA', ',')
('IDENTIFIER', 'iDamage')
('COMMA', ',')
('IDENTIFIER', 'sMeansOfDeath')
('COMMA', ',')
('IDENTIFIER', 'sWeapon')
('COMMA', ',')
('IDENTIFIER', 'vDir')
('COMMA', ',')
('IDENTIFIER', 'sHitLoc')
('COMMA', ',')
('IDENTIFIER', 'psOffsetTime')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'player_fake_death')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '\tif( count == players.size )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tend_game();')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'end_game()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tlevel.intermission = true;')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '//\tupdate_leaderboards();')
('NEWLINE', '\n')
('COMMENT', '\t')
('NEWLINE', '\n')
('COMMENT', '\tgame_over = NewHudElem( self );')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.alignX = "center";')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.alignY = "middle";')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.horzAlign = "center";')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.vertAlign = "middle";')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.y -= 10;')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.foreground = true;')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.fontScale = 3;')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.alpha = 0;')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.color = ( 1.0, 1.0, 1.0 );')
('NEWLINE', '\n')
('COMMENT', '\tgame_over SetText( &"ZOMBIE_GAME_OVER" );')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tgame_over FadeOverTime( 1 );')
('NEWLINE', '\n')
('COMMENT', '\tgame_over.alpha = 1;')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tsurvived = NewHudElem( self );')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.alignX = "center";')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.alignY = "middle";')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.horzAlign = "center";')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.vertAlign = "middle";')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.y += 20;')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.foreground = true;')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.fontScale = 2;')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.alpha = 0;')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.color = ( 1.0, 1.0, 1.0 );')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tif( level.round_number < 2 )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tsurvived SetText( &"ZOMBIE_SURVIVED_ROUND" );')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\telse')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tsurvived SetText( &"ZOMBIE_SURVIVED_ROUNDS", level.round_number );')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tsurvived FadeOverTime( 1 );')
('NEWLINE', '\n')
('COMMENT', '\tsurvived.alpha = 1;')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\twait( 1 );')
('NEWLINE', '\n')
('COMMENT', '\tplay_sound_at_pos( "end_of_game", ( 0, 0, 0 ) );')
('NEWLINE', '\n')
('COMMENT', '\twait( 2 );')
('NEWLINE', '\n')
('COMMENT', '\tintermission();')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\twait( level.zombie_vars["zombie_intermission_time"] );')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tlevel notify( "stop_intermission" );')
('NEWLINE', '\n')
('COMMENT', '\tarray_thread( get_players(), ::player_exit_level );')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\twait( 1.5 );')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tif( is_coop() )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tExitLevel( false );')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '\telse')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\tMissionFailed();')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', "\t// Let's not exit the function")
('NEWLINE', '\n')
('COMMENT', '\twait( 666 );')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'update_leaderboards()')
('NEWLINE', '\n')
('COMMENT', '{')
('NEWLINE', '\n')
('COMMENT', '\tif( level.systemLink || IsSplitScreen() )')
('NEWLINE', '\n')
('COMMENT', '\t{')
('NEWLINE', '\n')
('COMMENT', '\t\treturn; ')
('NEWLINE', '\n')
('COMMENT', '\t}')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', '\tnazizombies_upload_highscore();\t')
('NEWLINE', '\n')
('COMMENT', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player_fake_death')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'TakeAllWeapons')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowStand')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowCrouch')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ignoreme')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'EnableInvulnerability')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'FreezeControls')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player_exit_level')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowStand')
('LPAREN', '(')
('IDENTIFIER', 'true')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowCrouch')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowProne')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'foreground')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'sort')
('ASSIGNMENT', '=')
('IDENTIFIER', '100')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player_killed_override')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' BLANK')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'forever')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'injured_walk')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ground_ref_ent')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_model')
('QUOTE', '"')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'player_speed')
('ASSIGNMENT', '=')
('IDENTIFIER', '50')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' TODO do death countdown\t')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowSprint')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowProne')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowCrouch')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowAds')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'AllowJump')
('LPAREN', '(')
('IDENTIFIER', 'false')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'PlayerSetGroundReferenceEnt')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ground_ref_ent')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'limp')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'limp')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disconnect')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'death')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', ' TODO uncomment when/if SetBlur works again')
('NEWLINE', '\n')
('COMMENT', 'self thread player_random_blur(); ')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'stumble')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'alt')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'velocity')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('IDENTIFIER', 'GetVelocity')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'player_speed')
('ASSIGNMENT', '=')
('IDENTIFIER', 'abs')
('LPAREN', '(')
('IDENTIFIER', 'velocity')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('RPAREN', ')')
('PLUS', '+')
('IDENTIFIER', 'abs')
('LPAREN', '(')
('IDENTIFIER', 'velocity')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'player_speed')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '10')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '05')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'speed_multiplier')
('ASSIGNMENT', '=')
('IDENTIFIER', 'player_speed')
('DIVIDE', '/')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'player_speed')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'p')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '3')
('COMMA', ',')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'RandomInt')
('LPAREN', '(')
('IDENTIFIER', '100')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '20')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'p')
('MULTIPLY_EQUALS', '*=')
('IDENTIFIER', '3')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'r')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('IDENTIFIER', '3')
('COMMA', ',')
('IDENTIFIER', '7')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'y')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('SUBTRACT', '-')
('IDENTIFIER', '8')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'stumble_angles')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'p')
('COMMA', ',')
('IDENTIFIER', 'y')
('COMMA', ',')
('IDENTIFIER', 'r')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'stumble_angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'vector_multiply')
('LPAREN', '(')
('IDENTIFIER', 'stumble_angles')
('COMMA', ',')
('IDENTIFIER', 'speed_multiplier')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'stumble_time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '35')
('COMMA', ',')
('DOT', '.')
('IDENTIFIER', '45')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'recover_time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'RandomFloatRange')
('LPAREN', '(')
('DOT', '.')
('IDENTIFIER', '65')
('COMMA', ',')
('DOT', '.')
('IDENTIFIER', '8')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'stumble')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'speed_multiplier')
('GREATER_THAN', '>')
('IDENTIFIER', '1')
('DOT', '.')
('IDENTIFIER', '3')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'stumble')
('PLUS', '+')
('PLUS', '+')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'stumble')
('LPAREN', '(')
('IDENTIFIER', 'stumble_angles')
('COMMA', ',')
('IDENTIFIER', 'stumble_time')
('COMMA', ',')
('IDENTIFIER', 'recover_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'recovered')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'stumble')
('LPAREN', '(')
('IDENTIFIER', 'stumble_angles')
('COMMA', ',')
('IDENTIFIER', 'stumble_time')
('COMMA', ',')
('IDENTIFIER', 'recover_time')
('COMMA', ',')
('IDENTIFIER', 'no_notify')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'stumble_angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('IDENTIFIER', 'adjust_angles_to_player')
('LPAREN', '(')
('IDENTIFIER', 'stumble_angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ground_ref_ent')
('IDENTIFIER', 'RotateTo')
('LPAREN', '(')
('IDENTIFIER', 'stumble_angles')
('COMMA', ',')
('IDENTIFIER', 'stumble_time')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', 'stumble_time')
('DIVIDE', '/')
('IDENTIFIER', '4')
('MULTIPLY', '*')
('IDENTIFIER', '3')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', 'stumble_time')
('DIVIDE', '/')
('IDENTIFIER', '4')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ground_ref_ent')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rotatedone')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'base_angles')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'RandomFloat')
('LPAREN', '(')
('IDENTIFIER', '4')
('RPAREN', ')')
('SUBTRACT', '-')
('IDENTIFIER', '4')
('COMMA', ',')
('IDENTIFIER', 'RandomFloat')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'base_angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('IDENTIFIER', 'adjust_angles_to_player')
('LPAREN', '(')
('IDENTIFIER', 'base_angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ground_ref_ent')
('IDENTIFIER', 'RotateTo')
('LPAREN', '(')
('IDENTIFIER', 'base_angles')
('COMMA', ',')
('IDENTIFIER', 'recover_time')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', 'recover_time')
('DIVIDE', '/')
('IDENTIFIER', '2')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'ground_ref_ent')
('IDENTIFIER', 'waittill')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'rotatedone')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'no_notify')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'recovered')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'adjust_angles_to_player')
('LPAREN', '(')
('IDENTIFIER', 'stumble_angles')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'pa')
('ASSIGNMENT', '=')
('IDENTIFIER', 'stumble_angles')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'ra')
('ASSIGNMENT', '=')
('IDENTIFIER', 'stumble_angles')
('LBRACKET', '[')
('IDENTIFIER', '2')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'rv')
('ASSIGNMENT', '=')
('IDENTIFIER', 'AnglesToRight')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'fv')
('ASSIGNMENT', '=')
('IDENTIFIER', 'AnglesToForward')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'rva')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'rv')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', 'rv')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('MULTIPLY', '*')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'fva')
('ASSIGNMENT', '=')
('LPAREN', '(')
('IDENTIFIER', 'fv')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', 'fv')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('MULTIPLY', '*')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'vector_multiply')
('LPAREN', '(')
('IDENTIFIER', 'rva')
('COMMA', ',')
('IDENTIFIER', 'pa')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'angles')
('ASSIGNMENT', '=')
('IDENTIFIER', 'angles')
('PLUS', '+')
('IDENTIFIER', 'vector_multiply')
('LPAREN', '(')
('IDENTIFIER', 'fva')
('COMMA', ',')
('IDENTIFIER', 'ra')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'angles')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', 'stumble_angles')
('LBRACKET', '[')
('IDENTIFIER', '1')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'coop_player_spawn_placement')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'structs')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstructarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'initial_spawn_points')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'flag_wait')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'all_players_connected')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setorigin')
('LPAREN', '(')
('IDENTIFIER', 'structs')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'setplayerangles')
('LPAREN', '(')
('IDENTIFIER', 'structs')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player_zombie_breadcrumb')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'disconnect')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'min_dist')
('ASSIGNMENT', '=')
('IDENTIFIER', '20')
('MULTIPLY', '*')
('IDENTIFIER', '20')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'total_crumbs')
('ASSIGNMENT', '=')
('IDENTIFIER', '20')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('ASSIGNMENT', '=')
('LBRACKET', '[')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('LBRACKET', '[')
('IDENTIFIER', '0')
('RBRACKET', ']')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'debug_breadcrumbs')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'self')
('IDENTIFIER', 'IsOnGround')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'store_crumb')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'crumb')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'DistanceSquared')
('LPAREN', '(')
('IDENTIFIER', 'crumb')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('COMMA', ',')
('IDENTIFIER', 'min_dist')
('RPAREN', ')')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'min_dist')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'store_crumb')
('ASSIGNMENT', '=')
('IDENTIFIER', 'false')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'store_crumb')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('ASSIGNMENT', '=')
('IDENTIFIER', 'array_insert')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('COMMA', ',')
('IDENTIFIER', 'crumb')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('ASSIGNMENT', '=')
('IDENTIFIER', 'array_limiter')
('LPAREN', '(')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'zombie_breadcrumbs')
('COMMA', ',')
('IDENTIFIER', 'total_crumbs')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'CODER MOD: TOMMY K')
('NEWLINE', '\n')
('COMMENT', '\n=============\nstatGet\n\nReturns the value of the named stat\n=============\n')
('NEWLINE', '\n')
('IDENTIFIER', 'zombieStatGet')
('LPAREN', '(')
('IDENTIFIER', 'dataName')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'systemLink')
('LOGICAL_OR', '||')
('IDENTIFIER', 'true')
('EQUALS_TO', '==')
('IDENTIFIER', 'IsSplitScreen')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('IDENTIFIER', 'self')
('IDENTIFIER', 'getStat')
('LPAREN', '(')
('IDENTIFIER', 'int')
('LPAREN', '(')
('IDENTIFIER', 'tableLookup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mp/playerStatsTable.csv')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', 'dataName')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'CODER MOD: TOMMY K')
('NEWLINE', '\n')
('COMMENT', '\n=============\nsetStat\n\nSets the value of the named stat\n=============\n')
('NEWLINE', '\n')
('IDENTIFIER', 'zombieStatSet')
('LPAREN', '(')
('IDENTIFIER', 'dataName')
('COMMA', ',')
('IDENTIFIER', 'value')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'systemLink')
('LOGICAL_OR', '||')
('IDENTIFIER', 'true')
('EQUALS_TO', '==')
('IDENTIFIER', 'IsSplitScreen')
('LPAREN', '(')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'setStat')
('LPAREN', '(')
('IDENTIFIER', 'int')
('LPAREN', '(')
('IDENTIFIER', 'tableLookup')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'mp/playerStatsTable.csv')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '1')
('COMMA', ',')
('IDENTIFIER', 'dataName')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('COMMA', ',')
('IDENTIFIER', 'value')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('COMMENT', '//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('COMMENT', ' INTERMISSION =========================================================== //')
('NEWLINE', '\n')
('COMMENT', '')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'intermission')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'intermission')
('ASSIGNMENT', '=')
('IDENTIFIER', 'true')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'notify')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intermission')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setclientsysstate')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'levelNotify')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'zi')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('COMMENT', " Tell clientscripts we're in zombie intermission")
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetClientDvars')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'cg_thirdPerson')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '0')
('QUOTE', '"')
('COMMA', ',')
('NEWLINE', '\n')
('QUOTE', '"')
('STRING', 'cg_fov')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '65')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'health')
('ASSIGNMENT', '=')
('IDENTIFIER', '100')
('SEMICOLON', ';')
('COMMENT', " This is needed so the player view doesn't get stuck")
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'player_intermission')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Delay the last stand monitor so we are 100% sure the zombie intermission ("zi") is set on the cients')
('NEWLINE', '\n')
('IDENTIFIER', 'players')
('ASSIGNMENT', '=')
('IDENTIFIER', 'get_players')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'players')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'setClientSysState')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'lsm')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', '1')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'players')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'visionset')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'zombie')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'intermission_visionset')
('QUOTE', '"')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'visionset')
('ASSIGNMENT', '=')
('IDENTIFIER', 'level')
('DOT', '.')
('IDENTIFIER', 'zombie_vars')
('LBRACKET', '[')
('QUOTE', '"')
('STRING', 'intermission_visionset')
('QUOTE', '"')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', '_utility')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'set_all_players_visionset')
('LPAREN', '(')
('IDENTIFIER', 'visionset')
('COMMA', ',')
('IDENTIFIER', '2')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'thread')
('IDENTIFIER', 'zombie_game_over_death')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'zombie_game_over_death')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('COMMENT', ' Kill remaining zombies, in style!')
('NEWLINE', '\n')
('IDENTIFIER', 'zombies')
('ASSIGNMENT', '=')
('IDENTIFIER', 'GetAiArray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'axis')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'zombies')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsAlive')
('LPAREN', '(')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'SetGoalPos')
('LPAREN', '(')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'zombies')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsAlive')
('LPAREN', '(')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'continue')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '5')
('PLUS', '+')
('IDENTIFIER', 'RandomFloat')
('LPAREN', '(')
('IDENTIFIER', '2')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'maps')
('PATH_SEPARATOR', '\\')
('IDENTIFIER', 'payload_zombiemode_spawner')
('DOUBLE_COLON', '::')
('IDENTIFIER', 'zombie_head_gib')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('IDENTIFIER', 'DoDamage')
('LPAREN', '(')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'health')
('PLUS', '+')
('IDENTIFIER', '666')
('COMMA', ',')
('IDENTIFIER', 'zombies')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'player_intermission')
('LPAREN', '(')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'closeMenu')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'closeInGameMenu')
('LPAREN', '(')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'level')
('IDENTIFIER', 'endon')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'stop_intermission')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', 'Show total gained point for end scoreboard and lobby')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'score')
('ASSIGNMENT', '=')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'score_total')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'sessionstate')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'intermission')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'spectatorclient')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'killcamentity')
('ASSIGNMENT', '=')
('SUBTRACT', '-')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'archivetime')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'psoffsettime')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'friendlydamage')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'points')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstructarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'intermission')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'points')
('RPAREN', ')')
('LOGICAL_OR', '||')
('IDENTIFIER', 'points')
('DOT', '.')
('IDENTIFIER', 'size')
('EQUALS_TO', '==')
('IDENTIFIER', '0')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'points')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getentarray')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'info_intermission')
('QUOTE', '"')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'classname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'points')
('DOT', '.')
('IDENTIFIER', 'size')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'println')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'NO info_intermission POINTS IN MAP')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'return')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('ASSIGNMENT', '=')
('IDENTIFIER', 'NewClientHudelem')
('LPAREN', '(')
('IDENTIFIER', 'self')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'horzAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fullscreen')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'vertAlign')
('ASSIGNMENT', '=')
('QUOTE', '"')
('STRING', 'fullscreen')
('QUOTE', '"')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('IDENTIFIER', 'SetShader')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'black')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', '640')
('COMMA', ',')
('IDENTIFIER', '480')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'org')
('ASSIGNMENT', '=')
('IDENTIFIER', 'undefined')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'while')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'points')
('ASSIGNMENT', '=')
('IDENTIFIER', 'array_randomize')
('LPAREN', '(')
('IDENTIFIER', 'points')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'for')
('LPAREN', '(')
('IDENTIFIER', 'i')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('LESS_THAN_OR_EQUAL_TO', '<')
('IDENTIFIER', 'points')
('DOT', '.')
('IDENTIFIER', 'size')
('SEMICOLON', ';')
('IDENTIFIER', 'i')
('PLUS', '+')
('PLUS', '+')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('SEMICOLON', ';')
('NEWLINE', '\n')
('COMMENT', " Only spawn once if we are using 'moving' org")
('NEWLINE', '\n')
('COMMENT', ' If only using info_intermissions, this will respawn after 5 seconds.')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'org')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'Spawn')
('LPAREN', '(')
('IDENTIFIER', 'point')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'point')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('COMMENT', ' Only used with STRUCTS')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'target')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('LOGICAL_NOT', '!')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'org')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'org')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Spawn')
('LPAREN', '(')
('QUOTE', '"')
('STRING', 'script_origin')
('QUOTE', '"')
('COMMA', ',')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'origin')
('PLUS', '+')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '60')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'LinkTo')
('LPAREN', '(')
('IDENTIFIER', 'org')
('COMMA', ',')
('QUOTE', '"')
('STRING', '')
('QUOTE', '"')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('SUBTRACT', '-')
('IDENTIFIER', '60')
('RPAREN', ')')
('COMMA', ',')
('LPAREN', '(')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('COMMA', ',')
('IDENTIFIER', '0')
('RPAREN', ')')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('IDENTIFIER', 'SetPlayerAngles')
('LPAREN', '(')
('IDENTIFIER', 'points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'angles')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'org')
('DOT', '.')
('IDENTIFIER', 'origin')
('ASSIGNMENT', '=')
('IDENTIFIER', 'points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'speed')
('ASSIGNMENT', '=')
('IDENTIFIER', '20')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'IsDefined')
('LPAREN', '(')
('IDENTIFIER', 'points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'speed')
('RPAREN', ')')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'speed')
('ASSIGNMENT', '=')
('IDENTIFIER', 'points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'speed')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'target_point')
('ASSIGNMENT', '=')
('IDENTIFIER', 'getstruct')
('LPAREN', '(')
('IDENTIFIER', 'points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'target')
('COMMA', ',')
('QUOTE', '"')
('STRING', 'targetname')
('QUOTE', '"')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'dist')
('ASSIGNMENT', '=')
('IDENTIFIER', 'Distance')
('LPAREN', '(')
('IDENTIFIER', 'points')
('LBRACKET', '[')
('IDENTIFIER', 'i')
('RBRACKET', ']')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'target_point')
('DOT', '.')
('IDENTIFIER', 'origin')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'dist')
('DIVIDE', '/')
('IDENTIFIER', 'speed')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'q_time')
('ASSIGNMENT', '=')
('IDENTIFIER', 'time')
('MULTIPLY', '*')
('IDENTIFIER', '0')
('DOT', '.')
('IDENTIFIER', '25')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'if')
('LPAREN', '(')
('IDENTIFIER', 'q_time')
('GREATER_THAN', '>')
('IDENTIFIER', '1')
('RPAREN', ')')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'q_time')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'q_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'org')
('IDENTIFIER', 'MoveTo')
('LPAREN', '(')
('IDENTIFIER', 'target_point')
('DOT', '.')
('IDENTIFIER', 'origin')
('COMMA', ',')
('IDENTIFIER', 'time')
('COMMA', ',')
('IDENTIFIER', 'q_time')
('COMMA', ',')
('IDENTIFIER', 'q_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'time')
('SUBTRACT', '-')
('IDENTIFIER', 'q_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', 'q_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', 'q_time')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('IDENTIFIER', 'else')
('NEWLINE', '\n')
('LBRACE', '{')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '0')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '5')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('IDENTIFIER', 'FadeOverTime')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('IDENTIFIER', 'self')
('DOT', '.')
('IDENTIFIER', 'game_over_bg')
('DOT', '.')
('IDENTIFIER', 'alpha')
('ASSIGNMENT', '=')
('IDENTIFIER', '1')
('SEMICOLON', ';')
('NEWLINE', '\n')
('NEWLINE', '\n')
('IDENTIFIER', 'wait')
('LPAREN', '(')
('IDENTIFIER', '1')
('RPAREN', ')')
('SEMICOLON', ';')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('NEWLINE', '\n')
('RBRACE', '}')
('EOF', None)